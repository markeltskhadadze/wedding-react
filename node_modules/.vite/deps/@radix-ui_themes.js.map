{
  "version": 3,
  "sources": ["../../classnames/index.js", "../../@radix-ui/themes/src/components/accessible-icon.tsx", "../../@radix-ui/themes/src/components/alert-dialog.tsx", "../../@radix-ui/themes/src/props/as-child.prop.ts", "../../@radix-ui/themes/src/props/width.props.ts", "../../@radix-ui/themes/src/props/height.props.ts", "../../@radix-ui/themes/src/components/dialog.props.tsx", "../../@radix-ui/themes/src/components/heading.tsx", "../../@radix-ui/themes/src/props/color.prop.ts", "../../@radix-ui/themes/src/props/high-contrast.prop.ts", "../../@radix-ui/themes/src/props/leading-trim.prop.ts", "../../@radix-ui/themes/src/props/text-align.prop.ts", "../../@radix-ui/themes/src/props/text-wrap.prop.ts", "../../@radix-ui/themes/src/props/truncate.prop.ts", "../../@radix-ui/themes/src/props/weight.prop.ts", "../../@radix-ui/themes/src/components/heading.props.tsx", "../../@radix-ui/themes/src/helpers/extract-props.ts", "../../@radix-ui/themes/src/props/prop-def.ts", "../../@radix-ui/themes/src/helpers/has-own-property.ts", "../../@radix-ui/themes/src/helpers/is-responsive-object.ts", "../../@radix-ui/themes/src/helpers/get-responsive-styles.ts", "../../@radix-ui/themes/src/helpers/merge-styles.ts", "../../@radix-ui/themes/src/props/margin.props.ts", "../../@radix-ui/themes/src/components/text.tsx", "../../@radix-ui/themes/src/components/text.props.tsx", "../../@radix-ui/themes/src/components/theme.tsx", "../../@radix-ui/themes/src/helpers/get-matching-gray-color.ts", "../../@radix-ui/themes/src/props/radius.prop.ts", "../../@radix-ui/themes/src/components/theme.props.tsx", "../../@radix-ui/themes/src/helpers/require-react-element.ts", "../../@radix-ui/themes/src/components/aspect-ratio.tsx", "../../@radix-ui/themes/src/components/avatar.tsx", "../../@radix-ui/themes/src/components/avatar.props.tsx", "../../@radix-ui/themes/src/helpers/get-subtree.ts", "../../@radix-ui/themes/src/components/badge.tsx", "../../@radix-ui/themes/src/components/badge.props.tsx", "../../@radix-ui/themes/src/components/blockquote.tsx", "../../@radix-ui/themes/src/components/box.tsx", "../../@radix-ui/themes/src/components/slot.tsx", "../../@radix-ui/themes/src/components/box.props.tsx", "../../@radix-ui/themes/src/props/padding.props.ts", "../../@radix-ui/themes/src/props/layout.props.ts", "../../@radix-ui/themes/src/components/button.tsx", "../../@radix-ui/themes/src/components/_internal/base-button.tsx", "../../@radix-ui/themes/src/components/_internal/base-button.props.ts", "../../@radix-ui/themes/src/components/flex.tsx", "../../@radix-ui/themes/src/props/gap.props.ts", "../../@radix-ui/themes/src/components/flex.props.tsx", "../../@radix-ui/themes/src/components/spinner.tsx", "../../@radix-ui/themes/src/components/spinner.props.tsx", "../../@radix-ui/themes/src/components/visually-hidden.tsx", "../../@radix-ui/themes/src/helpers/map-prop-values.ts", "../../@radix-ui/themes/src/components/callout.tsx", "../../@radix-ui/themes/src/components/callout.props.tsx", "../../@radix-ui/themes/src/components/card.tsx", "../../@radix-ui/themes/src/components/card.props.tsx", "../../@radix-ui/themes/src/components/checkbox-cards.tsx", "../../radix-ui/src/internal.ts", "../../@radix-ui/themes/src/components/checkbox-group.primitive.tsx", "../../@radix-ui/themes/src/components/grid.props.tsx", "../../@radix-ui/themes/src/components/checkbox-cards.props.tsx", "../../@radix-ui/themes/src/components/_internal/base-checkbox.props.ts", "../../@radix-ui/themes/src/components/grid.tsx", "../../@radix-ui/themes/src/components/icons.tsx", "../../@radix-ui/themes/src/components/checkbox-group.tsx", "../../@radix-ui/themes/src/components/checkbox-group.props.tsx", "../../@radix-ui/themes/src/components/checkbox.tsx", "../../@radix-ui/themes/src/components/code.tsx", "../../@radix-ui/themes/src/components/code.props.tsx", "../../@radix-ui/themes/src/components/container.tsx", "../../@radix-ui/themes/src/components/container.props.tsx", "../../@radix-ui/themes/src/components/context-menu.tsx", "../../@radix-ui/themes/src/components/scroll-area.tsx", "../../@radix-ui/themes/src/components/scroll-area.props.tsx", "../../@radix-ui/themes/src/helpers/extract-margin-props.ts", "../../@radix-ui/themes/src/helpers/get-margin-styles.ts", "../../@radix-ui/themes/src/components/_internal/base-menu.props.ts", "../../@radix-ui/themes/src/components/data-list.tsx", "../../@radix-ui/themes/src/components/data-list.props.tsx", "../../@radix-ui/themes/src/components/dialog.tsx", "../../@radix-ui/themes/src/components/dropdown-menu.tsx", "../../@radix-ui/themes/src/components/em.tsx", "../../@radix-ui/themes/src/components/em.props.tsx", "../../@radix-ui/themes/src/components/hover-card.tsx", "../../@radix-ui/themes/src/components/hover-card.props.tsx", "../../@radix-ui/themes/src/components/icon-button.tsx", "../../@radix-ui/themes/src/components/inset.tsx", "../../@radix-ui/themes/src/components/inset.props.tsx", "../../@radix-ui/themes/src/components/kbd.tsx", "../../@radix-ui/themes/src/components/kbd.props.tsx", "../../@radix-ui/themes/src/components/link.tsx", "../../@radix-ui/themes/src/components/link.props.tsx", "../../@radix-ui/themes/src/components/popover.tsx", "../../@radix-ui/themes/src/components/popover.props.tsx", "../../@radix-ui/themes/src/components/portal.tsx", "../../@radix-ui/themes/src/components/progress.tsx", "../../@radix-ui/themes/src/components/progress.props.tsx", "../../@radix-ui/themes/src/components/quote.tsx", "../../@radix-ui/themes/src/components/quote.props.tsx", "../../@radix-ui/themes/src/components/radio-cards.tsx", "../../@radix-ui/themes/src/components/radio-cards.props.tsx", "../../@radix-ui/themes/src/components/radio-group.tsx", "../../@radix-ui/themes/src/components/radio-group.props.tsx", "../../@radix-ui/themes/src/components/radio.tsx", "../../@radix-ui/themes/src/components/_internal/base-radio.props.ts", "../../@radix-ui/themes/src/components/reset.tsx", "../../@radix-ui/themes/src/components/segmented-control.tsx", "../../@radix-ui/themes/src/components/segmented-control.props.tsx", "../../@radix-ui/themes/src/components/section.tsx", "../../@radix-ui/themes/src/components/section.props.tsx", "../../@radix-ui/themes/src/components/select.tsx", "../../@radix-ui/themes/src/components/select.props.tsx", "../../@radix-ui/themes/src/components/separator.tsx", "../../@radix-ui/themes/src/components/separator.props.tsx", "../../@radix-ui/themes/src/components/skeleton.tsx", "../../@radix-ui/themes/src/helpers/inert.ts", "../../@radix-ui/themes/src/components/skeleton.props.tsx", "../../@radix-ui/themes/src/components/slider.tsx", "../../@radix-ui/themes/src/components/slider.props.tsx", "../../@radix-ui/themes/src/components/strong.tsx", "../../@radix-ui/themes/src/components/strong.props.tsx", "../../@radix-ui/themes/src/components/switch.tsx", "../../@radix-ui/themes/src/components/switch.props.tsx", "../../@radix-ui/themes/src/components/tab-nav.tsx", "../../@radix-ui/themes/src/components/_internal/base-tab-list.props.ts", "../../@radix-ui/themes/src/components/tab-nav.props.tsx", "../../@radix-ui/themes/src/components/table.tsx", "../../@radix-ui/themes/src/components/table.props.tsx", "../../@radix-ui/themes/src/components/tabs.tsx", "../../@radix-ui/themes/src/components/tabs.props.tsx", "../../@radix-ui/themes/src/components/text-area.tsx", "../../@radix-ui/themes/src/components/text-area.props.tsx", "../../@radix-ui/themes/src/components/text-field.tsx", "../../@radix-ui/themes/src/components/text-field.props.tsx", "../../@radix-ui/themes/src/components/theme-panel.tsx", "../../@radix-ui/themes/src/components/tooltip.tsx", "../../@radix-ui/themes/src/components/tooltip.props.tsx"],
  "sourcesContent": ["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n", "import { AccessibleIcon as AccessibleIconPrimitive } from 'radix-ui';\nexport const AccessibleIcon = AccessibleIconPrimitive.Root;\nexport type AccessibleIconProps = AccessibleIconPrimitive.AccessibleIconProps;\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { AlertDialog as AlertDialogPrimitive } from 'radix-ui';\n\nimport { alertDialogContentPropDefs } from './alert-dialog.props.js';\nimport { Heading } from './heading.js';\nimport { Text } from './text.js';\nimport { Theme } from './theme.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { AlertDialogContentOwnProps } from './alert-dialog.props.js';\nimport type {\n  ComponentPropsWithout,\n  RemovedProps,\n  ComponentPropsAs,\n} from '../helpers/component-props.js';\n\ninterface AlertDialogRootProps\n  extends React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Root> {}\nconst AlertDialogRoot: React.FC<AlertDialogRootProps> = (props) => (\n  <AlertDialogPrimitive.Root {...props} />\n);\nAlertDialogRoot.displayName = 'AlertDialog.Root';\n\ntype AlertDialogTriggerElement = React.ElementRef<typeof AlertDialogPrimitive.Trigger>;\ninterface AlertDialogTriggerProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Trigger, RemovedProps> {}\nconst AlertDialogTrigger = React.forwardRef<AlertDialogTriggerElement, AlertDialogTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Trigger>\n  )\n);\nAlertDialogTrigger.displayName = 'AlertDialog.Trigger';\n\ntype AlertDialogContentElement = React.ElementRef<typeof AlertDialogPrimitive.Content>;\ninterface AlertDialogContentProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Content, RemovedProps>,\n    AlertDialogContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Portal>['container'];\n}\nconst AlertDialogContent = React.forwardRef<AlertDialogContentElement, AlertDialogContentProps>(\n  ({ align, ...props }, forwardedRef) => {\n    const { align: alignPropDef, ...propDefs } = alertDialogContentPropDefs;\n    const { className: alignClassName } = extractProps({ align }, { align: alignPropDef });\n    const { className, forceMount, container, ...contentProps } = extractProps(props, propDefs);\n    return (\n      <AlertDialogPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <AlertDialogPrimitive.Overlay className=\"rt-BaseDialogOverlay rt-AlertDialogOverlay\">\n            <div className=\"rt-BaseDialogScroll rt-AlertDialogScroll\">\n              <div\n                className={`rt-BaseDialogScrollPadding rt-AlertDialogScrollPadding ${alignClassName}`}\n              >\n                <AlertDialogPrimitive.Content\n                  {...contentProps}\n                  ref={forwardedRef}\n                  className={classNames('rt-BaseDialogContent', 'rt-AlertDialogContent', className)}\n                />\n              </div>\n            </div>\n          </AlertDialogPrimitive.Overlay>\n        </Theme>\n      </AlertDialogPrimitive.Portal>\n    );\n  }\n);\nAlertDialogContent.displayName = 'AlertDialog.Content';\n\ntype AlertDialogTitleElement = React.ElementRef<typeof Heading>;\ntype AlertDialogTitleProps = ComponentPropsWithout<typeof Heading, 'asChild'>;\nconst AlertDialogTitle = React.forwardRef<AlertDialogTitleElement, AlertDialogTitleProps>(\n  (props, forwardedRef) => (\n    <AlertDialogPrimitive.Title asChild>\n      <Heading size=\"5\" mb=\"3\" trim=\"start\" {...props} asChild={false} ref={forwardedRef} />\n    </AlertDialogPrimitive.Title>\n  )\n);\nAlertDialogTitle.displayName = 'AlertDialog.Title';\n\ntype AlertDialogDescriptionElement = HTMLParagraphElement;\ntype AlertDialogDescriptionProps = ComponentPropsAs<typeof Text, 'p'>;\nconst AlertDialogDescription = React.forwardRef<\n  AlertDialogDescriptionElement,\n  AlertDialogDescriptionProps\n>((props, forwardedRef) => (\n  <AlertDialogPrimitive.Description asChild>\n    <Text as=\"p\" size=\"3\" {...props} asChild={false} ref={forwardedRef} />\n  </AlertDialogPrimitive.Description>\n));\nAlertDialogDescription.displayName = 'AlertDialog.Description';\n\ntype AlertDialogActionElement = React.ElementRef<typeof AlertDialogPrimitive.Action>;\ninterface AlertDialogActionProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Action, RemovedProps> {}\nconst AlertDialogAction = React.forwardRef<AlertDialogActionElement, AlertDialogActionProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Action {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Action>\n  )\n);\nAlertDialogAction.displayName = 'AlertDialog.Action';\n\ntype AlertDialogCancelElement = React.ElementRef<typeof AlertDialogPrimitive.Cancel>;\ninterface AlertDialogCancelProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Cancel, RemovedProps> {}\nconst AlertDialogCancel = React.forwardRef<AlertDialogCancelElement, AlertDialogCancelProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Cancel {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Cancel>\n  )\n);\nAlertDialogCancel.displayName = 'AlertDialog.Cancel';\n\nexport {\n  AlertDialogRoot as Root,\n  AlertDialogTrigger as Trigger,\n  AlertDialogContent as Content,\n  AlertDialogTitle as Title,\n  AlertDialogDescription as Description,\n  AlertDialogAction as Action,\n  AlertDialogCancel as Cancel,\n};\n\nexport type {\n  AlertDialogRootProps as RootProps,\n  AlertDialogTriggerProps as TriggerProps,\n  AlertDialogContentProps as ContentProps,\n  AlertDialogTitleProps as TitleProps,\n  AlertDialogDescriptionProps as DescriptionProps,\n  AlertDialogActionProps as ActionProps,\n  AlertDialogCancelProps as CancelProps,\n};\n", "import type { PropDef } from './prop-def.js';\n\nconst asChildPropDef = {\n  /**\n   * Composes the component into its immediate child instead of rendering its own HTML element.\n   * You\u2019ll have to provide a single React Element child.\n   */\n  asChild: {\n    type: 'boolean',\n  },\n} satisfies {\n  asChild: PropDef<boolean>;\n};\n\nexport { asChildPropDef };\n", "import type { GetPropDefTypes, PropDef } from './prop-def.js';\n\nconst widthPropDefs = {\n  /**\n   * Sets the CSS **width** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * width=\"100px\"\n   * width={{ md: '100vw', xl: '1400px' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/width\n   */\n  width: {\n    type: 'string',\n    className: 'rt-r-w',\n    customProperties: ['--width'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **min-width** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * minWidth=\"100px\"\n   * minWidth={{ md: '100vw', xl: '1400px' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/min-width\n   */\n  minWidth: {\n    type: 'string',\n    className: 'rt-r-min-w',\n    customProperties: ['--min-width'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **max-width** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * maxWidth=\"100px\"\n   * maxWidth={{ md: '100vw', xl: '1400px' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/max-width\n   */\n  maxWidth: {\n    type: 'string',\n    className: 'rt-r-max-w',\n    customProperties: ['--max-width'],\n    responsive: true,\n  },\n} satisfies {\n  width: PropDef<string>;\n  minWidth: PropDef<string>;\n  maxWidth: PropDef<string>;\n};\n\ntype WidthProps = GetPropDefTypes<typeof widthPropDefs>;\n\nexport { widthPropDefs };\nexport type { WidthProps };\n", "import type { PropDef, GetPropDefTypes } from './prop-def.js';\n\nconst heightPropDefs = {\n  /**\n   * Sets the CSS **height** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * height=\"100px\"\n   * height={{ md: '100vh', xl: '600px' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/height\n   */\n  height: {\n    type: 'string',\n    className: 'rt-r-h',\n    customProperties: ['--height'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **min-height** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * minHeight=\"100px\"\n   * minHeight={{ md: '100vh', xl: '600px' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/min-height\n   */\n  minHeight: {\n    type: 'string',\n    className: 'rt-r-min-h',\n    customProperties: ['--min-height'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **max-height** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * maxHeight=\"100px\"\n   * maxHeight={{ md: '100vh', xl: '600px' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/max-height\n   */\n  maxHeight: {\n    type: 'string',\n    className: 'rt-r-max-h',\n    customProperties: ['--max-height'],\n    responsive: true,\n  },\n} satisfies {\n  height: PropDef<string>;\n  minHeight: PropDef<string>;\n  maxHeight: PropDef<string>;\n};\n\ntype HeightProps = GetPropDefTypes<typeof heightPropDefs>;\n\nexport { heightPropDefs };\nexport type { HeightProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { widthPropDefs } from '../props/width.props.js';\nimport { heightPropDefs } from '../props/height.props.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst alignValues = ['start', 'center'] as const;\nconst contentSizes = ['1', '2', '3', '4'] as const;\n\nconst dialogContentPropDefs = {\n  ...asChildPropDef,\n  align: {\n    type: 'enum',\n    className: 'rt-r-align',\n    values: ['start', 'center'],\n    default: 'center',\n  },\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: contentSizes,\n    default: '3',\n    responsive: true,\n  },\n  width: widthPropDefs.width,\n  minWidth: widthPropDefs.minWidth,\n  maxWidth: { ...widthPropDefs.maxWidth, default: '600px' },\n  ...heightPropDefs,\n} satisfies {\n  align: PropDef<(typeof alignValues)[number]>;\n  size: PropDef<(typeof contentSizes)[number]>;\n  width: PropDef<string>;\n  minWidth: PropDef<string>;\n  maxWidth: PropDef<string>;\n};\n\ntype DialogContentOwnProps = GetPropDefTypes<\n  typeof dialogContentPropDefs & typeof asChildPropDef & typeof widthPropDefs\n>;\n\nexport { dialogContentPropDefs };\nexport type { DialogContentOwnProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { headingPropDefs } from './heading.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype HeadingElement = React.ElementRef<'h1'>;\ntype HeadingOwnProps = GetPropDefTypes<typeof headingPropDefs>;\ninterface HeadingProps\n  extends ComponentPropsWithout<'h1', RemovedProps>,\n    MarginProps,\n    HeadingOwnProps {}\n\nconst Heading = React.forwardRef<HeadingElement, HeadingProps>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    asChild,\n    as: Tag = 'h1',\n    color,\n    ...headingProps\n  } = extractProps(props, headingPropDefs, marginPropDefs);\n  return (\n    <Slot.Root\n      data-accent-color={color}\n      {...headingProps}\n      ref={forwardedRef}\n      className={classNames('rt-Heading', className)}\n    >\n      {asChild ? children : <Tag>{children}</Tag>}\n    </Slot.Root>\n  );\n});\nHeading.displayName = 'Heading';\n\nexport { Heading };\nexport type { HeadingProps };\n", "import type { PropDef } from './prop-def.js';\n\n// prettier-ignore\nconst accentColors = ['gray', 'gold', 'bronze', 'brown', 'yellow', 'amber', 'orange', 'tomato', 'red', 'ruby', 'crimson', 'pink', 'plum', 'purple', 'violet', 'iris', 'indigo', 'blue', 'cyan', 'teal', 'jade', 'green', 'grass', 'lime', 'mint', 'sky'] as const;\n\nconst grayColors = ['auto', 'gray', 'mauve', 'slate', 'sage', 'olive', 'sand'] as const;\n\nconst colorPropDef = {\n  color: {\n    type: 'enum',\n    values: accentColors,\n    default: undefined as (typeof accentColors)[number] | undefined,\n  },\n} satisfies {\n  color: PropDef<(typeof accentColors)[number]>;\n};\n\n// 1. When used on components that compose Text, sets the color of the text to the current accent.\n// 2. Defines accent color for descendant text components\u00A0with `highContrast={true}`.\nconst accentColorPropDef = {\n  color: {\n    type: 'enum',\n    values: accentColors,\n    default: '' as (typeof accentColors)[number],\n  },\n} satisfies {\n  color: PropDef<(typeof accentColors)[number]>;\n};\n\nexport {\n  accentColorPropDef,\n  colorPropDef,\n  //\n  accentColors,\n  grayColors,\n};\n", "import type { PropDef } from './prop-def.js';\n\nconst highContrastPropDef = {\n  highContrast: {\n    type: 'boolean',\n    className: 'rt-high-contrast',\n    default: undefined,\n  },\n} satisfies {\n  highContrast: PropDef<boolean>;\n};\n\nexport { highContrastPropDef };\n", "import type { PropDef } from './prop-def.js';\n\nconst leadingTrimValues = ['normal', 'start', 'end', 'both'] as const;\n\nconst leadingTrimPropDef = {\n  trim: {\n    type: 'enum',\n    className: 'rt-r-lt',\n    values: leadingTrimValues,\n    responsive: true,\n  },\n} satisfies {\n  trim: PropDef<(typeof leadingTrimValues)[number]>;\n};\n\nexport { leadingTrimPropDef };\n", "import type { PropDef } from './prop-def.js';\n\nconst textAlignValues = ['left', 'center', 'right'] as const;\n\nconst textAlignPropDef = {\n  align: {\n    type: 'enum',\n    className: 'rt-r-ta',\n    values: textAlignValues,\n    responsive: true,\n  },\n} satisfies {\n  align: PropDef<(typeof textAlignValues)[number]>;\n};\n\nexport { textAlignPropDef };\n", "import type { PropDef } from './prop-def.js';\n\nconst textWrapValues = ['wrap', 'nowrap', 'pretty', 'balance'] as const;\n\nconst textWrapPropDef = {\n  wrap: {\n    type: 'enum',\n    className: 'rt-r-tw',\n    values: textWrapValues,\n    responsive: true,\n  },\n} satisfies {\n  wrap: PropDef<(typeof textWrapValues)[number]>;\n};\n\nexport { textWrapPropDef };\n", "import type { PropDef } from './prop-def.js';\n\nconst truncatePropDef = {\n  truncate: {\n    type: 'boolean',\n    className: 'rt-truncate',\n  },\n} satisfies {\n  truncate: PropDef<boolean>;\n};\n\nexport { truncatePropDef };\n", "import type { PropDef } from './prop-def.js';\n\nconst weights = ['light', 'regular', 'medium', 'bold'] as const;\n\nconst weightPropDef = {\n  weight: {\n    type: 'enum',\n    className: 'rt-r-weight',\n    values: weights,\n    responsive: true,\n  },\n} satisfies {\n  weight: PropDef<(typeof weights)[number]>;\n};\n\nexport { weightPropDef };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { leadingTrimPropDef } from '../props/leading-trim.prop.js';\nimport { textAlignPropDef } from '../props/text-align.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\nimport { weightPropDef } from '../props/weight.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst as = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] as const;\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\n\nconst headingPropDefs = {\n  as: { type: 'enum', values: as, default: 'h1' },\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    default: '6',\n    responsive: true,\n  },\n  ...weightPropDef,\n  ...textAlignPropDef,\n  ...leadingTrimPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  as: PropDef<(typeof as)[number]>;\n  size: PropDef<(typeof sizes)[number]>;\n};\n\nexport { headingPropDefs };\n", "import classNames from 'classnames';\n\nimport { getResponsiveClassNames, getResponsiveStyles } from './get-responsive-styles.js';\nimport { isResponsiveObject } from './is-responsive-object.js';\nimport { mergeStyles } from './merge-styles.js';\n\nimport type * as React from 'react';\nimport type { PropDef } from '../props/prop-def.js';\n\ntype PropDefsWithClassName<T> = T extends Record<string, PropDef>\n  ? { [K in keyof T]: T[K] extends { className: string } ? K : never }[keyof T]\n  : never;\n\nfunction mergePropDefs<T extends Record<string, PropDef>[]>(...args: T): Record<string, PropDef> {\n  return Object.assign({}, ...args);\n}\n\n/**\n * Takes props, checks them against prop defs that have a `className` on them,\n * adds necessary CSS classes and inline styles, and returns the props without\n * the corresponding prop defs that were used to formulate the new `className`\n * and `style` values. Also applies prop def defaults to every prop.\n */\nfunction extractProps<\n  P extends { className?: string; style?: React.CSSProperties; [key: string]: any },\n  T extends Record<string, PropDef>[]\n>(\n  props: P,\n  ...propDefs: T\n): Omit<P & { className?: string; style?: React.CSSProperties }, PropDefsWithClassName<T[number]>> {\n  let className: string | undefined;\n  let style: ReturnType<typeof mergeStyles>;\n  const extractedProps = { ...props };\n  const allPropDefs = mergePropDefs(...propDefs);\n\n  for (const key in allPropDefs) {\n    let value = extractedProps[key];\n    const propDef = allPropDefs[key];\n\n    // Apply prop def defaults\n    if (propDef.default !== undefined && value === undefined) {\n      value = propDef.default;\n    }\n\n    // Apply the default value if the value is not a valid enum value\n    if (propDef.type === 'enum') {\n      const values = [propDef.default, ...propDef.values];\n\n      if (!values.includes(value) && !isResponsiveObject(value)) {\n        value = propDef.default;\n      }\n    }\n\n    // Apply the value with defaults\n    (extractedProps as Record<string, any>)[key] = value;\n\n    if ('className' in propDef && propDef.className) {\n      delete extractedProps[key];\n\n      const isResponsivePropDef = 'responsive' in propDef;\n      // Make sure we are not threading through responsive values for non-responsive prop defs\n      if (!value || (isResponsiveObject(value) && !isResponsivePropDef)) {\n        continue;\n      }\n\n      if (isResponsiveObject(value)) {\n        // Apply prop def defaults to the `initial` breakpoint\n        if (propDef.default !== undefined && value.initial === undefined) {\n          value.initial = propDef.default;\n        }\n\n        // Apply the default value to the `initial` breakpoint when it is not a valid enum value\n        if (propDef.type === 'enum') {\n          const values = [propDef.default, ...propDef.values];\n\n          if (!values.includes(value.initial)) {\n            value.initial = propDef.default;\n          }\n        }\n      }\n\n      if (propDef.type === 'enum') {\n        const propClassName = getResponsiveClassNames({\n          allowArbitraryValues: false,\n          value,\n          className: propDef.className,\n          propValues: propDef.values,\n          parseValue: propDef.parseValue,\n        });\n\n        className = classNames(className, propClassName);\n        continue;\n      }\n\n      if (propDef.type === 'string' || propDef.type === 'enum | string') {\n        const propDefValues = propDef.type === 'string' ? [] : propDef.values;\n\n        const [propClassNames, propCustomProperties] = getResponsiveStyles({\n          className: propDef.className,\n          customProperties: propDef.customProperties,\n          propValues: propDefValues,\n          parseValue: propDef.parseValue,\n          value,\n        });\n\n        style = mergeStyles(style, propCustomProperties);\n        className = classNames(className, propClassNames);\n        continue;\n      }\n\n      if (propDef.type === 'boolean' && value) {\n        // TODO handle responsive boolean props\n        className = classNames(className, propDef.className);\n        continue;\n      }\n    }\n  }\n\n  extractedProps.className = classNames(className, props.className);\n  extractedProps.style = mergeStyles(style, props.style);\n  return extractedProps;\n}\n\nexport { extractProps };\n", "import type React from 'react';\n\n// Creates a union type of string literals with strings, but retains intellisense for the literals.\n// Union<string, 'foo' | 'bar'> => string | Omit<string, 'foo' | 'bar'>\ntype Union<S = string, T extends string | number = string> = T | Omit<S, T>;\n\nconst breakpoints = ['initial', 'xs', 'sm', 'md', 'lg', 'xl'] as const;\ntype Breakpoint = (typeof breakpoints)[number];\ntype Responsive<T> = T | Partial<Record<Breakpoint, T>>;\n\ntype BooleanPropDef = {\n  type: 'boolean';\n  default?: boolean;\n  required?: boolean;\n  className?: string;\n};\ntype StringPropDef = {\n  type: 'string';\n  default?: string;\n  required?: boolean;\n};\ntype ReactNodePropDef = {\n  type: 'ReactNode';\n  default?: React.ReactNode;\n  required?: boolean;\n};\ntype EnumPropDef<T> = {\n  type: 'enum';\n  values: readonly T[];\n  default?: T;\n  required?: boolean;\n};\ntype EnumOrStringPropDef<T> = {\n  type: 'enum | string';\n  values: readonly T[];\n  default?: T | string;\n  required?: boolean;\n};\n\ntype NonStylingPropDef = {\n  className?: never;\n  customProperties?: never;\n  parseValue?: never;\n};\n\ntype StylingPropDef = {\n  className: string;\n  parseValue?: (value: string) => string | undefined;\n};\n\ntype ArbitraryStylingPropDef = {\n  className: string;\n  customProperties: `--${string}`[];\n  parseValue?: (value: string) => string | undefined;\n};\n\ntype RegularPropDef<T> =\n  | ReactNodePropDef\n  | BooleanPropDef\n  | (StringPropDef & ArbitraryStylingPropDef)\n  | (StringPropDef & NonStylingPropDef)\n  | (EnumPropDef<T> & StylingPropDef)\n  | (EnumPropDef<T> & NonStylingPropDef)\n  | (EnumOrStringPropDef<T> & ArbitraryStylingPropDef)\n  | (EnumOrStringPropDef<T> & NonStylingPropDef);\ntype ResponsivePropDef<T = any> = RegularPropDef<T> & { responsive: true };\ntype PropDef<T = any> = RegularPropDef<T> | ResponsivePropDef<T>;\n\n// prettier-ignore\ntype GetPropDefType<Def> =\n    Def extends BooleanPropDef ? (Def extends ResponsivePropDef ? Responsive<boolean> : boolean)\n  : Def extends StringPropDef ? (Def extends ResponsivePropDef ? Responsive<string> : string)\n  : Def extends ReactNodePropDef ? (Def extends ResponsivePropDef ? Responsive<React.ReactNode> : React.ReactNode)\n  : Def extends EnumOrStringPropDef<infer Type> ?\n    Def extends ResponsivePropDef<infer Type extends string> ? Responsive<Union<string, Type>> : Type\n  : Def extends EnumPropDef<infer Type> ? (Def extends ResponsivePropDef<infer Type> ? Responsive<Type> : Type)\n  : never;\n\ntype GetPropDefTypes<P> = {\n  [K in keyof P]?: GetPropDefType<P[K]>;\n};\n\nexport { breakpoints };\nexport type {\n  PropDef,\n  GetPropDefTypes,\n  ResponsivePropDef,\n  //\n  Breakpoint,\n  Responsive,\n  Union,\n};\n", "/** A util to check whether the object has a key, while inferring the correct key type */\nfunction hasOwnProperty<K extends string | number | symbol>(\n  obj: Record<K, unknown>,\n  key: string | number | symbol\n): key is K {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport { hasOwnProperty };\n", "import { breakpoints } from '../props/prop-def.js';\n\nimport type { Responsive, Breakpoint } from '../props/prop-def.js';\n\nexport function isResponsiveObject<Value extends string>(\n  obj: Responsive<Value | Omit<string, Value>> | undefined\n): obj is Record<Breakpoint, string> {\n  return (\n    typeof obj === 'object' &&\n    Object.keys(obj).some((key) => (breakpoints as readonly string[]).includes(key))\n  );\n}\n", "import { breakpoints } from '../props/prop-def.js';\nimport { hasOwnProperty } from './has-own-property.js';\nimport { isResponsiveObject } from './is-responsive-object.js';\n\nimport type { Responsive, Union } from '../props/prop-def.js';\n\ninterface GetResponsiveStylesOptions {\n  className: string;\n  customProperties: `--${string}`[];\n  value: Responsive<Union> | Responsive<string> | undefined;\n  propValues: string[] | readonly string[];\n  parseValue?: (value: string) => string | undefined;\n}\n\nfunction getResponsiveStyles({ className, customProperties, ...args }: GetResponsiveStylesOptions) {\n  const responsiveClassNames = getResponsiveClassNames({\n    allowArbitraryValues: true,\n    className,\n    ...args,\n  });\n\n  const responsiveCustomProperties = getResponsiveCustomProperties({ customProperties, ...args });\n  return [responsiveClassNames, responsiveCustomProperties] as const;\n}\n\ninterface GetResponsiveClassNamesOptions {\n  allowArbitraryValues?: boolean;\n  className: string;\n  value: Responsive<Union> | Responsive<string> | undefined;\n  propValues: string[] | readonly string[];\n  parseValue?: (value: string) => string | undefined;\n}\n\nfunction getResponsiveClassNames({\n  allowArbitraryValues,\n  value,\n  className,\n  propValues,\n  parseValue = (value) => value,\n}: GetResponsiveClassNamesOptions): string | undefined {\n  const classNames: string[] = [];\n\n  if (!value) {\n    return undefined;\n  }\n\n  if (typeof value === 'string' && propValues.includes(value)) {\n    return getBaseClassName(className, value, parseValue);\n  }\n\n  if (isResponsiveObject(value)) {\n    const object = value;\n\n    for (const bp in object) {\n      // Make sure we are not iterating over keys that aren't breakpoints\n      if (!hasOwnProperty(object, bp) || !breakpoints.includes(bp)) {\n        continue;\n      }\n\n      const value = object[bp];\n\n      if (value !== undefined) {\n        if (propValues.includes(value)) {\n          const baseClassName = getBaseClassName(className, value, parseValue);\n          const bpClassName = bp === 'initial' ? baseClassName : `${bp}:${baseClassName}`;\n          classNames.push(bpClassName);\n        } else if (allowArbitraryValues) {\n          const bpClassName = bp === 'initial' ? className : `${bp}:${className}`;\n          classNames.push(bpClassName);\n        }\n      }\n    }\n\n    return classNames.join(' ');\n  }\n\n  if (allowArbitraryValues) {\n    return className;\n  }\n}\n\nfunction getBaseClassName(\n  className: string,\n  value: string,\n  parseValue: (value: string) => string | undefined\n): string {\n  const delimiter = className ? '-' : '';\n  const matchedValue = parseValue(value);\n  const isNegative = matchedValue?.startsWith('-');\n  const minus = isNegative ? '-' : '';\n  const absoluteValue = isNegative ? matchedValue?.substring(1) : matchedValue;\n  return `${minus}${className}${delimiter}${absoluteValue}`;\n}\n\ninterface GetResponsiveCustomPropertiesOptions {\n  customProperties: `--${string}`[];\n  value: Responsive<Union> | Responsive<string> | undefined;\n  propValues: string[] | readonly string[];\n  parseValue?: (value: string) => string | undefined;\n}\n\nfunction getResponsiveCustomProperties({\n  customProperties,\n  value,\n  propValues,\n  parseValue = (value) => value,\n}: GetResponsiveCustomPropertiesOptions) {\n  let styles: Record<string, string | undefined> = {};\n\n  // Don't generate custom properties if the value is not arbitrary\n  if (!value || (typeof value === 'string' && propValues.includes(value))) {\n    return undefined;\n  }\n\n  if (typeof value === 'string') {\n    styles = Object.fromEntries(customProperties.map((prop) => [prop, value]));\n  }\n\n  if (isResponsiveObject(value)) {\n    const object = value;\n\n    for (const bp in object) {\n      // Make sure we are not iterating over keys that aren't breakpoints\n      if (!hasOwnProperty(object, bp) || !breakpoints.includes(bp)) {\n        continue;\n      }\n\n      const value = object[bp];\n\n      // Don't generate a custom property if the value is not arbitrary\n      if (propValues.includes(value)) {\n        continue;\n      }\n\n      for (const customProperty of customProperties) {\n        const bpProperty = bp === 'initial' ? customProperty : `${customProperty}-${bp}`;\n\n        styles = {\n          [bpProperty]: value,\n          ...styles,\n        };\n      }\n    }\n  }\n\n  for (const key in styles) {\n    const value = styles[key];\n    if (value !== undefined) {\n      styles[key] = parseValue(value);\n    }\n  }\n\n  return styles;\n}\n\nexport { getResponsiveStyles, getResponsiveCustomProperties, getResponsiveClassNames };\n", "type InlineStyle =\n  | React.CSSProperties\n  | Record<string, string | number | null | undefined>\n  | undefined;\n\n// Merges CSS styles like `classNames` merges CSS classes\nexport function mergeStyles(...styles: Array<InlineStyle>): InlineStyle {\n  let result: InlineStyle = {};\n\n  for (const style of styles) {\n    if (style) {\n      result = { ...result, ...style };\n    }\n  }\n\n  return Object.keys(result).length ? result : undefined;\n}\n", "import type { PropDef, GetPropDefTypes } from './prop-def.js';\n\n// prettier-ignore\nconst marginValues = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-1', '-2', '-3', '-4', '-5', '-6', '-7', '-8', '-9'] as const;\n\nconst marginPropDefs = {\n  /**\n   * Sets the CSS **margin** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * m=\"4\"\n   * m=\"100px\"\n   * m={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin\n   */\n  m: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-m',\n    customProperties: ['--m'],\n  },\n  /**\n   * Sets the CSS **margin-left** and **margin-right** properties.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * mx=\"4\"\n   * mx=\"100px\"\n   * mx={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right\n   */\n  mx: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-mx',\n    customProperties: ['--ml', '--mr'],\n  },\n  /**\n   * Sets the CSS **margin-top** and **margin-bottom** properties.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * my=\"4\"\n   * my=\"100px\"\n   * my={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-top\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-bottom\n   */\n  my: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-my',\n    customProperties: ['--mt', '--mb'],\n  },\n  /**\n   * Sets the CSS **margin-top** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * mt=\"4\"\n   * mt=\"100px\"\n   * mt={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-top\n   */\n  mt: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-mt',\n    customProperties: ['--mt'],\n  },\n  /**\n   * Sets the CSS **margin-right** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * mr=\"4\"\n   * mr=\"100px\"\n   * mr={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right\n   */\n  mr: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-mr',\n    customProperties: ['--mr'],\n  },\n  /**\n   * Sets the CSS **margin-bottom** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * mb=\"4\"\n   * mb=\"100px\"\n   * mb={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-bottom\n   */\n  mb: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-mb',\n    customProperties: ['--mb'],\n  },\n  /**\n   * Sets the CSS **margin-left** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * ml=\"4\"\n   * ml=\"100px\"\n   * ml={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left\n   */\n  ml: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-ml',\n    customProperties: ['--ml'],\n  },\n} satisfies {\n  m: PropDef<(typeof marginValues)[number]>;\n  mx: PropDef<(typeof marginValues)[number]>;\n  my: PropDef<(typeof marginValues)[number]>;\n  mt: PropDef<(typeof marginValues)[number]>;\n  mr: PropDef<(typeof marginValues)[number]>;\n  mb: PropDef<(typeof marginValues)[number]>;\n  ml: PropDef<(typeof marginValues)[number]>;\n};\n\ntype MarginProps = GetPropDefTypes<typeof marginPropDefs>;\n\nexport { marginPropDefs };\nexport type { MarginProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { textPropDefs } from './text.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype TextElement = React.ElementRef<'span'>;\ntype TextOwnProps = GetPropDefTypes<typeof textPropDefs>;\ninterface CommonTextProps extends MarginProps, TextOwnProps {}\ntype TextSpanProps = { as?: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype TextDivProps = { as: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype TextLabelProps = { as: 'label' } & ComponentPropsWithout<'label', RemovedProps>;\ntype TextPProps = { as: 'p' } & ComponentPropsWithout<'p', RemovedProps>;\ntype TextProps = CommonTextProps & (TextSpanProps | TextDivProps | TextLabelProps | TextPProps);\n\nconst Text = React.forwardRef<TextElement, TextProps>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    asChild,\n    as: Tag = 'span',\n    color,\n    ...textProps\n  } = extractProps(props, textPropDefs, marginPropDefs);\n  return (\n    <Slot.Root\n      data-accent-color={color}\n      {...textProps}\n      ref={forwardedRef}\n      className={classNames('rt-Text', className)}\n    >\n      {asChild ? children : <Tag>{children}</Tag>}\n    </Slot.Root>\n  );\n});\nText.displayName = 'Text';\n\nexport { Text };\nexport type { TextProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { leadingTrimPropDef } from '../props/leading-trim.prop.js';\nimport { textAlignPropDef } from '../props/text-align.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\nimport { weightPropDef } from '../props/weight.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst as = ['span', 'div', 'label', 'p'] as const;\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\n\nconst textPropDefs = {\n  as: { type: 'enum', values: as, default: 'span' },\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    responsive: true,\n  },\n  ...weightPropDef,\n  ...textAlignPropDef,\n  ...leadingTrimPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  as: PropDef<(typeof as)[number]>;\n  size: PropDef<(typeof sizes)[number]>;\n};\n\nexport { textPropDefs };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Direction, Slot, Tooltip as TooltipPrimitive } from 'radix-ui';\n\nimport { getMatchingGrayColor } from '../helpers/get-matching-gray-color.js';\nimport { themePropDefs } from './theme.props.js';\n\nimport type { ThemeOwnProps } from './theme.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\nconst noop = () => {};\n\ntype ThemeAppearance = (typeof themePropDefs.appearance.values)[number];\ntype ThemeAccentColor = (typeof themePropDefs.accentColor.values)[number];\ntype ThemeGrayColor = (typeof themePropDefs.grayColor.values)[number];\ntype ThemePanelBackground = (typeof themePropDefs.panelBackground.values)[number];\ntype ThemeRadius = (typeof themePropDefs.radius.values)[number];\ntype ThemeScaling = (typeof themePropDefs.scaling.values)[number];\n\ninterface ThemeChangeHandlers {\n  onAppearanceChange: (appearance: ThemeAppearance) => void;\n  onAccentColorChange: (accentColor: ThemeAccentColor) => void;\n  onGrayColorChange: (grayColor: ThemeGrayColor) => void;\n  onPanelBackgroundChange: (panelBackground: ThemePanelBackground) => void;\n  onRadiusChange: (radius: ThemeRadius) => void;\n  onScalingChange: (scaling: ThemeScaling) => void;\n}\n\ninterface ThemeContextValue extends ThemeChangeHandlers {\n  appearance: ThemeAppearance;\n  accentColor: ThemeAccentColor;\n  grayColor: ThemeGrayColor;\n  resolvedGrayColor: ThemeGrayColor;\n  panelBackground: ThemePanelBackground;\n  radius: ThemeRadius;\n  scaling: ThemeScaling;\n}\nconst ThemeContext = React.createContext<ThemeContextValue | undefined>(undefined);\n\nfunction useThemeContext() {\n  const context = React.useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('`useThemeContext` must be used within a `Theme`');\n  }\n  return context;\n}\n\ninterface ThemeProps extends ThemeImplPublicProps {}\nconst Theme = React.forwardRef<ThemeImplElement, ThemeProps>((props, forwardedRef) => {\n  const context = React.useContext(ThemeContext);\n  const isRoot = context === undefined;\n  if (isRoot) {\n    return (\n      <TooltipPrimitive.Provider delayDuration={200}>\n        <Direction.Provider dir=\"ltr\">\n          <ThemeRoot {...props} ref={forwardedRef} />\n        </Direction.Provider>\n      </TooltipPrimitive.Provider>\n    );\n  }\n  return <ThemeImpl {...props} ref={forwardedRef} />;\n});\nTheme.displayName = 'Theme';\n\nconst ThemeRoot = React.forwardRef<ThemeImplElement, ThemeImplPublicProps>(\n  (props, forwardedRef) => {\n    const {\n      appearance: appearanceProp = themePropDefs.appearance.default,\n      accentColor: accentColorProp = themePropDefs.accentColor.default,\n      grayColor: grayColorProp = themePropDefs.grayColor.default,\n      panelBackground: panelBackgroundProp = themePropDefs.panelBackground.default,\n      radius: radiusProp = themePropDefs.radius.default,\n      scaling: scalingProp = themePropDefs.scaling.default,\n      hasBackground = themePropDefs.hasBackground.default,\n      ...rootProps\n    } = props;\n    const [appearance, setAppearance] = React.useState(appearanceProp);\n    React.useEffect(() => setAppearance(appearanceProp), [appearanceProp]);\n\n    const [accentColor, setAccentColor] = React.useState(accentColorProp);\n    React.useEffect(() => setAccentColor(accentColorProp), [accentColorProp]);\n\n    const [grayColor, setGrayColor] = React.useState(grayColorProp);\n    React.useEffect(() => setGrayColor(grayColorProp), [grayColorProp]);\n\n    const [panelBackground, setPanelBackground] = React.useState(panelBackgroundProp);\n    React.useEffect(() => setPanelBackground(panelBackgroundProp), [panelBackgroundProp]);\n\n    const [radius, setRadius] = React.useState(radiusProp);\n    React.useEffect(() => setRadius(radiusProp), [radiusProp]);\n\n    const [scaling, setScaling] = React.useState(scalingProp);\n    React.useEffect(() => setScaling(scalingProp), [scalingProp]);\n\n    return (\n      <ThemeImpl\n        {...rootProps}\n        ref={forwardedRef}\n        isRoot\n        hasBackground={hasBackground}\n        //\n        appearance={appearance}\n        accentColor={accentColor}\n        grayColor={grayColor}\n        panelBackground={panelBackground}\n        radius={radius}\n        scaling={scaling}\n        //\n        onAppearanceChange={setAppearance}\n        onAccentColorChange={setAccentColor}\n        onGrayColorChange={setGrayColor}\n        onPanelBackgroundChange={setPanelBackground}\n        onRadiusChange={setRadius}\n        onScalingChange={setScaling}\n      />\n    );\n  }\n);\nThemeRoot.displayName = 'ThemeRoot';\n\ntype ThemeImplElement = React.ElementRef<'div'>;\ninterface ThemeImplProps extends ThemeImplPublicProps, ThemeImplPrivateProps {}\ninterface ThemeImplPublicProps\n  extends ComponentPropsWithout<'div', RemovedProps | 'dir'>,\n    ThemeOwnProps {}\ninterface ThemeImplPrivateProps extends Partial<ThemeChangeHandlers> {\n  isRoot?: boolean;\n}\nconst ThemeImpl = React.forwardRef<ThemeImplElement, ThemeImplProps>((props, forwardedRef) => {\n  const context = React.useContext(ThemeContext);\n  const {\n    asChild,\n    isRoot,\n    hasBackground: hasBackgroundProp,\n    //\n    appearance = context?.appearance ?? themePropDefs.appearance.default,\n    accentColor = context?.accentColor ?? themePropDefs.accentColor.default,\n    grayColor = context?.resolvedGrayColor ?? themePropDefs.grayColor.default,\n    panelBackground = context?.panelBackground ?? themePropDefs.panelBackground.default,\n    radius = context?.radius ?? themePropDefs.radius.default,\n    scaling = context?.scaling ?? themePropDefs.scaling.default,\n    //\n    onAppearanceChange = noop,\n    onAccentColorChange = noop,\n    onGrayColorChange = noop,\n    onPanelBackgroundChange = noop,\n    onRadiusChange = noop,\n    onScalingChange = noop,\n    //\n    ...themeProps\n  } = props;\n  const Comp = asChild ? Slot.Root : 'div';\n  const resolvedGrayColor = grayColor === 'auto' ? getMatchingGrayColor(accentColor) : grayColor;\n  const isExplicitAppearance = props.appearance === 'light' || props.appearance === 'dark';\n  const hasBackground =\n    hasBackgroundProp === undefined ? isRoot || isExplicitAppearance : hasBackgroundProp;\n  return (\n    <ThemeContext.Provider\n      value={React.useMemo(\n        () => ({\n          appearance,\n          accentColor,\n          grayColor,\n          resolvedGrayColor,\n          panelBackground,\n          radius,\n          scaling,\n          //\n          onAppearanceChange,\n          onAccentColorChange,\n          onGrayColorChange,\n          onPanelBackgroundChange,\n          onRadiusChange,\n          onScalingChange,\n        }),\n        [\n          appearance,\n          accentColor,\n          grayColor,\n          resolvedGrayColor,\n          panelBackground,\n          radius,\n          scaling,\n          //\n          onAppearanceChange,\n          onAccentColorChange,\n          onGrayColorChange,\n          onPanelBackgroundChange,\n          onRadiusChange,\n          onScalingChange,\n        ]\n      )}\n    >\n      <Comp\n        data-is-root-theme={isRoot ? 'true' : 'false'}\n        data-accent-color={accentColor}\n        data-gray-color={resolvedGrayColor}\n        // for nested `Theme` background\n        data-has-background={hasBackground ? 'true' : 'false'}\n        data-panel-background={panelBackground}\n        data-radius={radius}\n        data-scaling={scaling}\n        ref={forwardedRef}\n        {...themeProps}\n        className={classNames(\n          'radix-themes',\n          {\n            light: appearance === 'light',\n            dark: appearance === 'dark',\n          },\n          themeProps.className\n        )}\n      />\n    </ThemeContext.Provider>\n  );\n});\nThemeImpl.displayName = 'ThemeImpl';\n\nexport { Theme, ThemeContext, useThemeContext };\nexport type { ThemeProps };\n", "import type { accentColors } from '../props/color.prop.js';\n\ntype ThemeAccentColor = (typeof accentColors)[number];\n\nexport function getMatchingGrayColor(accentColor: ThemeAccentColor) {\n  switch (accentColor) {\n    case 'tomato':\n    case 'red':\n    case 'ruby':\n    case 'crimson':\n    case 'pink':\n    case 'plum':\n    case 'purple':\n    case 'violet':\n      return 'mauve';\n    case 'iris':\n    case 'indigo':\n    case 'blue':\n    case 'sky':\n    case 'cyan':\n      return 'slate';\n    case 'teal':\n    case 'jade':\n    case 'mint':\n    case 'green':\n      return 'sage';\n    case 'grass':\n    case 'lime':\n      return 'olive';\n    case 'yellow':\n    case 'amber':\n    case 'orange':\n    case 'brown':\n    case 'gold':\n    case 'bronze':\n      return 'sand';\n    case 'gray':\n      return 'gray';\n  }\n}\n", "import type { PropDef } from './prop-def.js';\n\nconst radii = ['none', 'small', 'medium', 'large', 'full'] as const;\n\nconst radiusPropDef = {\n  radius: {\n    type: 'enum',\n    values: radii,\n    default: undefined,\n  },\n} satisfies {\n  radius: PropDef<(typeof radii)[number]>;\n};\n\nexport { radiusPropDef, radii };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColors, grayColors } from '../props/color.prop.js';\nimport { radii } from '../props/radius.prop.js';\n\nimport type { GetPropDefTypes, PropDef } from '../props/prop-def.js';\n\nconst appearances = ['inherit', 'light', 'dark'] as const;\nconst panelBackgrounds = ['solid', 'translucent'] as const;\nconst scalings = ['90%', '95%', '100%', '105%', '110%'] as const;\n\nconst themePropDefs = {\n  ...asChildPropDef,\n  /**\n   * Whether to apply background color to the Theme element.\n   *\n   * Defaults to true for the root Theme and for Theme elements that\n   * have an explicit light or dark appearance prop.\n   */\n  hasBackground: { type: 'boolean', default: true },\n  /**\n   * Sets the color scheme of the theme, typcially referred to as light and dark mode.\n   *\n   * @link\n   * https://www.radix-ui.com/themes/docs/theme/dark-mode\n   */\n  appearance: { type: 'enum', values: appearances, default: 'inherit' },\n  /**\n   * Selects one of the accent color options to use in the Theme.\n   *\n   * @link\n   * https://www.radix-ui.com/themes/docs/theme/color\n   */\n  accentColor: { type: 'enum', values: accentColors, default: 'indigo' },\n  /**\n   * Selects one of the gray color options to use in the Theme.\n   *\n   * @link\n   * https://www.radix-ui.com/themes/docs/theme/color\n   */\n  grayColor: { type: 'enum', values: grayColors, default: 'auto' },\n  /**\n   * Controls whether to use a solid or translucent background color on panelled\n   * elements such as Card or Table is solid or translucent.\n   *\n   * @link\n   * https://www.radix-ui.com/themes/docs/theme/visual-style\n   */\n  panelBackground: { type: 'enum', values: panelBackgrounds, default: 'translucent' },\n  /**\n   * Sets the default radius of the components.\n   *\n   * @link\n   * https://www.radix-ui.com/themes/docs/theme/visual-style\n   */\n  radius: { type: 'enum', values: radii, default: 'medium' },\n  /**\n   * Sets a scaling multiplier for values like spacing, font sizes, line heights, etc. are scaled.\n   *\n   * @link\n   * https://www.radix-ui.com/themes/docs/theme/layout\n   */\n  scaling: { type: 'enum', values: scalings, default: '100%' },\n} satisfies {\n  hasBackground: PropDef<boolean>;\n  appearance: PropDef<(typeof appearances)[number]>;\n  accentColor: PropDef<(typeof accentColors)[number]>;\n  grayColor: PropDef<(typeof grayColors)[number]>;\n  panelBackground: PropDef<(typeof panelBackgrounds)[number]>;\n  radius: PropDef<(typeof radii)[number]>;\n  scaling: PropDef<(typeof scalings)[number]>;\n};\n\ntype ThemeOwnProps = GetPropDefTypes<typeof themePropDefs & typeof asChildPropDef>;\n\nexport { themePropDefs };\nexport type { ThemeOwnProps };\n", "import * as React from 'react';\n\n/** A function that throws an error when a value isn't a valid React Element, otherwise returns the value */\nexport const requireReactElement = <T extends React.ReactNode>(children: T): T => {\n  const isReactElement = React.isValidElement(children);\n\n  if (!isReactElement) {\n    throw Error(\n      `Expected a single React Element child, but got: ${React.Children.toArray(children)\n        .map((child) =>\n          typeof child === 'object' && 'type' in child && typeof child.type === 'string'\n            ? child.type\n            : typeof child\n        )\n        .join(', ')}`\n    );\n  }\n\n  return children;\n};\n", "import { AspectRatio as AspectRatioPrimitive } from 'radix-ui';\nexport const AspectRatio = AspectRatioPrimitive.Root;\nexport type AspectRatioProps = AspectRatioPrimitive.AspectRatioProps;\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Avatar as AvatarPrimitive } from 'radix-ui';\n\nimport { avatarPropDefs } from './avatar.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { getSubtree } from '../helpers/get-subtree.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ninterface AvatarProps extends MarginProps, AvatarImplProps {}\nconst Avatar = React.forwardRef<AvatarImplElement, AvatarProps>((props, forwardedRef) => {\n  const { asChild, children, className, style, color, radius, ...imageProps } = extractProps(\n    props,\n    avatarPropDefs,\n    marginPropDefs\n  );\n\n  return (\n    // TODO as a rule, should we rather spread the props on root?\n    <AvatarPrimitive.Root\n      data-accent-color={color}\n      data-radius={radius}\n      className={classNames('rt-reset', 'rt-AvatarRoot', className)}\n      style={style}\n      asChild={asChild}\n    >\n      {getSubtree({ asChild, children }, <AvatarImpl ref={forwardedRef} {...imageProps} />)}\n    </AvatarPrimitive.Root>\n  );\n});\nAvatar.displayName = 'Avatar';\n\ntype AvatarImplElement = React.ElementRef<typeof AvatarPrimitive.Image>;\ntype AvatarOwnProps = GetPropDefTypes<typeof avatarPropDefs>;\n\ninterface AvatarImplProps\n  extends ComponentPropsWithout<typeof AvatarPrimitive.Image, RemovedProps>,\n    AvatarOwnProps {\n  // TODO: See if we can automate making prop defs with `required: true` non nullable\n  fallback: NonNullable<AvatarOwnProps['fallback']>;\n}\n\nconst AvatarImpl = React.forwardRef<AvatarImplElement, AvatarImplProps>(\n  ({ fallback, ...imageProps }, forwardedRef) => {\n    const [status, setStatus] = React.useState<'idle' | 'loading' | 'loaded' | 'error'>('idle');\n    return (\n      <>\n        {status === 'idle' || status === 'loading' ? <span className=\"rt-AvatarFallback\" /> : null}\n\n        {status === 'error' ? (\n          <AvatarPrimitive.Fallback\n            className={classNames('rt-AvatarFallback', {\n              'rt-one-letter': typeof fallback === 'string' && fallback.length === 1,\n              'rt-two-letters': typeof fallback === 'string' && fallback.length === 2,\n            })}\n            delayMs={0}\n          >\n            {fallback}\n          </AvatarPrimitive.Fallback>\n        ) : null}\n\n        <AvatarPrimitive.Image\n          ref={forwardedRef}\n          className=\"rt-AvatarImage\"\n          {...imageProps}\n          onLoadingStatusChange={(status) => {\n            imageProps.onLoadingStatusChange?.(status);\n            setStatus(status);\n          }}\n        />\n      </>\n    );\n  }\n);\n\nAvatarImpl.displayName = 'AvatarImpl';\n\nexport { Avatar };\nexport type { AvatarProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\nconst variants = ['solid', 'soft'] as const;\n\nconst avatarPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '3', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'soft' },\n  ...accentColorPropDef,\n  ...highContrastPropDef,\n  ...radiusPropDef,\n  fallback: { type: 'ReactNode', required: true },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  fallback: PropDef<React.ReactNode>;\n};\n\nexport { avatarPropDefs };\n", "import * as React from 'react';\n\n/**\n * This is a helper function that is used when a component supports `asChild`\n * using the `Slot` component but its implementation contains nested DOM elements.\n *\n * Using it ensures if a consumer uses the `asChild` prop, the elements are in\n * correct order in the DOM, adopting the intended consumer `children`.\n */\nexport function getSubtree(\n  options: { asChild: boolean | undefined; children: React.ReactNode },\n  content: React.ReactNode | ((children: React.ReactNode) => React.ReactNode)\n) {\n  const { asChild, children } = options;\n  if (!asChild) return typeof content === 'function' ? content(children) : content;\n\n  const firstChild = React.Children.only(children) as React.ReactElement;\n  return React.cloneElement(firstChild, {\n    // @ts-expect-error\n    children: typeof content === 'function' ? content(firstChild.props.children) : content,\n  });\n}\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { badgePropDefs } from './badge.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype BadgeElement = React.ElementRef<'span'>;\ntype BadgeOwnProps = GetPropDefTypes<typeof badgePropDefs>;\ninterface BadgeProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    BadgeOwnProps {}\nconst Badge = React.forwardRef<BadgeElement, BadgeProps>((props, forwardedRef) => {\n  const { asChild, className, color, radius, ...badgeProps } = extractProps(\n    props,\n    badgePropDefs,\n    marginPropDefs\n  );\n  const Comp = asChild ? Slot.Root : 'span';\n  return (\n    <Comp\n      data-accent-color={color}\n      data-radius={radius}\n      {...badgeProps}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-Badge', className)}\n    />\n  );\n});\nBadge.displayName = 'Badge';\n\nexport { Badge };\nexport type { BadgeProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['solid', 'soft', 'surface', 'outline'] as const;\n\nconst badgePropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '1', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'soft' },\n  ...accentColorPropDef,\n  ...highContrastPropDef,\n  ...radiusPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { badgePropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { Text } from './text.js';\n\nimport type { blockquotePropDefs } from './blockquote.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype BlockquoteElement = React.ElementRef<'blockquote'>;\ntype BlockQuoteOwnProps = GetPropDefTypes<typeof blockquotePropDefs>;\ninterface BlockquoteProps\n  extends ComponentPropsWithout<'blockquote', RemovedProps>,\n    MarginProps,\n    BlockQuoteOwnProps {}\nconst Blockquote = React.forwardRef<BlockquoteElement, BlockquoteProps>((props, forwardedRef) => {\n  const { asChild, children, className, ...blockquoteProps } = props;\n  const Comp = asChild ? Slot.Root : 'blockquote';\n  return (\n    <Text\n      asChild\n      {...blockquoteProps}\n      ref={forwardedRef}\n      className={classNames('rt-Blockquote', className)}\n    >\n      <Comp>{children}</Comp>\n    </Text>\n  );\n});\nBlockquote.displayName = 'Blockquote';\n\nexport { Blockquote };\nexport type { BlockquoteProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Slot } from './slot.js';\nimport { boxPropDefs } from './box.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { BoxOwnProps } from './box.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype BoxElement = React.ElementRef<'div'>;\ninterface CommonBoxProps extends MarginProps, LayoutProps, BoxOwnProps {}\ntype BoxDivProps = { as?: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype BoxSpanProps = { as: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype BoxProps = CommonBoxProps & (BoxSpanProps | BoxDivProps);\n\nconst Box = React.forwardRef<BoxElement, BoxProps>((props, forwardedRef) => {\n  const {\n    className,\n    asChild,\n    as: Tag = 'div',\n    ...boxProps\n  } = extractProps(props, boxPropDefs, layoutPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : Tag;\n  return <Comp {...boxProps} ref={forwardedRef} className={classNames('rt-Box', className)} />;\n});\nBox.displayName = 'Box';\n\nexport { Box };\nexport type { BoxProps };\n", "import { Slot as SlotPrimitive } from 'radix-ui';\nexport const Root = SlotPrimitive.Root;\nexport const Slot = SlotPrimitive.Root;\nexport const Slottable = SlotPrimitive.Slottable;\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst as = ['div', 'span'] as const;\nconst displayValues = ['none', 'inline', 'inline-block', 'block', 'contents'] as const;\n\nconst boxPropDefs = {\n  /**\n   * Controls whether to render **div** or **span**\n   *\n   * @example\n   * as=\"div\"\n   * as=\"span\"\n   */\n  as: { type: 'enum', values: as, default: 'div' },\n  ...asChildPropDef,\n  /**\n   * Sets the CSS **display** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * display=\"inline-block\"\n   * display={{ sm: 'none', lg: 'block' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/display\n   */\n  display: {\n    type: 'enum',\n    className: 'rt-r-display',\n    values: displayValues,\n    responsive: true,\n  },\n} satisfies {\n  as: PropDef<(typeof as)[number]>;\n  display: PropDef<(typeof displayValues)[number]>;\n};\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype BoxOwnProps = GetPropDefTypes<typeof boxPropDefs & typeof asChildPropDef>;\n\nexport { boxPropDefs };\nexport type { BoxOwnProps };\n", "import type { GetPropDefTypes, PropDef } from './prop-def.js';\n\nconst paddingValues = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\n\nconst paddingPropDefs = {\n  /**\n   * Sets the CSS **padding** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * p=\"4\"\n   * p=\"100px\"\n   * p={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding\n   */\n  p: {\n    type: 'enum | string',\n    className: 'rt-r-p',\n    customProperties: ['--p'],\n    values: paddingValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **padding-left** and **padding-right** properties.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * px=\"4\"\n   * px=\"100px\"\n   * px={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-left\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-right\n   */\n  px: {\n    type: 'enum | string',\n    className: 'rt-r-px',\n    customProperties: ['--pl', '--pr'],\n    values: paddingValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **padding-top** and **padding-bottom** properties.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * py=\"4\"\n   * py=\"100px\"\n   * py={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-top\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-bottom\n   */\n  py: {\n    type: 'enum | string',\n    className: 'rt-r-py',\n    customProperties: ['--pt', '--pb'],\n    values: paddingValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **padding-top** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * pt=\"4\"\n   * pt=\"100px\"\n   * pt={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-top\n   */\n  pt: {\n    type: 'enum | string',\n    className: 'rt-r-pt',\n    customProperties: ['--pt'],\n    values: paddingValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **padding-right** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * pr=\"4\"\n   * pr=\"100px\"\n   * pr={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-right\n   */\n  pr: {\n    type: 'enum | string',\n    className: 'rt-r-pr',\n    customProperties: ['--pr'],\n    values: paddingValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **padding-bottom** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * pb=\"4\"\n   * pb=\"100px\"\n   * pb={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-bottom\n   */\n  pb: {\n    type: 'enum | string',\n    className: 'rt-r-pb',\n    customProperties: ['--pb'],\n    values: paddingValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **padding-left** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * pl=\"4\"\n   * pl=\"100px\"\n   * pl={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-left\n   */\n  pl: {\n    type: 'enum | string',\n    className: 'rt-r-pl',\n    customProperties: ['--pl'],\n    values: paddingValues,\n    responsive: true,\n  },\n} satisfies {\n  p: PropDef<(typeof paddingValues)[number]>;\n  px: PropDef<(typeof paddingValues)[number]>;\n  py: PropDef<(typeof paddingValues)[number]>;\n  pt: PropDef<(typeof paddingValues)[number]>;\n  pr: PropDef<(typeof paddingValues)[number]>;\n  pb: PropDef<(typeof paddingValues)[number]>;\n  pl: PropDef<(typeof paddingValues)[number]>;\n};\n\ntype PaddingProps = GetPropDefTypes<typeof paddingPropDefs>;\n\nexport { paddingPropDefs };\nexport type { PaddingProps };\n", "import { paddingPropDefs } from './padding.props.js';\nimport { heightPropDefs } from './height.props.js';\nimport { widthPropDefs } from './width.props.js';\n\nimport type { PropDef, GetPropDefTypes } from './prop-def.js';\n\nconst overflowValues = ['visible', 'hidden', 'clip', 'scroll', 'auto'] as const;\nconst positionValues = ['static', 'relative', 'absolute', 'fixed', 'sticky'] as const;\n// prettier-ignore\nconst positionEdgeValues = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-1', '-2', '-3', '-4', '-5', '-6', '-7', '-8', '-9'] as const;\nconst flexShrinkValues = ['0', '1'] as const;\nconst flexGrowValues = ['0', '1'] as const;\n\nconst layoutPropDefs = {\n  ...paddingPropDefs,\n  ...widthPropDefs,\n  ...heightPropDefs,\n  /**\n   * Sets the CSS **position** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * position=\"absolute\"\n   * position={{ sm: 'absolute', lg: 'sticky' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/position\n   */\n  position: {\n    type: 'enum',\n    className: 'rt-r-position',\n    values: positionValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **inset** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * inset=\"4\"\n   * inset=\"100px\"\n   * inset={{ sm: '0', lg: '50%' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/inset\n   */\n  inset: {\n    type: 'enum | string',\n    className: 'rt-r-inset',\n    customProperties: ['--inset'],\n    values: positionEdgeValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **top** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * top=\"4\"\n   * top=\"100px\"\n   * top={{ sm: '0', lg: '50%' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/top\n   */\n  top: {\n    type: 'enum | string',\n    className: 'rt-r-top',\n    customProperties: ['--top'],\n    values: positionEdgeValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **right** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * right=\"4\"\n   * right=\"100px\"\n   * right={{ sm: '0', lg: '50%' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/right\n   */\n  right: {\n    type: 'enum | string',\n    className: 'rt-r-right',\n    customProperties: ['--right'],\n    values: positionEdgeValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **bottom** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * bottom=\"4\"\n   * bottom=\"100px\"\n   * bottom={{ sm: '0', lg: '50%' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/bottom\n   */\n  bottom: {\n    type: 'enum | string',\n    className: 'rt-r-bottom',\n    customProperties: ['--bottom'],\n    values: positionEdgeValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **left** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * left=\"4\"\n   * left=\"100px\"\n   * left={{ sm: '0', lg: '50%' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/left\n   */\n  left: {\n    type: 'enum | string',\n    className: 'rt-r-left',\n    customProperties: ['--left'],\n    values: positionEdgeValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **overflow** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * overflow=\"hidden\"\n   * overflow={{ sm: 'hidden', lg: 'visible' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/overflow\n   */\n  overflow: {\n    type: 'enum',\n    className: 'rt-r-overflow',\n    values: overflowValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **overflow-x** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * overflowX=\"hidden\"\n   * overflowX={{ sm: 'hidden', md: 'visible' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/overflow\n   */\n  overflowX: {\n    type: 'enum',\n    className: 'rt-r-ox',\n    values: overflowValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **overflow-y** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * overflowY=\"hidden\"\n   * overflowY={{ sm: 'hidden', md: 'visible' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/overflow\n   */\n  overflowY: {\n    type: 'enum',\n    className: 'rt-r-oy',\n    values: overflowValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **flex-basis** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * flexBasis=\"0\"\n   * flexBasis=\"100%\"\n   * flexBasis={{ sm: '200px', lg: 'auto' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis\n   */\n  flexBasis: {\n    type: 'string',\n    className: 'rt-r-fb',\n    customProperties: ['--flex-basis'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **flex-shrink** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * flexShrink=\"0\"\n   * flexShrink=\"1\"\n   * flexShrink={{ sm: '0', lg: '1' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/flex-shrink\n   */\n  flexShrink: {\n    type: 'enum | string',\n    className: 'rt-r-fs',\n    customProperties: ['--flex-shrink'],\n    values: flexShrinkValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **flex-grow** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * flexGrow=\"0\"\n   * flexGrow=\"1\"\n   * flexGrow={{ sm: '0', lg: '1' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/flex-grow\n   */\n  flexGrow: {\n    type: 'enum | string',\n    className: 'rt-r-fg',\n    customProperties: ['--flex-grow'],\n    values: flexGrowValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-area** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridArea=\"header\"\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-area\n   */\n  gridArea: {\n    type: 'string',\n    className: 'rt-r-ga',\n    customProperties: ['--grid-area'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-column** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridColumn=\"1\"\n   * gridColumn=\"1 / -1\"\n   * gridColumn={{ sm: '1 / 3', lg: 'span 3' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column\n   */\n  gridColumn: {\n    type: 'string',\n    className: 'rt-r-gc',\n    customProperties: ['--grid-column'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-column-start** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridColumnStart=\"1\"\n   * gridColumnStart=\"auto\"\n   * gridColumnStart={{ sm: '2', lg: 'span 3' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column-start\n   */\n  gridColumnStart: {\n    type: 'string',\n    className: 'rt-r-gcs',\n    customProperties: ['--grid-column-start'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-column-end** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridColumnEnd=\"1\"\n   * gridColumnEnd=\"auto\"\n   * gridColumnEnd={{ sm: '2', lg: 'span 3' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column-end\n   */\n  gridColumnEnd: {\n    type: 'string',\n    className: 'rt-r-gce',\n    customProperties: ['--grid-column-end'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-row** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridRow=\"1\"\n   * gridRow=\"auto\"\n   * gridRow={{ sm: '2', lg: 'span 3' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row\n   */\n  gridRow: {\n    type: 'string',\n    className: 'rt-r-gr',\n    customProperties: ['--grid-row'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-row-start** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridRowStart=\"1\"\n   * gridRowStart=\"auto\"\n   * gridRowStart={{ sm: '2', lg: 'span 3' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row-start\n   */\n  gridRowStart: {\n    type: 'string',\n    className: 'rt-r-grs',\n    customProperties: ['--grid-row-start'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-row-end** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridRowEnd=\"1\"\n   * gridRowEnd=\"auto\"\n   * gridRowEnd={{ sm: '2', lg: 'span 3' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row-end\n   */\n  gridRowEnd: {\n    type: 'string',\n    className: 'rt-r-gre',\n    customProperties: ['--grid-row-end'],\n    responsive: true,\n  },\n} satisfies {\n  position: PropDef<(typeof positionValues)[number]>;\n  inset: PropDef<(typeof positionEdgeValues)[number]>;\n  top: PropDef<(typeof positionEdgeValues)[number]>;\n  right: PropDef<(typeof positionEdgeValues)[number]>;\n  bottom: PropDef<(typeof positionEdgeValues)[number]>;\n  left: PropDef<(typeof positionEdgeValues)[number]>;\n  overflow: PropDef<(typeof overflowValues)[number]>;\n  overflowX: PropDef<(typeof overflowValues)[number]>;\n  overflowY: PropDef<(typeof overflowValues)[number]>;\n  flexBasis: PropDef<string>;\n  flexShrink: PropDef<(typeof flexShrinkValues)[number]>;\n  flexGrow: PropDef<(typeof flexGrowValues)[number]>;\n  gridColumn: PropDef<string>;\n  gridColumnStart: PropDef<string>;\n  gridColumnEnd: PropDef<string>;\n  gridRow: PropDef<string>;\n  gridRowStart: PropDef<string>;\n  gridRowEnd: PropDef<string>;\n  gridArea: PropDef<string>;\n};\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype LayoutProps = GetPropDefTypes<\n  typeof paddingPropDefs & typeof widthPropDefs & typeof heightPropDefs & typeof layoutPropDefs\n>;\n\nexport { layoutPropDefs };\nexport type { LayoutProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { BaseButton } from './_internal/base-button.js';\n\ntype ButtonElement = React.ElementRef<typeof BaseButton>;\ninterface ButtonProps extends React.ComponentPropsWithoutRef<typeof BaseButton> {}\nconst Button = React.forwardRef<ButtonElement, ButtonProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <BaseButton {...props} ref={forwardedRef} className={classNames('rt-Button', className)} />\n  )\n);\nButton.displayName = 'Button';\n\nexport { Button };\nexport type { ButtonProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { baseButtonPropDefs } from './base-button.props.js';\nimport { Flex } from '../flex.js';\nimport { Spinner } from '../spinner.js';\nimport { VisuallyHidden } from '../visually-hidden.js';\nimport { extractProps } from '../../helpers/extract-props.js';\nimport { mapResponsiveProp, mapButtonSizeToSpinnerSize } from '../../helpers/map-prop-values.js';\nimport { marginPropDefs } from '../../props/margin.props.js';\n\nimport type { MarginProps } from '../../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../../props/prop-def.js';\n\ntype BaseButtonElement = React.ElementRef<'button'>;\ntype BaseButtonOwnProps = GetPropDefTypes<typeof baseButtonPropDefs>;\ninterface BaseButtonProps\n  extends ComponentPropsWithout<'button', RemovedProps>,\n    MarginProps,\n    BaseButtonOwnProps {}\nconst BaseButton = React.forwardRef<BaseButtonElement, BaseButtonProps>((props, forwardedRef) => {\n  const { size = baseButtonPropDefs.size.default } = props;\n  const {\n    className,\n    children,\n    asChild,\n    color,\n    radius,\n    disabled = props.loading,\n    ...baseButtonProps\n  } = extractProps(props, baseButtonPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot.Root : 'button';\n  return (\n    <Comp\n      // The `data-disabled` attribute enables correct styles when doing `<Button asChild disabled>`\n      data-disabled={disabled || undefined}\n      data-accent-color={color}\n      data-radius={radius}\n      {...baseButtonProps}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-BaseButton', className)}\n      disabled={disabled}\n    >\n      {props.loading ? (\n        <>\n          {/**\n           * We need a wrapper to set `visibility: hidden` to hide the button content whilst we show the `Spinner`.\n           * The button is a flex container with a `gap`, so we use `display: contents` to ensure the correct flex layout.\n           *\n           * However, `display: contents` removes the content from the accessibility tree in some browsers,\n           * so we force remove it with `aria-hidden` and re-add it in the tree with `VisuallyHidden`\n           */}\n          <span style={{ display: 'contents', visibility: 'hidden' }} aria-hidden>\n            {children}\n          </span>\n          <VisuallyHidden>{children}</VisuallyHidden>\n\n          <Flex asChild align=\"center\" justify=\"center\" position=\"absolute\" inset=\"0\">\n            <span>\n              <Spinner size={mapResponsiveProp(size, mapButtonSizeToSpinnerSize)} />\n            </span>\n          </Flex>\n        </>\n      ) : (\n        children\n      )}\n    </Comp>\n  );\n});\nBaseButton.displayName = 'BaseButton';\n\nexport { BaseButton };\nexport type { BaseButtonProps };\n", "import { asChildPropDef } from '../../props/as-child.prop.js';\nimport { accentColorPropDef } from '../../props/color.prop.js';\nimport { highContrastPropDef } from '../../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../../props/radius.prop.js';\n\nimport type { PropDef } from '../../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4'] as const;\nconst variants = ['classic', 'solid', 'soft', 'surface', 'outline', 'ghost'] as const;\n\nconst baseButtonPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'solid' },\n  ...accentColorPropDef,\n  ...highContrastPropDef,\n  ...radiusPropDef,\n  loading: { type: 'boolean', className: 'rt-loading', default: false },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  loading: PropDef<boolean>;\n};\n\nexport { baseButtonPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { Slot } from './slot.js';\nimport { flexPropDefs } from './flex.props.js';\n\nimport type { FlexOwnProps } from './flex.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\n\ntype FlexElement = React.ElementRef<'div'>;\ninterface CommonFlexProps extends MarginProps, LayoutProps, FlexOwnProps {}\ntype FlexDivProps = { as?: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype FlexSpanProps = { as: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype FlexProps = CommonFlexProps & (FlexSpanProps | FlexDivProps);\n\nconst Flex = React.forwardRef<FlexElement, FlexProps>((props, forwardedRef) => {\n  const {\n    className,\n    asChild,\n    as: Tag = 'div',\n    ...flexProps\n  } = extractProps(props, flexPropDefs, layoutPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : Tag;\n  return <Comp {...flexProps} ref={forwardedRef} className={classNames('rt-Flex', className)} />;\n});\nFlex.displayName = 'Flex';\n\nexport { Flex };\nexport type { FlexProps };\n", "import type { PropDef } from './prop-def.js';\n\nconst gapValues = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\n\nconst gapPropDefs = {\n  /**\n   * Sets the CSS **gap** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * gap=\"4\"\n   * gap=\"20px\"\n   * gap={{ sm: '2', lg: '3em' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/gap\n   */\n  gap: {\n    type: 'enum | string',\n    className: 'rt-r-gap',\n    customProperties: ['--gap'],\n    values: gapValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **row-gap** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * gapX=\"4\"\n   * gapX=\"20px\"\n   * gapX={{ sm: '2', lg: '3em' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/row-gap\n   */\n  gapX: {\n    type: 'enum | string',\n    className: 'rt-r-cg',\n    customProperties: ['--column-gap'],\n    values: gapValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **column-gap** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * gapY=\"4\"\n   * gapY=\"20px\"\n   * gapY={{ sm: '2', lg: '3em' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/column-gap\n   */\n  gapY: {\n    type: 'enum | string',\n    className: 'rt-r-rg',\n    customProperties: ['--row-gap'],\n    values: gapValues,\n    responsive: true,\n  },\n} satisfies {\n  gap: PropDef<(typeof gapValues)[number]>;\n  gapX: PropDef<(typeof gapValues)[number]>;\n  gapY: PropDef<(typeof gapValues)[number]>;\n};\n\nexport { gapPropDefs };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { gapPropDefs } from '../props/gap.props.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst as = ['div', 'span'] as const;\nconst displayValues = ['none', 'inline-flex', 'flex'] as const;\nconst directionValues = ['row', 'column', 'row-reverse', 'column-reverse'] as const;\nconst alignValues = ['start', 'center', 'end', 'baseline', 'stretch'] as const;\nconst justifyValues = ['start', 'center', 'end', 'between'] as const;\nconst wrapValues = ['nowrap', 'wrap', 'wrap-reverse'] as const;\n\nconst flexPropDefs = {\n  /**\n   * Controls whether to render **div** or **span**\n   *\n   * @example\n   * as=\"div\"\n   * as=\"span\"\n   */\n  as: { type: 'enum', values: as, default: 'div' },\n  ...asChildPropDef,\n  /**\n   * Sets the CSS **display** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * display=\"inline-flex\"\n   * display={{ sm: 'none', lg: 'flex' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/display\n   */\n  display: {\n    type: 'enum',\n    className: 'rt-r-display',\n    values: displayValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **flex-direction** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * direction=\"column\"\n   * direction={{ sm: 'column', lg: 'row' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction\n   */\n  direction: {\n    type: 'enum',\n    className: 'rt-r-fd',\n    values: directionValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **align-items** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * align=\"center\"\n   * align={{ sm: 'baseline', lg: 'center' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/align-items\n   */\n  align: {\n    type: 'enum',\n    className: 'rt-r-ai',\n    values: alignValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **justify-content** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * justify=\"between\"\n   * justify={{ sm: 'start', lg: 'center' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content\n   */\n  justify: {\n    type: 'enum',\n    className: 'rt-r-jc',\n    values: justifyValues,\n    parseValue: parseJustifyValue,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **flex-wrap** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * wrap=\"wrap\"\n   * wrap={{ sm: 'wrap', lg: 'nowrap' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap\n   */\n  wrap: {\n    type: 'enum',\n    className: 'rt-r-fw',\n    values: wrapValues,\n    responsive: true,\n  },\n  ...gapPropDefs,\n} satisfies {\n  as: PropDef<(typeof as)[number]>;\n  display: PropDef<(typeof displayValues)[number]>;\n  direction: PropDef<(typeof directionValues)[number]>;\n  align: PropDef<(typeof alignValues)[number]>;\n  justify: PropDef<(typeof justifyValues)[number]>;\n  wrap: PropDef<(typeof wrapValues)[number]>;\n};\n\nfunction parseJustifyValue(value: string) {\n  return value === 'between' ? 'space-between' : value;\n}\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype FlexOwnProps = GetPropDefTypes<\n  typeof flexPropDefs & typeof gapPropDefs & typeof asChildPropDef\n>;\n\nexport { flexPropDefs };\nexport type { FlexOwnProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Flex } from './flex.js';\nimport { spinnerPropDefs } from './spinner.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype SpinnerElement = React.ElementRef<'span'>;\ntype SpinnerOwnProps = GetPropDefTypes<typeof spinnerPropDefs>;\ninterface SpinnerProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    SpinnerOwnProps {}\nconst Spinner = React.forwardRef<SpinnerElement, SpinnerProps>((props, forwardedRef) => {\n  const { className, children, loading, ...spinnerProps } = extractProps(\n    props,\n    spinnerPropDefs,\n    marginPropDefs\n  );\n\n  if (!loading) return children;\n\n  const spinner = (\n    <span {...spinnerProps} ref={forwardedRef} className={classNames('rt-Spinner', className)}>\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n    </span>\n  );\n\n  if (children === undefined) return spinner;\n\n  return (\n    <Flex asChild position=\"relative\" align=\"center\" justify=\"center\">\n      <span>\n        {/**\n         * `display: contents` removes the content from the accessibility tree in some browsers,\n         * so we force remove it with `aria-hidden`\n         */}\n        <span aria-hidden style={{ display: 'contents', visibility: 'hidden' }} inert={undefined}>\n          {children}\n        </span>\n\n        <Flex asChild align=\"center\" justify=\"center\" position=\"absolute\" inset=\"0\">\n          <span>{spinner}</span>\n        </Flex>\n      </span>\n    </Flex>\n  );\n});\nSpinner.displayName = 'Spinner';\n\nexport { Spinner };\nexport type { SpinnerProps };\n", "import type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\n\nconst spinnerPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  loading: { type: 'boolean', default: true },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  loading: PropDef<boolean>;\n};\n\nexport { spinnerPropDefs };\n", "import { VisuallyHidden as VisuallyHiddenPrimitive } from 'radix-ui';\nexport const VisuallyHidden = VisuallyHiddenPrimitive.Root;\nexport const Root = VisuallyHiddenPrimitive.Root;\nexport type VisuallyHiddenProps = VisuallyHiddenPrimitive.VisuallyHiddenProps;\n", "import type { baseButtonPropDefs } from '../components/_internal/base-button.props.js';\nimport type { calloutRootPropDefs } from '../components/callout.props.js';\nimport type { spinnerPropDefs } from '../components/spinner.props.js';\nimport type { textPropDefs } from '../components/text.props.js';\nimport type { Responsive } from '../props/prop-def.js';\n\nfunction mapResponsiveProp<Input extends string, Output>(\n  propValue: Responsive<Input> | undefined,\n  mapValue: (value: Input) => Output\n): Responsive<Output> | undefined {\n  if (propValue === undefined) return undefined;\n  if (typeof propValue === 'string') {\n    return mapValue(propValue);\n  }\n  return Object.fromEntries(\n    Object.entries(propValue).map(([key, value]) => [key, mapValue(value)])\n  );\n}\n\nfunction mapCalloutSizeToTextSize(\n  size: (typeof calloutRootPropDefs.size.values)[number]\n): (typeof textPropDefs.size.values)[number] {\n  return size === '3' ? '3' : '2';\n}\n\nfunction mapButtonSizeToSpinnerSize(\n  size: (typeof baseButtonPropDefs.size.values)[number]\n): (typeof spinnerPropDefs.size.values)[number] {\n  switch (size) {\n    case '1':\n      return '1';\n    case '2':\n    case '3':\n      return '2';\n    case '4':\n      return '3';\n  }\n}\n\nexport { mapResponsiveProp, mapCalloutSizeToTextSize, mapButtonSizeToSpinnerSize };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { Text } from './text.js';\nimport { calloutRootPropDefs } from './callout.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { mapResponsiveProp, mapCalloutSizeToTextSize } from '../helpers/map-prop-values.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type {\n  ComponentPropsWithout,\n  RemovedProps,\n  ComponentPropsAs,\n} from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype CalloutRootOwnProps = GetPropDefTypes<typeof calloutRootPropDefs>;\n\ntype CalloutContextValue = { size?: CalloutRootOwnProps['size'] };\nconst CalloutContext = React.createContext<CalloutContextValue>({});\n\ntype CalloutRootElement = React.ElementRef<'div'>;\ninterface CalloutRootProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    CalloutRootOwnProps {}\nconst CalloutRoot = React.forwardRef<CalloutRootElement, CalloutRootProps>(\n  (props, forwardedRef) => {\n    const { size = calloutRootPropDefs.size.default } = props;\n    const { asChild, children, className, color, ...rootProps } = extractProps(\n      props,\n      calloutRootPropDefs,\n      marginPropDefs\n    );\n    const Comp = asChild ? Slot.Root : 'div';\n    return (\n      <Comp\n        data-accent-color={color}\n        {...rootProps}\n        className={classNames('rt-CalloutRoot', className)}\n        ref={forwardedRef}\n      >\n        <CalloutContext.Provider value={React.useMemo(() => ({ size }), [size])}>\n          {children}\n        </CalloutContext.Provider>\n      </Comp>\n    );\n  }\n);\nCalloutRoot.displayName = 'Callout.Root';\n\ntype CalloutIconElement = React.ElementRef<'div'>;\ninterface CalloutIconProps extends ComponentPropsWithout<'div', RemovedProps> {}\nconst CalloutIcon = React.forwardRef<CalloutIconElement, CalloutIconProps>(\n  ({ className, ...props }, forwardedRef) => {\n    return (\n      <div {...props} className={classNames('rt-CalloutIcon', className)} ref={forwardedRef} />\n    );\n  }\n);\nCalloutIcon.displayName = 'Callout.Icon';\n\ntype CalloutTextElement = React.ElementRef<'p'>;\ntype CalloutTextProps = ComponentPropsAs<typeof Text, 'p'>;\nconst CalloutText = React.forwardRef<CalloutTextElement, CalloutTextProps>(\n  ({ className, ...props }, forwardedRef) => {\n    const { size } = React.useContext(CalloutContext);\n    return (\n      <Text\n        as=\"p\"\n        size={mapResponsiveProp(size, mapCalloutSizeToTextSize)}\n        {...props}\n        asChild={false}\n        ref={forwardedRef}\n        className={classNames('rt-CalloutText', className)}\n      />\n    );\n  }\n);\nCalloutText.displayName = 'Callout.Text';\n\nexport { CalloutRoot as Root, CalloutIcon as Icon, CalloutText as Text };\nexport type {\n  CalloutRootProps as RootProps,\n  CalloutIconProps as IconProps,\n  CalloutTextProps as TextProps,\n};\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['soft', 'surface', 'outline'] as const;\n\nconst calloutRootPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'soft' },\n  ...accentColorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { calloutRootPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { cardPropDefs } from './card.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype CardElement = React.ElementRef<'div'>;\ntype CardOwnProps = GetPropDefTypes<typeof cardPropDefs>;\ninterface CardProps extends ComponentPropsWithout<'div', RemovedProps>, MarginProps, CardOwnProps {}\nconst Card = React.forwardRef<CardElement, CardProps>((props, forwardedRef) => {\n  const { asChild, className, ...cardProps } = extractProps(props, cardPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot.Root : 'div';\n  return (\n    <Comp\n      ref={forwardedRef}\n      {...cardProps}\n      className={classNames('rt-reset', 'rt-BaseCard', 'rt-Card', className)}\n    />\n  );\n});\nCard.displayName = 'Card';\n\nexport { Card };\nexport type { CardProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4', '5'] as const;\nconst variants = ['surface', 'classic', 'ghost'] as const;\n\nconst cardPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '1', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { cardPropDefs };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Context } from 'radix-ui/internal';\n\nimport * as CheckboxGroupPrimitive from './checkbox-group.primitive.js';\nimport { createCheckboxGroupScope } from './checkbox-group.primitive.js';\nimport { checkboxCardsRootPropDefs } from './checkbox-cards.props.js';\nimport { baseCheckboxPropDefs } from './_internal/base-checkbox.props.js';\nimport { Grid } from './grid.js';\nimport { ThickCheckIcon } from './icons.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { Responsive, GetPropDefTypes } from '../props/prop-def.js';\n\nconst CHECKBOX_CARD_GROUP_NAME = 'CheckboxCards';\n\ntype ScopedProps<P> = P & { __scopeCheckboxCards?: Context.Scope };\nconst [createCheckboxCardsContext] = Context.createContextScope(CHECKBOX_CARD_GROUP_NAME, [\n  createCheckboxGroupScope,\n]);\nconst useCheckboxGroupScope = createCheckboxGroupScope();\n\ntype CheckboxCardsContextValue = {\n  size?: Responsive<(typeof checkboxCardsRootPropDefs.size.values)[number]>;\n  highContrast?: boolean;\n};\n\nconst [CheckboxCardsProvider, useCheckboxCardsContext] =\n  createCheckboxCardsContext<CheckboxCardsContextValue>(CHECKBOX_CARD_GROUP_NAME);\n\ntype CheckboxCardsRootElement = React.ElementRef<typeof CheckboxGroupPrimitive.Root>;\ntype CheckboxCardsRootOwnProps = GetPropDefTypes<typeof checkboxCardsRootPropDefs>;\ninterface CheckboxCardsRootProps\n  extends ComponentPropsWithout<\n      typeof CheckboxGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    CheckboxCardsRootOwnProps {}\nconst CheckboxCardsRoot = React.forwardRef<CheckboxCardsRootElement, CheckboxCardsRootProps>(\n  (props: ScopedProps<CheckboxCardsRootProps>, forwardedRef) => {\n    const { __scopeCheckboxCards, className, color, ...rootProps } = extractProps(\n      props,\n      checkboxCardsRootPropDefs,\n      marginPropDefs\n    );\n    const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxCards);\n    return (\n      <CheckboxCardsProvider\n        scope={__scopeCheckboxCards}\n        size={props.size}\n        highContrast={props.highContrast}\n      >\n        <Grid asChild>\n          <CheckboxGroupPrimitive.Root\n            {...checkboxGroupScope}\n            data-accent-color={color}\n            {...rootProps}\n            ref={forwardedRef}\n            className={classNames('rt-CheckboxCardsRoot', className)}\n          />\n        </Grid>\n      </CheckboxCardsProvider>\n    );\n  }\n);\nCheckboxCardsRoot.displayName = 'CheckboxCards.Root';\n\ntype CheckboxCardsItemElement = React.ElementRef<typeof CheckboxGroupPrimitive.Item>;\ninterface CheckboxCardsItemProps\n  extends ComponentPropsWithout<typeof CheckboxGroupPrimitive.Item, RemovedProps>,\n    MarginProps {}\nconst CheckboxCardsItem = React.forwardRef<\n  CheckboxCardsItemElement,\n  ScopedProps<CheckboxCardsItemProps>\n>(({ __scopeCheckboxCards, children, className, style, ...props }, forwardedRef) => {\n  const context = useCheckboxCardsContext('CheckboxCardsItem', __scopeCheckboxCards);\n  const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxCards);\n  const { className: checkboxClassName } = extractProps(\n    // Pass size / highContrast values from the context and static variant to generate styles\n    { size: context?.size, variant: 'surface', highContrast: context?.highContrast },\n    // Pass size & variant prop defs to allow it to be extracted\n    baseCheckboxPropDefs\n  );\n  return (\n    <label className={classNames('rt-BaseCard', 'rt-CheckboxCardsItem', className)} style={style}>\n      {children}\n      <CheckboxGroupPrimitive.Item\n        {...checkboxGroupScope}\n        {...props}\n        ref={forwardedRef}\n        className={classNames(\n          'rt-reset',\n          'rt-BaseCheckboxRoot',\n          'rt-CheckboxCardCheckbox',\n          checkboxClassName\n        )}\n      >\n        <CheckboxGroupPrimitive.Indicator\n          {...checkboxGroupScope}\n          asChild\n          className=\"rt-BaseCheckboxIndicator\"\n        >\n          <ThickCheckIcon />\n        </CheckboxGroupPrimitive.Indicator>\n      </CheckboxGroupPrimitive.Item>\n    </label>\n  );\n});\nCheckboxCardsItem.displayName = 'CheckboxCards.Item';\n\nexport { CheckboxCardsRoot as Root, CheckboxCardsItem as Item };\nexport type { CheckboxCardsRootProps as RootProps, CheckboxCardsItemProps as ItemProps };\n", "import { Primitive as BasePrimitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nexport * as Arrow from '@radix-ui/react-arrow';\nexport * as Collection from '@radix-ui/react-collection';\nexport { composeRefs, useComposedRefs } from '@radix-ui/react-compose-refs';\nexport * as Context from '@radix-ui/react-context';\nexport * as DismissableLayer from '@radix-ui/react-dismissable-layer';\nexport * as FocusGuards from '@radix-ui/react-focus-guards';\nexport * as FocusScope from '@radix-ui/react-focus-scope';\nexport * as Menu from '@radix-ui/react-menu';\nexport * as Popper from '@radix-ui/react-popper';\nexport * as Presence from '@radix-ui/react-presence';\nexport type { PrimitivePropsWithRef } from '@radix-ui/react-primitive';\nexport * as RovingFocus from '@radix-ui/react-roving-focus';\nexport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nexport {\n  useControllableState,\n  useControllableStateReducer,\n} from '@radix-ui/react-use-controllable-state';\nexport { useEffectEvent } from '@radix-ui/react-use-effect-event';\nexport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\nexport { useIsHydrated } from '@radix-ui/react-use-is-hydrated';\nexport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nexport { useSize } from '@radix-ui/react-use-size';\nexport { composeEventHandlers } from '@radix-ui/primitive';\n\nconst Primitive = BasePrimitive as typeof BasePrimitive & {\n  Root: typeof BasePrimitive;\n  dispatchDiscreteCustomEvent: typeof dispatchDiscreteCustomEvent;\n};\nPrimitive.dispatchDiscreteCustomEvent = dispatchDiscreteCustomEvent;\nPrimitive.Root = BasePrimitive;\nexport { Primitive };\n", "'use client';\n\nimport * as React from 'react';\nimport { Checkbox as CheckboxPrimitive, Direction } from 'radix-ui';\nimport {\n  Context,\n  Primitive,\n  useComposedRefs,\n  RovingFocus,\n  useControllableState,\n} from 'radix-ui/internal';\n\nconst { useDirection } = Direction;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxGroup\n * -----------------------------------------------------------------------------------------------*/\nconst CHECKBOX_GROUP_NAME = 'CheckboxGroup';\n\ntype ScopedProps<P> = P & { __scopeCheckboxGroup?: Context.Scope };\nconst [createCheckboxGroupContext, createCheckboxGroupScope] = Context.createContextScope(\n  CHECKBOX_GROUP_NAME,\n  [RovingFocus.createRovingFocusGroupScope, CheckboxPrimitive.createCheckboxScope]\n);\nconst useRovingFocusGroupScope = RovingFocus.createRovingFocusGroupScope();\nconst useCheckboxScope = CheckboxPrimitive.createCheckboxScope();\n\ntype CheckboxGroupContextValue = {\n  name?: string;\n  required: boolean;\n  disabled: boolean;\n  value?: string[];\n  onItemCheck(value: string): void;\n  onItemUncheck(value: string): void;\n};\n\nconst [CheckboxGroupProvider, useCheckboxGroupContext] =\n  createCheckboxGroupContext<CheckboxGroupContextValue>(CHECKBOX_GROUP_NAME);\n\ntype CheckboxGroupElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocus.Root>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface CheckboxGroupProps extends PrimitiveDivProps {\n  name?: CheckboxGroupContextValue['name'];\n  required?: React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>['required'];\n  disabled?: React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>['disabled'];\n  dir?: RovingFocusGroupProps['dir'];\n  orientation?: RovingFocusGroupProps['orientation'];\n  loop?: RovingFocusGroupProps['loop'];\n  defaultValue?: string[];\n  value?: CheckboxGroupContextValue['value'];\n  onValueChange?: (value: string[]) => void;\n}\n\nconst CheckboxGroup = React.forwardRef<CheckboxGroupElement, CheckboxGroupProps>(\n  (props: ScopedProps<CheckboxGroupProps>, forwardedRef) => {\n    const {\n      __scopeCheckboxGroup,\n      name,\n      defaultValue,\n      value: valueProp,\n      required = false,\n      disabled = false,\n      orientation,\n      dir,\n      loop = true,\n      onValueChange,\n      ...groupProps\n    } = props;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeCheckboxGroup);\n    const direction = useDirection(dir);\n    const [value = [], setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue,\n      onChange: onValueChange,\n    });\n\n    const handleItemCheck = React.useCallback(\n      (itemValue: string) => setValue((prevValue = []) => [...prevValue, itemValue]),\n      [setValue]\n    );\n\n    const handleItemUncheck = React.useCallback(\n      (itemValue: string) =>\n        setValue((prevValue = []) => prevValue.filter((value) => value !== itemValue)),\n      [setValue]\n    );\n\n    return (\n      <CheckboxGroupProvider\n        scope={__scopeCheckboxGroup}\n        name={name}\n        required={required}\n        disabled={disabled}\n        value={value}\n        onItemCheck={handleItemCheck}\n        onItemUncheck={handleItemUncheck}\n      >\n        <RovingFocus.Root\n          asChild\n          {...rovingFocusGroupScope}\n          orientation={orientation}\n          dir={direction}\n          loop={loop}\n        >\n          <Primitive.div\n            role=\"group\"\n            data-disabled={disabled ? '' : undefined}\n            dir={direction}\n            {...groupProps}\n            ref={forwardedRef}\n          />\n        </RovingFocus.Root>\n      </CheckboxGroupProvider>\n    );\n  }\n);\n\nCheckboxGroup.displayName = CHECKBOX_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'CheckboxGroupItem';\n\ntype CheckboxGroupItemElement = React.ElementRef<typeof CheckboxPrimitive.Root>;\ntype CheckboxProps = React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>;\ninterface CheckboxGroupItemProps\n  extends Omit<CheckboxProps, 'checked' | 'defaultChecked' | 'onCheckedChange' | 'name'> {\n  value: string;\n}\n\nconst CheckboxGroupItem = React.forwardRef<CheckboxGroupItemElement, CheckboxGroupItemProps>(\n  (props: ScopedProps<CheckboxGroupItemProps>, forwardedRef) => {\n    const { __scopeCheckboxGroup, disabled, ...itemProps } = props;\n    const context = useCheckboxGroupContext(ITEM_NAME, __scopeCheckboxGroup);\n    const isDisabled = context.disabled || disabled;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeCheckboxGroup);\n    const checkboxScope = useCheckboxScope(__scopeCheckboxGroup);\n    const ref = React.useRef<React.ElementRef<typeof CheckboxPrimitive.Root>>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const checked = context.value?.includes(itemProps.value);\n\n    return (\n      <RovingFocus.Item asChild {...rovingFocusGroupScope} focusable={!isDisabled} active={checked}>\n        <CheckboxPrimitive.Root\n          name={context.name}\n          disabled={isDisabled}\n          required={context.required}\n          checked={checked}\n          {...checkboxScope}\n          {...itemProps}\n          ref={composedRefs}\n          onCheckedChange={(checked) => {\n            if (checked) {\n              context.onItemCheck(props.value);\n            } else {\n              context.onItemUncheck(props.value);\n            }\n          }}\n        />\n      </RovingFocus.Item>\n    );\n  }\n);\n\nCheckboxGroupItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxGroupIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'CheckboxGroupIndicator';\n\ntype CheckboxGroupIndicatorElement = React.ElementRef<typeof CheckboxPrimitive.Indicator>;\ntype CheckboxIndicatorProps = React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Indicator>;\ninterface CheckboxGroupIndicatorProps extends CheckboxIndicatorProps {}\n\nconst CheckboxGroupIndicator = React.forwardRef<\n  CheckboxGroupIndicatorElement,\n  CheckboxGroupIndicatorProps\n>((props: ScopedProps<CheckboxGroupIndicatorProps>, forwardedRef) => {\n  const { __scopeCheckboxGroup, ...indicatorProps } = props;\n  const checkboxScope = useCheckboxScope(__scopeCheckboxGroup);\n  return <CheckboxPrimitive.Indicator {...checkboxScope} {...indicatorProps} ref={forwardedRef} />;\n});\n\nCheckboxGroupIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nconst Root = CheckboxGroup;\nconst Item = CheckboxGroupItem;\nconst Indicator = CheckboxGroupIndicator;\n\nexport {\n  createCheckboxGroupScope,\n  //\n  CheckboxGroup,\n  CheckboxGroupItem,\n  CheckboxGroupIndicator,\n  //\n  Root,\n  Item,\n  Indicator,\n};\nexport type { CheckboxGroupProps, CheckboxGroupItemProps, CheckboxGroupIndicatorProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { gapPropDefs } from '../props/gap.props.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst as = ['div', 'span'] as const;\nconst displayValues = ['none', 'inline-grid', 'grid'] as const;\nconst columnsValues = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\nconst rowsValues = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\nconst flowValues = ['row', 'column', 'dense', 'row-dense', 'column-dense'] as const;\nconst alignValues = ['start', 'center', 'end', 'baseline', 'stretch'] as const;\nconst justifyValues = ['start', 'center', 'end', 'between'] as const;\n\nconst gridPropDefs = {\n  /**\n   * Controls whether to render **div** or **span**\n   *\n   * @example\n   * as=\"div\"\n   * as=\"span\"\n   */\n  as: { type: 'enum', values: as, default: 'div' },\n  ...asChildPropDef,\n  /**\n   * Sets the CSS **display** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * display=\"inline-grid\"\n   * display={{ sm: 'none', lg: 'grid' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/display\n   */\n  display: {\n    type: 'enum',\n    className: 'rt-r-display',\n    values: displayValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-template** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * template='\"header header\" \"sidebar content\"'\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas\n   */\n  areas: {\n    type: 'string',\n    className: 'rt-r-gta',\n    customProperties: ['--grid-template-areas'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-template-columns** property.\n   * Supports numeric string values, CSS strings and responsive objects.\n   *\n   * Use numeric string values to create grid columns of even size.\n   *\n   * @example\n   * columns=\"3\"\n   * columns=\"100px 1fr\"\n   * columns={{ xs: '1', md: 'auto 1fr' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns\n   */\n  columns: {\n    type: 'enum | string',\n    className: 'rt-r-gtc',\n    customProperties: ['--grid-template-columns'],\n    values: columnsValues,\n    parseValue: parseGridValue,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-template-rows** property.\n   * Supports numeric string values, CSS strings and responsive objects.\n   *\n   * Use numeric string values to create grid rows of even size.\n   *\n   * @example\n   * rows=\"3\"\n   * rows=\"100px 1fr\"\n   * rows={{ xs: '1', md: 'auto 1fr' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-rows\n   */\n  rows: {\n    type: 'enum | string',\n    className: 'rt-r-gtr',\n    customProperties: ['--grid-template-rows'],\n    values: rowsValues,\n    parseValue: parseGridValue,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-auto-flow** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * flow=\"column\"\n   * flow={{ sm: 'column', lg: 'row' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-flow\n   */\n  flow: {\n    type: 'enum',\n    className: 'rt-r-gaf',\n    values: flowValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **align-items** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * align=\"center\"\n   * align={{ sm: 'baseline', lg: 'center' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/align-items\n   */\n  align: {\n    type: 'enum',\n    className: 'rt-r-ai',\n    values: alignValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **justify-content** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * justify=\"between\"\n   * justify={{ sm: 'start', lg: 'center' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content\n   */\n  justify: {\n    type: 'enum',\n    className: 'rt-r-jc',\n    values: justifyValues,\n    parseValue: parseJustifyValue,\n    responsive: true,\n  },\n  ...gapPropDefs,\n} satisfies {\n  as: PropDef<(typeof as)[number]>;\n  display: PropDef<(typeof displayValues)[number]>;\n  areas: PropDef<string>;\n  columns: PropDef<(typeof columnsValues)[number]>;\n  rows: PropDef<(typeof rowsValues)[number]>;\n  flow: PropDef<(typeof flowValues)[number]>;\n  align: PropDef<(typeof alignValues)[number]>;\n  justify: PropDef<(typeof justifyValues)[number]>;\n};\n\nfunction parseGridValue(value: string): string {\n  if ((gridPropDefs.columns.values as readonly string[]).includes(value)) {\n    return value;\n  }\n\n  return value?.match(/^\\d+$/) ? `repeat(${value}, minmax(0, 1fr))` : value;\n}\n\nfunction parseJustifyValue(value: string) {\n  return value === 'between' ? 'space-between' : value;\n}\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype GridOwnProps = GetPropDefTypes<typeof gridPropDefs & typeof asChildPropDef>;\n\nexport { gridPropDefs };\nexport type { GridOwnProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { gridPropDefs } from './grid.props.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['surface', 'classic'] as const;\n\nconst checkboxCardsRootPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n  columns: { ...gridPropDefs.columns, default: 'repeat(auto-fit, minmax(200px, 1fr))' },\n  gap: { ...gridPropDefs.gap, default: '4' },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  columns: PropDef<(typeof gridPropDefs.columns.values)[number]>;\n  gap: PropDef<(typeof gridPropDefs.gap.values)[number]>;\n};\n\nexport { checkboxCardsRootPropDefs };\n", "import { colorPropDef } from '../../props/color.prop.js';\nimport { highContrastPropDef } from '../../props/high-contrast.prop.js';\n\nimport type { PropDef } from '../../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst baseCheckboxPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { baseCheckboxPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Slot } from './slot.js';\nimport { gridPropDefs } from './grid.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GridOwnProps } from './grid.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype GridElement = React.ElementRef<'div'>;\ninterface CommonGridProps extends MarginProps, LayoutProps, GridOwnProps {}\ntype GridDivProps = { as?: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype GridSpanProps = { as: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype GridProps = CommonGridProps & (GridSpanProps | GridDivProps);\n\nconst Grid = React.forwardRef<GridElement, GridProps>((props, forwardedRef) => {\n  const {\n    className,\n    asChild,\n    as: Tag = 'div',\n    ...gridProps\n  } = extractProps(props, gridPropDefs, layoutPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : Tag;\n  return <Comp {...gridProps} ref={forwardedRef} className={classNames('rt-Grid', className)} />;\n});\nGrid.displayName = 'Grid';\n\nexport { Grid };\nexport type { GridProps };\n", "import React from 'react';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype IconElement = React.ElementRef<'svg'>;\ninterface IconProps extends ComponentPropsWithout<'svg', RemovedProps | 'children'> {}\n\nconst ThickDividerHorizontalIcon = React.forwardRef<IconElement, IconProps>(\n  (props, forwardedRef) => {\n    return (\n      <svg\n        width=\"9\"\n        height=\"9\"\n        viewBox=\"0 0 9 9\"\n        fill=\"currentcolor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M0.75 4.5C0.75 4.08579 1.08579 3.75 1.5 3.75H7.5C7.91421 3.75 8.25 4.08579 8.25 4.5C8.25 4.91421 7.91421 5.25 7.5 5.25H1.5C1.08579 5.25 0.75 4.91421 0.75 4.5Z\"\n        />\n      </svg>\n    );\n  }\n);\n\nThickDividerHorizontalIcon.displayName = 'ThickDividerHorizontalIcon';\n\nconst ThickCheckIcon = React.forwardRef<IconElement, IconProps>((props, forwardedRef) => {\n  return (\n    <svg\n      width=\"9\"\n      height=\"9\"\n      viewBox=\"0 0 9 9\"\n      fill=\"currentcolor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      ref={forwardedRef}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.53547 0.62293C8.88226 0.849446 8.97976 1.3142 8.75325 1.66099L4.5083 8.1599C4.38833 8.34356 4.19397 8.4655 3.9764 8.49358C3.75883 8.52167 3.53987 8.45309 3.3772 8.30591L0.616113 5.80777C0.308959 5.52987 0.285246 5.05559 0.563148 4.74844C0.84105 4.44128 1.31533 4.41757 1.62249 4.69547L3.73256 6.60459L7.49741 0.840706C7.72393 0.493916 8.18868 0.396414 8.53547 0.62293Z\"\n      />\n    </svg>\n  );\n});\nThickCheckIcon.displayName = 'ThickCheckIcon';\n\nconst ChevronDownIcon = React.forwardRef<IconElement, IconProps>((props, forwardedRef) => {\n  return (\n    <svg\n      width=\"9\"\n      height=\"9\"\n      viewBox=\"0 0 9 9\"\n      fill=\"currentcolor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      ref={forwardedRef}\n    >\n      <path d=\"M0.135232 3.15803C0.324102 2.95657 0.640521 2.94637 0.841971 3.13523L4.5 6.56464L8.158 3.13523C8.3595 2.94637 8.6759 2.95657 8.8648 3.15803C9.0536 3.35949 9.0434 3.67591 8.842 3.86477L4.84197 7.6148C4.64964 7.7951 4.35036 7.7951 4.15803 7.6148L0.158031 3.86477C-0.0434285 3.67591 -0.0536285 3.35949 0.135232 3.15803Z\" />\n    </svg>\n  );\n});\nChevronDownIcon.displayName = 'ChevronDownIcon';\n\nconst ThickChevronRightIcon = React.forwardRef<IconElement, IconProps>((props, forwardedRef) => {\n  return (\n    <svg\n      width=\"9\"\n      height=\"9\"\n      viewBox=\"0 0 9 9\"\n      fill=\"currentcolor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      ref={forwardedRef}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M3.23826 0.201711C3.54108 -0.0809141 4.01567 -0.0645489 4.29829 0.238264L7.79829 3.98826C8.06724 4.27642 8.06724 4.72359 7.79829 5.01174L4.29829 8.76174C4.01567 9.06455 3.54108 9.08092 3.23826 8.79829C2.93545 8.51567 2.91909 8.04108 3.20171 7.73826L6.22409 4.5L3.20171 1.26174C2.91909 0.958928 2.93545 0.484337 3.23826 0.201711Z\"\n      />\n    </svg>\n  );\n});\nThickChevronRightIcon.displayName = 'ThickChevronRightIcon';\n\nexport { ChevronDownIcon, ThickCheckIcon, ThickChevronRightIcon, ThickDividerHorizontalIcon };\nexport type { IconProps };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Context } from 'radix-ui/internal';\n\nimport * as CheckboxGroupPrimitive from './checkbox-group.primitive.js';\nimport { createCheckboxGroupScope } from './checkbox-group.primitive.js';\nimport { checkboxGroupRootPropDefs } from './checkbox-group.props.js';\nimport { ThickCheckIcon } from './icons.js';\nimport { Text } from './text.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\nconst CHECKBOX_GROUP_NAME = 'CheckboxGroup';\n\ntype ScopedProps<P> = P & { __scopeCheckboxGroup?: Context.Scope };\nconst [createCheckboxGroupContext] = Context.createContextScope(CHECKBOX_GROUP_NAME, [\n  createCheckboxGroupScope,\n]);\nconst useCheckboxGroupScope = createCheckboxGroupScope();\n\ntype CheckboxGroupRootOwnProps = GetPropDefTypes<typeof checkboxGroupRootPropDefs>;\ntype CheckboxGroupContextValue = CheckboxGroupRootOwnProps;\n\nconst [CheckboxGroupProvider, useCheckboxGroupContext] =\n  createCheckboxGroupContext<CheckboxGroupContextValue>(CHECKBOX_GROUP_NAME);\n\ntype CheckboxGroupRootElement = React.ElementRef<typeof CheckboxGroupPrimitive.Root>;\ninterface CheckboxGroupRootProps\n  extends ComponentPropsWithout<\n      typeof CheckboxGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    CheckboxGroupRootOwnProps {}\nconst CheckboxGroupRoot = React.forwardRef<CheckboxGroupRootElement, CheckboxGroupRootProps>(\n  (\n    {\n      color = checkboxGroupRootPropDefs.color.default,\n      highContrast = checkboxGroupRootPropDefs.highContrast.default,\n      size = checkboxGroupRootPropDefs.size.default,\n      variant = checkboxGroupRootPropDefs.variant.default,\n      ...props\n    }: ScopedProps<CheckboxGroupRootProps>,\n    forwardedRef\n  ) => {\n    const { __scopeCheckboxGroup, className, ...rootProps } = extractProps(props, marginPropDefs);\n    const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxGroup);\n    return (\n      <CheckboxGroupProvider\n        scope={__scopeCheckboxGroup}\n        color={color}\n        size={size}\n        highContrast={highContrast}\n        variant={variant}\n      >\n        <CheckboxGroupPrimitive.Root\n          {...checkboxGroupScope}\n          {...rootProps}\n          ref={forwardedRef}\n          className={classNames('rt-CheckboxGroupRoot', className)}\n        />\n      </CheckboxGroupProvider>\n    );\n  }\n);\nCheckboxGroupRoot.displayName = 'CheckboxGroup.Root';\n\ntype CheckboxGroupItemElement = React.ElementRef<typeof CheckboxGroupPrimitive.Item>;\ninterface CheckboxGroupItemProps\n  extends ComponentPropsWithout<typeof CheckboxGroupPrimitive.Item, RemovedProps>,\n    MarginProps {}\nconst CheckboxGroupItem = React.forwardRef<CheckboxGroupItemElement, CheckboxGroupItemProps>(\n  (_props: ScopedProps<CheckboxGroupItemProps>, forwardedRef) => {\n    const { __scopeCheckboxGroup, children, className, style, ...props } = _props;\n    const { size } = useCheckboxGroupContext('CheckboxGroupItem', __scopeCheckboxGroup);\n\n    // Render `<Text as=\"label\">` if children\u00A0are provided, otherwise render\n    // the solo checkbox to allow building out your custom layouts with it.\n    if (children) {\n      return (\n        <Text\n          as=\"label\"\n          size={size}\n          className={classNames('rt-CheckboxGroupItem', className)}\n          style={style}\n        >\n          <CheckboxGroupItemCheckbox\n            __scopeCheckboxGroup={__scopeCheckboxGroup}\n            {...props}\n            ref={forwardedRef}\n          />\n          {children && <span className=\"rt-CheckboxGroupItemInner\">{children}</span>}\n        </Text>\n      );\n    }\n\n    return (\n      <CheckboxGroupItemCheckbox\n        __scopeCheckboxGroup={__scopeCheckboxGroup}\n        {...props}\n        ref={forwardedRef}\n        className={className}\n        style={style}\n      />\n    );\n  }\n);\nCheckboxGroupItem.displayName = 'CheckboxGroup.Item';\n\ntype CheckboxGroupItemCheckboxElement = React.ElementRef<typeof CheckboxGroupPrimitive.Item>;\ninterface CheckboxGroupItemCheckboxProps\n  extends ComponentPropsWithout<typeof CheckboxGroupPrimitive.Item, RemovedProps> {}\nconst CheckboxGroupItemCheckbox = React.forwardRef<\n  CheckboxGroupItemCheckboxElement,\n  ScopedProps<CheckboxGroupItemCheckboxProps>\n>(({ __scopeCheckboxGroup, ...props }, forwardedRef) => {\n  const context = useCheckboxGroupContext('CheckboxGroupItemCheckbox', __scopeCheckboxGroup);\n  const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxGroup);\n  const { color, className } = extractProps(\n    { ...props, ...context },\n    checkboxGroupRootPropDefs,\n    marginPropDefs\n  );\n  return (\n    <CheckboxGroupPrimitive.Item\n      {...checkboxGroupScope}\n      data-accent-color={color}\n      {...props}\n      ref={forwardedRef}\n      className={classNames(\n        'rt-reset',\n        'rt-BaseCheckboxRoot',\n        'rt-CheckboxGroupItemCheckbox',\n        className\n      )}\n    >\n      <CheckboxGroupPrimitive.Indicator\n        {...checkboxGroupScope}\n        asChild\n        className=\"rt-BaseCheckboxIndicator\"\n      >\n        <ThickCheckIcon />\n      </CheckboxGroupPrimitive.Indicator>\n    </CheckboxGroupPrimitive.Item>\n  );\n});\nCheckboxGroupItemCheckbox.displayName = 'CheckboxGroup.ItemCheckbox';\n\nexport { CheckboxGroupRoot as Root, CheckboxGroupItem as Item };\nexport type { CheckboxGroupRootProps as RootProps, CheckboxGroupItemProps as ItemProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { baseCheckboxPropDefs } from './_internal/base-checkbox.props.js';\n\nconst checkboxGroupRootPropDefs = {\n  ...asChildPropDef,\n  ...baseCheckboxPropDefs,\n};\n\nexport { checkboxGroupRootPropDefs };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Checkbox as CheckboxPrimitive } from 'radix-ui';\nimport { useControllableState } from 'radix-ui/internal';\n\nimport { checkboxPropDefs } from './checkbox.props.js';\nimport { ThickCheckIcon, ThickDividerHorizontalIcon } from './icons.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype CheckboxElement = React.ElementRef<typeof CheckboxPrimitive.Root>;\ntype CheckboxOwnProps = GetPropDefTypes<typeof checkboxPropDefs>;\ninterface CheckboxProps\n  extends ComponentPropsWithout<\n      typeof CheckboxPrimitive.Root,\n      'asChild' | 'color' | 'defaultValue' | 'children'\n    >,\n    MarginProps,\n    CheckboxOwnProps {}\nconst Checkbox = React.forwardRef<CheckboxElement, CheckboxProps>((props, forwardedRef) => {\n  const {\n    className,\n    color,\n    checked: checkedProp,\n    defaultChecked: defaultCheckedProp,\n    onCheckedChange,\n    ...checkboxProps\n  } = extractProps(props, checkboxPropDefs, marginPropDefs);\n\n  const [checked, setChecked] = useControllableState({\n    prop: checkedProp,\n    defaultProp: defaultCheckedProp,\n    onChange: onCheckedChange,\n  });\n\n  return (\n    <CheckboxPrimitive.Root\n      data-accent-color={color}\n      {...checkboxProps}\n      defaultChecked={defaultCheckedProp}\n      checked={checked}\n      onCheckedChange={setChecked}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-BaseCheckboxRoot', 'rt-CheckboxRoot', className)}\n    >\n      <CheckboxPrimitive.Indicator\n        asChild\n        className=\"rt-BaseCheckboxIndicator rt-CheckboxIndicator\"\n      >\n        {checked === 'indeterminate' ? <ThickDividerHorizontalIcon /> : <ThickCheckIcon />}\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  );\n});\nCheckbox.displayName = 'Checkbox';\n\nexport { Checkbox };\nexport type { CheckboxProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { codePropDefs } from './code.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype CodeElement = React.ElementRef<'code'>;\ntype CodeOwnProps = GetPropDefTypes<typeof codePropDefs>;\ninterface CodeProps\n  extends ComponentPropsWithout<'code', RemovedProps>,\n    MarginProps,\n    CodeOwnProps {}\nconst Code = React.forwardRef<CodeElement, CodeProps>((props, forwardedRef) => {\n  const { asChild, className, color, ...codeProps } = extractProps(\n    props,\n    codePropDefs,\n    marginPropDefs\n  );\n  // Code ghost color prop should work as text color by default\n  const resolvedColor = props.variant === 'ghost' ? color || undefined : color;\n  const Comp = asChild ? Slot.Root : 'code';\n  return (\n    <Comp\n      data-accent-color={resolvedColor}\n      {...codeProps}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-Code', className)}\n    />\n  );\n});\nCode.displayName = 'Code';\n\nexport { Code };\nexport type { CodeProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\nimport { weightPropDef } from '../props/weight.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\nconst variants = ['solid', 'soft', 'outline', 'ghost'] as const;\n\nconst codePropDefs = {\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    responsive: true,\n  },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'soft' },\n  ...weightPropDef,\n  ...accentColorPropDef,\n  ...highContrastPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { codePropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { containerPropDefs } from './container.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { getSubtree } from '../helpers/get-subtree.js';\nimport { heightPropDefs } from '../props/height.props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { widthPropDefs } from '../props/width.props.js';\n\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ContainerOwnProps } from './container.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype ContainerElement = React.ElementRef<'div'>;\ninterface ContainerProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    LayoutProps,\n    ContainerOwnProps {}\nconst Container = React.forwardRef<ContainerElement, ContainerProps>(\n  ({ width, minWidth, maxWidth, height, minHeight, maxHeight, ...props }, forwardedRef) => {\n    const { asChild, children, className, ...containerProps } = extractProps(\n      props,\n      containerPropDefs,\n      layoutPropDefs,\n      marginPropDefs\n    );\n\n    const { className: innerClassName, style: innerStyle } = extractProps(\n      { width, minWidth, maxWidth, height, minHeight, maxHeight },\n      widthPropDefs,\n      heightPropDefs\n    );\n\n    const Comp = asChild ? Slot.Root : 'div';\n\n    return (\n      <Comp\n        {...containerProps}\n        ref={forwardedRef}\n        className={classNames('rt-Container', className)}\n      >\n        {getSubtree({ asChild, children }, (children) => (\n          <div className={classNames('rt-ContainerInner', innerClassName)} style={innerStyle}>\n            {children}\n          </div>\n        ))}\n      </Comp>\n    );\n  }\n);\nContainer.displayName = 'Container';\n\nexport { Container };\nexport type { ContainerProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4'] as const;\nconst displayValues = ['none', 'initial'] as const;\nconst alignValues = ['left', 'center', 'right'] as const;\n\nconst containerPropDefs = {\n  ...asChildPropDef,\n  /**\n   * Controls the **max-width** of the content within the container.\n   * Supports the predefined values and responsive objects.\n   *\n   * @values\n   * | Size     | Max. width |\n   * | :------- | ---------: |\n   * | size=\"1\" | 448px      |\n   * | size=\"2\" | 688px      |\n   * | size=\"3\" | 880px      |\n   * | size=\"4\" | 1136px     |\n   *\n   * @example\n   * size=\"4\"\n   * size={{ sm: '3', lg: '4' }}\n   *\n   * @link\n   * https://github.com/radix-ui/themes/blob/main/packages/radix-ui-themes/src/components/container.css\n   */\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    default: '4',\n    responsive: true,\n  },\n  /**\n   * Controls whether the container is visible or hidden.\n   * Supports \"none\", \"initial\", and responsive object values.\n   *\n   * @example\n   * display=\"none\"\n   * display={{ sm: 'none', lg: 'initial' }}\n   */\n  display: {\n    type: 'enum',\n    className: 'rt-r-display',\n    values: displayValues,\n    parseValue: parseDisplayValue,\n    responsive: true,\n  },\n  /**\n   * Controls the alignment of the content within the container.\n   *\n   * @example\n   * align=\"center\"\n   * align={{ initial: 'left', lg: 'center' }}\n   */\n  align: {\n    type: 'enum',\n    className: 'rt-r-ai',\n    values: alignValues,\n    parseValue: parseAlignValue,\n    responsive: true,\n  },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  display: PropDef<(typeof displayValues)[number]>;\n  align: PropDef<(typeof alignValues)[number]>;\n};\n\nfunction parseDisplayValue(value: string) {\n  return value === 'initial' ? 'flex' : value;\n}\n\nfunction parseAlignValue(value: string) {\n  return value === 'left' ? 'start' : value === 'right' ? 'end' : value;\n}\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype ContainerOwnProps = GetPropDefTypes<typeof containerPropDefs & typeof asChildPropDef>;\n\nexport { containerPropDefs };\nexport type { ContainerOwnProps };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ContextMenu as ContextMenuPrimitive, Slot } from 'radix-ui';\n\nimport { ScrollArea } from './scroll-area.js';\nimport {\n  contextMenuContentPropDefs,\n  contextMenuItemPropDefs,\n  contextMenuCheckboxItemPropDefs,\n  contextMenuRadioItemPropDefs,\n} from './context-menu.props.js';\nimport { Theme, useThemeContext } from './theme.js';\nimport { ThickCheckIcon, ThickChevronRightIcon } from './icons.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ninterface ContextMenuRootProps\n  extends React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Root> {}\nconst ContextMenuRoot: React.FC<ContextMenuRootProps> = (props) => (\n  <ContextMenuPrimitive.Root {...props} />\n);\nContextMenuRoot.displayName = 'ContextMenu.Root';\n\ntype ContextMenuTriggerElement = React.ElementRef<typeof ContextMenuPrimitive.Trigger>;\ninterface ContextMenuTriggerProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Trigger, RemovedProps> {}\nconst ContextMenuTrigger = React.forwardRef<ContextMenuTriggerElement, ContextMenuTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <ContextMenuPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </ContextMenuPrimitive.Trigger>\n  )\n);\nContextMenuTrigger.displayName = 'ContextMenu.Trigger';\n\ntype ContextMenuContentOwnProps = GetPropDefTypes<typeof contextMenuContentPropDefs>;\ntype ContextMenuContentContextValue = ContextMenuContentOwnProps;\nconst ContextMenuContentContext = React.createContext<ContextMenuContentContextValue>({});\ntype ContextMenuContentElement = React.ElementRef<typeof ContextMenuPrimitive.Content>;\ninterface ContextMenuContentProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Content, RemovedProps>,\n    ContextMenuContentContextValue {\n  container?: React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Portal>['container'];\n}\nconst ContextMenuContent = React.forwardRef<ContextMenuContentElement, ContextMenuContentProps>(\n  (props, forwardedRef) => {\n    const themeContext = useThemeContext();\n    const {\n      size = contextMenuContentPropDefs.size.default,\n      variant = contextMenuContentPropDefs.variant.default,\n      highContrast = contextMenuContentPropDefs.highContrast.default,\n    } = props;\n    const { className, children, color, container, forceMount, ...contentProps } = extractProps(\n      props,\n      contextMenuContentPropDefs\n    );\n    const resolvedColor = color || themeContext.accentColor;\n    return (\n      <ContextMenuPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <ContextMenuPrimitive.Content\n            data-accent-color={resolvedColor}\n            alignOffset={-Number(size) * 4}\n            collisionPadding={10}\n            {...contentProps}\n            asChild={false}\n            ref={forwardedRef}\n            className={classNames(\n              'rt-PopperContent',\n              'rt-BaseMenuContent',\n              'rt-ContextMenuContent',\n              className\n            )}\n          >\n            <ScrollArea type=\"auto\">\n              <div className={classNames('rt-BaseMenuViewport', 'rt-ContextMenuViewport')}>\n                <ContextMenuContentContext.Provider\n                  value={React.useMemo(\n                    () => ({ size, variant, color: resolvedColor, highContrast }),\n                    [size, variant, resolvedColor, highContrast]\n                  )}\n                >\n                  {children}\n                </ContextMenuContentContext.Provider>\n              </div>\n            </ScrollArea>\n          </ContextMenuPrimitive.Content>\n        </Theme>\n      </ContextMenuPrimitive.Portal>\n    );\n  }\n);\nContextMenuContent.displayName = 'ContextMenu.Content';\n\ntype ContextMenuLabelElement = React.ElementRef<typeof ContextMenuPrimitive.Label>;\ninterface ContextMenuLabelProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Label, RemovedProps> {}\nconst ContextMenuLabel = React.forwardRef<ContextMenuLabelElement, ContextMenuLabelProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <ContextMenuPrimitive.Label\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseMenuLabel', 'rt-ContextMenuLabel', className)}\n    />\n  )\n);\nContextMenuLabel.displayName = 'ContextMenu.Label';\n\ntype ContextMenuItemElement = React.ElementRef<typeof ContextMenuPrimitive.Item>;\ntype ContextMenuItemOwnProps = GetPropDefTypes<typeof contextMenuItemPropDefs>;\ninterface ContextMenuItemProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Item, RemovedProps>,\n    ContextMenuItemOwnProps {}\nconst ContextMenuItem = React.forwardRef<ContextMenuItemElement, ContextMenuItemProps>(\n  (props, forwardedRef) => {\n    const {\n      className,\n      children,\n      color = contextMenuItemPropDefs.color.default,\n      shortcut,\n      ...itemProps\n    } = props;\n    return (\n      <ContextMenuPrimitive.Item\n        data-accent-color={color}\n        {...itemProps}\n        ref={forwardedRef}\n        className={classNames('rt-reset', 'rt-BaseMenuItem', 'rt-ContextMenuItem', className)}\n      >\n        <Slot.Slottable>{children}</Slot.Slottable>\n        {shortcut && <div className=\"rt-BaseMenuShortcut rt-ContextMenuShortcut\">{shortcut}</div>}\n      </ContextMenuPrimitive.Item>\n    );\n  }\n);\nContextMenuItem.displayName = 'ContextMenu.Item';\n\ntype ContextMenuGroupElement = React.ElementRef<typeof ContextMenuPrimitive.Group>;\ninterface ContextMenuGroupProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Group, RemovedProps> {}\nconst ContextMenuGroup = React.forwardRef<ContextMenuGroupElement, ContextMenuGroupProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <ContextMenuPrimitive.Group\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseMenuGroup', 'rt-ContextMenuGroup', className)}\n    />\n  )\n);\nContextMenuGroup.displayName = 'ContextMenu.Group';\n\ntype ContextMenuRadioGroupElement = React.ElementRef<typeof ContextMenuPrimitive.RadioGroup>;\ninterface ContextMenuRadioGroupProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.RadioGroup, RemovedProps> {}\nconst ContextMenuRadioGroup = React.forwardRef<\n  ContextMenuRadioGroupElement,\n  ContextMenuRadioGroupProps\n>(({ className, ...props }, forwardedRef) => (\n  <ContextMenuPrimitive.RadioGroup\n    {...props}\n    asChild={false}\n    ref={forwardedRef}\n    className={classNames('rt-BaseMenuRadioGroup', 'rt-ContextMenuRadioGroup', className)}\n  />\n));\nContextMenuRadioGroup.displayName = 'ContextMenu.RadioGroup';\n\ntype ContextMenuRadioItemElement = React.ElementRef<typeof ContextMenuPrimitive.RadioItem>;\ntype ContextMenuRadioItemOwnProps = GetPropDefTypes<typeof contextMenuRadioItemPropDefs>;\ninterface ContextMenuRadioItemProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.RadioItem, RemovedProps>,\n    ContextMenuRadioItemOwnProps {}\nconst ContextMenuRadioItem = React.forwardRef<\n  ContextMenuRadioItemElement,\n  ContextMenuRadioItemProps\n>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    color = contextMenuRadioItemPropDefs.color.default,\n    ...itemProps\n  } = props;\n  return (\n    <ContextMenuPrimitive.RadioItem\n      {...itemProps}\n      asChild={false}\n      ref={forwardedRef}\n      data-accent-color={color}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuRadioItem',\n        'rt-ContextMenuItem',\n        'rt-ContextMenuRadioItem',\n        className\n      )}\n    >\n      <Slot.Slottable>{children}</Slot.Slottable>\n      <ContextMenuPrimitive.ItemIndicator className=\"rt-BaseMenuItemIndicator rt-ContextMenuItemIndicator\">\n        <ThickCheckIcon className=\"rt-BaseMenuItemIndicatorIcon rt-ContextMenuItemIndicatorIcon\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </ContextMenuPrimitive.RadioItem>\n  );\n});\nContextMenuRadioItem.displayName = 'ContextMenu.RadioItem';\n\ntype ContextMenuCheckboxItemElement = React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>;\ntype ContextMenuCheckboxItemOwnProps = GetPropDefTypes<typeof contextMenuCheckboxItemPropDefs>;\ninterface ContextMenuCheckboxItemProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.CheckboxItem, RemovedProps>,\n    ContextMenuCheckboxItemOwnProps {}\nconst ContextMenuCheckboxItem = React.forwardRef<\n  ContextMenuCheckboxItemElement,\n  ContextMenuCheckboxItemProps\n>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    shortcut,\n    color = contextMenuCheckboxItemPropDefs.color.default,\n    ...itemProps\n  } = props;\n  return (\n    <ContextMenuPrimitive.CheckboxItem\n      {...itemProps}\n      asChild={false}\n      ref={forwardedRef}\n      data-accent-color={color}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuCheckboxItem',\n        'rt-ContextMenuItem',\n        'rt-ContextMenuCheckboxItem',\n        className\n      )}\n    >\n      <Slot.Slottable>{children}</Slot.Slottable>\n      <ContextMenuPrimitive.ItemIndicator className=\"rt-BaseMenuItemIndicator rt-ContextMenuItemIndicator\">\n        <ThickCheckIcon className=\"rt-BaseMenuItemIndicatorIcon rt-ContextMenuItemIndicatorIcon\" />\n      </ContextMenuPrimitive.ItemIndicator>\n      {shortcut && <div className=\"rt-BaseMenuShortcut rt-ContextMenuShortcut\">{shortcut}</div>}\n    </ContextMenuPrimitive.CheckboxItem>\n  );\n});\nContextMenuCheckboxItem.displayName = 'ContextMenu.CheckboxItem';\n\ninterface ContextMenuSubProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Sub, RemovedProps> {}\nconst ContextMenuSub: React.FC<ContextMenuSubProps> = (props) => (\n  <ContextMenuPrimitive.Sub {...props} />\n);\nContextMenuSub.displayName = 'ContextMenu.Sub';\n\ntype ContextMenuSubTriggerElement = React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>;\ninterface ContextMenuSubTriggerProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.SubTrigger, RemovedProps> {}\nconst ContextMenuSubTrigger = React.forwardRef<\n  ContextMenuSubTriggerElement,\n  ContextMenuSubTriggerProps\n>((props, forwardedRef) => {\n  const { className, children, ...subTriggerProps } = props;\n  return (\n    <ContextMenuPrimitive.SubTrigger\n      {...subTriggerProps}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuSubTrigger',\n        'rt-ContextMenuItem',\n        'rt-ContextMenuSubTrigger',\n        className\n      )}\n    >\n      {children}\n      <div className=\"rt-BaseMenuShortcut rt-ContextMenuShortcut\">\n        <ThickChevronRightIcon className=\"rt-BaseMenuSubTriggerIcon rt-ContextMenuSubTriggerIcon\" />\n      </div>\n    </ContextMenuPrimitive.SubTrigger>\n  );\n});\nContextMenuSubTrigger.displayName = 'ContextMenu.SubTrigger';\n\ntype ContextMenuSubContentElement = React.ElementRef<typeof ContextMenuPrimitive.SubContent>;\ninterface ContextMenuSubContentProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.SubContent, RemovedProps> {\n  container?: React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Portal>['container'];\n}\nconst ContextMenuSubContent = React.forwardRef<\n  ContextMenuSubContentElement,\n  ContextMenuSubContentProps\n>((props, forwardedRef) => {\n  const { size, variant, color, highContrast } = React.useContext(ContextMenuContentContext);\n  const { className, children, container, forceMount, ...subContentProps } = extractProps(\n    { size, variant, color, highContrast, ...props },\n    contextMenuContentPropDefs\n  );\n  return (\n    <ContextMenuPrimitive.Portal container={container} forceMount={forceMount}>\n      <Theme asChild>\n        <ContextMenuPrimitive.SubContent\n          data-accent-color={color}\n          alignOffset={-Number(size) * 4}\n          // Side offset accounts for the outer solid box-shadow\n          sideOffset={1}\n          collisionPadding={10}\n          {...subContentProps}\n          asChild={false}\n          ref={forwardedRef}\n          className={classNames(\n            'rt-PopperContent',\n            'rt-BaseMenuContent',\n            'rt-BaseMenuSubContent',\n            'rt-ContextMenuContent',\n            'rt-ContextMenuSubContent',\n            className\n          )}\n        >\n          <ScrollArea type=\"auto\">\n            <div className={classNames('rt-BaseMenuViewport', 'rt-ContextMenuViewport')}>\n              {children}\n            </div>\n          </ScrollArea>\n        </ContextMenuPrimitive.SubContent>\n      </Theme>\n    </ContextMenuPrimitive.Portal>\n  );\n});\nContextMenuSubContent.displayName = 'ContextMenu.SubContent';\n\ntype ContextMenuSeparatorElement = React.ElementRef<typeof ContextMenuPrimitive.Separator>;\ninterface ContextMenuSeparatorProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Separator, RemovedProps> {}\nconst ContextMenuSeparator = React.forwardRef<\n  ContextMenuSeparatorElement,\n  ContextMenuSeparatorProps\n>(({ className, ...props }, forwardedRef) => (\n  <ContextMenuPrimitive.Separator\n    {...props}\n    asChild={false}\n    ref={forwardedRef}\n    className={classNames('rt-BaseMenuSeparator', 'rt-ContextMenuSeparator', className)}\n  />\n));\nContextMenuSeparator.displayName = 'ContextMenu.Separator';\n\nexport {\n  ContextMenuRoot as Root,\n  ContextMenuTrigger as Trigger,\n  ContextMenuContent as Content,\n  ContextMenuLabel as Label,\n  ContextMenuItem as Item,\n  ContextMenuGroup as Group,\n  ContextMenuRadioGroup as RadioGroup,\n  ContextMenuRadioItem as RadioItem,\n  ContextMenuCheckboxItem as CheckboxItem,\n  ContextMenuSub as Sub,\n  ContextMenuSubTrigger as SubTrigger,\n  ContextMenuSubContent as SubContent,\n  ContextMenuSeparator as Separator,\n};\n\nexport type {\n  ContextMenuRootProps as RootProps,\n  ContextMenuTriggerProps as TriggerProps,\n  ContextMenuContentProps as ContentProps,\n  ContextMenuLabelProps as LabelProps,\n  ContextMenuItemProps as ItemProps,\n  ContextMenuGroupProps as GroupProps,\n  ContextMenuRadioGroupProps as RadioGroupProps,\n  ContextMenuRadioItemProps as RadioItemProps,\n  ContextMenuCheckboxItemProps as CheckboxItemProps,\n  ContextMenuSubProps as SubProps,\n  ContextMenuSubTriggerProps as SubTriggerProps,\n  ContextMenuSubContentProps as SubContentProps,\n  ContextMenuSeparatorProps as SeparatorProps,\n};\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { ScrollArea as ScrollAreaPrimitive } from 'radix-ui';\n\nimport { scrollAreaPropDefs } from './scroll-area.props.js';\nimport { extractMarginProps } from '../helpers/extract-margin-props.js';\nimport { getMarginStyles } from '../helpers/get-margin-styles.js';\nimport { getResponsiveClassNames } from '../helpers/get-responsive-styles.js';\nimport { getSubtree } from '../helpers/get-subtree.js';\nimport { mergeStyles } from '../helpers/merge-styles.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype ScrollAreaElement = React.ElementRef<typeof ScrollAreaPrimitive.Viewport>;\ntype ScrollAreaOwnProps = GetPropDefTypes<typeof scrollAreaPropDefs>;\ninterface ScrollAreaProps\n  extends ComponentPropsWithout<typeof ScrollAreaPrimitive.Root, RemovedProps>,\n    ComponentPropsWithout<typeof ScrollAreaPrimitive.Viewport, RemovedProps | 'dir'>,\n    MarginProps,\n    ScrollAreaOwnProps {}\nconst ScrollArea = React.forwardRef<ScrollAreaElement, ScrollAreaProps>((props, forwardedRef) => {\n  const { rest: marginRest, ...marginProps } = extractMarginProps(props);\n  const [marginClassNames, marginCustomProperties] = getMarginStyles(marginProps);\n\n  const {\n    asChild,\n    children,\n    className,\n    style,\n    type,\n    scrollHideDelay = type !== 'scroll' ? 0 : undefined,\n    dir,\n    size = scrollAreaPropDefs.size.default,\n    radius = scrollAreaPropDefs.radius.default,\n    scrollbars = scrollAreaPropDefs.scrollbars.default,\n    ...viewportProps\n  } = marginRest;\n\n  return (\n    <ScrollAreaPrimitive.Root\n      type={type}\n      scrollHideDelay={scrollHideDelay}\n      className={classNames('rt-ScrollAreaRoot', marginClassNames, className)}\n      style={mergeStyles(marginCustomProperties, style)}\n      asChild={asChild}\n    >\n      {getSubtree({ asChild, children }, (children) => (\n        <>\n          <ScrollAreaPrimitive.Viewport\n            {...viewportProps}\n            ref={forwardedRef}\n            className=\"rt-ScrollAreaViewport\"\n          >\n            {children}\n          </ScrollAreaPrimitive.Viewport>\n\n          <div className=\"rt-ScrollAreaViewportFocusRing\" />\n\n          {scrollbars !== 'vertical' ? (\n            <ScrollAreaPrimitive.Scrollbar\n              data-radius={radius}\n              orientation=\"horizontal\"\n              className={classNames(\n                'rt-ScrollAreaScrollbar',\n                getResponsiveClassNames({\n                  className: 'rt-r-size',\n                  value: size,\n                  propValues: scrollAreaPropDefs.size.values,\n                })\n              )}\n            >\n              <ScrollAreaPrimitive.Thumb className=\"rt-ScrollAreaThumb\" />\n            </ScrollAreaPrimitive.Scrollbar>\n          ) : null}\n\n          {scrollbars !== 'horizontal' ? (\n            <ScrollAreaPrimitive.Scrollbar\n              data-radius={radius}\n              orientation=\"vertical\"\n              className={classNames(\n                'rt-ScrollAreaScrollbar',\n                getResponsiveClassNames({\n                  className: 'rt-r-size',\n                  value: size,\n                  propValues: scrollAreaPropDefs.size.values,\n                })\n              )}\n            >\n              <ScrollAreaPrimitive.Thumb className=\"rt-ScrollAreaThumb\" />\n            </ScrollAreaPrimitive.Scrollbar>\n          ) : null}\n\n          {scrollbars === 'both' ? (\n            <ScrollAreaPrimitive.Corner className=\"rt-ScrollAreaCorner\" />\n          ) : null}\n        </>\n      ))}\n    </ScrollAreaPrimitive.Root>\n  );\n});\nScrollArea.displayName = 'ScrollArea';\n\nexport { ScrollArea };\nexport type { ScrollAreaProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst scrollbarsValues = ['vertical', 'horizontal', 'both'] as const;\n\nconst scrollAreaPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '1', responsive: true },\n  ...radiusPropDef,\n  scrollbars: { type: 'enum', values: scrollbarsValues, default: 'both' },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  scrollbars: PropDef<(typeof scrollbarsValues)[number]>;\n};\n\nexport { scrollAreaPropDefs };\n", "import type { MarginProps } from '../props/margin.props.js';\n\nexport function extractMarginProps<T extends MarginProps>(props: T) {\n  const { m, mx, my, mt, mr, mb, ml, ...rest } = props;\n  return { m, mx, my, mt, mr, mb, ml, rest };\n}\n", "import classNames from 'classnames';\n\nimport { getResponsiveStyles } from './get-responsive-styles.js';\nimport { mergeStyles } from './merge-styles.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\n\nconst marginValues = marginPropDefs.m.values;\n\nexport function getMarginStyles(props: MarginProps) {\n  const [mClassNames, mCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-m',\n    customProperties: ['--margin'],\n    propValues: marginValues,\n    value: props.m,\n  });\n\n  const [mxClassNames, mxCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-mx',\n    customProperties: ['--margin-left', '--margin-right'],\n    propValues: marginValues,\n    value: props.mx,\n  });\n\n  const [myClassNames, myCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-my',\n    customProperties: ['--margin-top', '--margin-bottom'],\n    propValues: marginValues,\n    value: props.my,\n  });\n\n  const [mtClassNames, mtCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-mt',\n    customProperties: ['--margin-top'],\n    propValues: marginValues,\n    value: props.mt,\n  });\n\n  const [mrClassNames, mrCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-mr',\n    customProperties: ['--margin-right'],\n    propValues: marginValues,\n    value: props.mr,\n  });\n\n  const [mbClassNames, mbCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-mb',\n    customProperties: ['--margin-bottom'],\n    propValues: marginValues,\n    value: props.mb,\n  });\n\n  const [mlClassNames, mlCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-ml',\n    customProperties: ['--margin-left'],\n    propValues: marginValues,\n    value: props.ml,\n  });\n\n  return [\n    classNames(\n      mClassNames,\n      mxClassNames,\n      myClassNames,\n      mtClassNames,\n      mrClassNames,\n      mbClassNames,\n      mlClassNames\n    ),\n    mergeStyles(\n      mCustomProperties,\n      mxCustomProperties,\n      myCustomProperties,\n      mtCustomProperties,\n      mrCustomProperties,\n      mbCustomProperties,\n      mlCustomProperties\n    ),\n  ] as const;\n}\n", "import { asChildPropDef } from '../../props/as-child.prop.js';\nimport { colorPropDef } from '../../props/color.prop.js';\nimport { highContrastPropDef } from '../../props/high-contrast.prop.js';\n\nimport type { PropDef } from '../../props/prop-def.js';\n\nconst contentSizes = ['1', '2'] as const;\nconst contentVariants = ['solid', 'soft'] as const;\n\nconst baseMenuContentPropDefs = {\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: contentSizes,\n    default: '2',\n    responsive: true,\n  },\n  variant: {\n    type: 'enum',\n    className: 'rt-variant',\n    values: contentVariants,\n    default: 'solid',\n  },\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof contentSizes)[number]>;\n  variant: PropDef<(typeof contentVariants)[number]>;\n};\n\nconst baseMenuItemPropDefs = {\n  ...asChildPropDef,\n  ...colorPropDef,\n  shortcut: { type: 'string' },\n} satisfies {\n  shortcut: PropDef<string>;\n};\n\nconst baseMenuCheckboxItemPropDefs = {\n  ...colorPropDef,\n  shortcut: { type: 'string' },\n} satisfies {\n  shortcut: PropDef<string>;\n};\n\nconst baseMenuRadioItemPropDefs = {\n  ...colorPropDef,\n};\n\nexport {\n  baseMenuContentPropDefs,\n  baseMenuItemPropDefs,\n  baseMenuCheckboxItemPropDefs,\n  baseMenuRadioItemPropDefs,\n};\n", "import classNames from 'classnames';\nimport * as React from 'react';\n\nimport { Text } from './text.js';\nimport {\n  dataListRootPropDefs,\n  dataListItemPropDefs,\n  dataListLabelPropDefs,\n} from './data-list.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype DataListRootElement = HTMLDListElement;\ntype DataListRootOwnProps = GetPropDefTypes<typeof dataListRootPropDefs>;\ninterface DataListRootProps\n  extends ComponentPropsWithout<'dl', RemovedProps>,\n    MarginProps,\n    DataListRootOwnProps {}\nconst DataListRoot = React.forwardRef<DataListRootElement, DataListRootProps>(\n  (props, forwardedRef) => {\n    const { className, ...dataListProps } = extractProps(\n      props,\n      dataListRootPropDefs,\n      marginPropDefs\n    );\n    return (\n      <Text asChild>\n        <dl\n          {...dataListProps}\n          ref={forwardedRef}\n          className={classNames('rt-DataListRoot', className)}\n        />\n      </Text>\n    );\n  }\n);\nDataListRoot.displayName = 'DataList.Root';\n\ntype DataListItemElement = HTMLDivElement;\ntype DataListItemOwnProps = GetPropDefTypes<typeof dataListItemPropDefs>;\ninterface DataListItemProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    DataListItemOwnProps {}\nconst DataListItem = React.forwardRef<DataListItemElement, DataListItemProps>(\n  (props, forwardedRef) => {\n    const { className, ...itemProps } = extractProps(props, dataListItemPropDefs);\n    return (\n      <div {...itemProps} ref={forwardedRef} className={classNames('rt-DataListItem', className)} />\n    );\n  }\n);\nDataListItem.displayName = 'DataList.Item';\n\ntype DataListLabelElement = React.ElementRef<'dt'>;\ntype DataListLabelOwnProps = GetPropDefTypes<typeof dataListLabelPropDefs>;\ninterface DataListLabelProps\n  extends ComponentPropsWithout<'dt', RemovedProps>,\n    DataListLabelOwnProps {}\nconst DataListLabel = React.forwardRef<DataListLabelElement, DataListLabelProps>(\n  (props, forwardedRef) => {\n    const { className, color, ...labelProps } = extractProps(props, dataListLabelPropDefs);\n    return (\n      <dt\n        {...labelProps}\n        data-accent-color={color}\n        ref={forwardedRef}\n        className={classNames('rt-DataListLabel', className)}\n      />\n    );\n  }\n);\nDataListLabel.displayName = 'DataList.Label';\n\ntype DataListValueElement = React.ElementRef<'dd'>;\ninterface DataListValueProps extends ComponentPropsWithout<'dd', RemovedProps> {}\nconst DataListValue = React.forwardRef<DataListValueElement, DataListValueProps>(\n  ({ children, className, ...props }, forwardedRef) => (\n    <dd {...props} ref={forwardedRef} className={classNames(className, 'rt-DataListValue')}>\n      {children}\n    </dd>\n  )\n);\nDataListValue.displayName = 'DataList.Value';\n\nexport {\n  DataListRoot as Root,\n  DataListItem as Item,\n  DataListLabel as Label,\n  DataListValue as Value,\n};\nexport type {\n  DataListRootProps as RootProps,\n  DataListItemProps as ItemProps,\n  DataListLabelProps as LabelProps,\n  DataListValueProps as ValueProps,\n};\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { leadingTrimPropDef } from '../props/leading-trim.prop.js';\nimport { widthPropDefs } from '../props/width.props.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst alignValues = ['start', 'center', 'end', 'baseline', 'stretch'] as const;\nconst orientationValues = ['horizontal', 'vertical'] as const;\nconst sizes = ['1', '2', '3'] as const;\n\nconst dataListRootPropDefs = {\n  orientation: {\n    type: 'enum',\n    className: 'rt-r-orientation',\n    values: orientationValues,\n    default: 'horizontal',\n    responsive: true,\n  },\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    default: '2',\n    responsive: true,\n  },\n  trim: {\n    ...leadingTrimPropDef.trim,\n    className: 'rt-r-trim', // Custom trim styles due to grid layout\n  },\n} satisfies {\n  orientation: PropDef<(typeof orientationValues)[number]>;\n  size: PropDef<(typeof sizes)[number]>;\n  trim: typeof leadingTrimPropDef.trim;\n};\n\nconst dataListItemPropDefs = {\n  align: {\n    type: 'enum',\n    className: 'rt-r-ai',\n    values: alignValues,\n    responsive: true,\n  },\n} satisfies {\n  align: PropDef<(typeof alignValues)[number]>;\n};\n\nconst dataListLabelPropDefs = {\n  ...widthPropDefs,\n  ...colorPropDef,\n  ...highContrastPropDef,\n};\n\nexport { dataListRootPropDefs, dataListItemPropDefs, dataListLabelPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Dialog as DialogPrimitive } from 'radix-ui';\n\nimport { dialogContentPropDefs } from './dialog.props.js';\nimport { Heading } from './heading.js';\nimport { Text } from './text.js';\nimport { Theme } from './theme.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { DialogContentOwnProps } from './dialog.props.js';\nimport type {\n  ComponentPropsWithout,\n  RemovedProps,\n  ComponentPropsAs,\n} from '../helpers/component-props.js';\n\ninterface DialogRootProps extends ComponentPropsWithout<typeof DialogPrimitive.Root, 'modal'> {}\nconst DialogRoot: React.FC<DialogRootProps> = (props) => <DialogPrimitive.Root {...props} modal />;\nDialogRoot.displayName = 'Dialog.Root';\n\ntype DialogTriggerElement = React.ElementRef<typeof DialogPrimitive.Trigger>;\ninterface DialogTriggerProps\n  extends ComponentPropsWithout<typeof DialogPrimitive.Trigger, RemovedProps> {}\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <DialogPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </DialogPrimitive.Trigger>\n  )\n);\nDialogTrigger.displayName = 'Dialog.Trigger';\n\ntype DialogContentElement = React.ElementRef<typeof DialogPrimitive.Content>;\ninterface DialogContentProps\n  extends ComponentPropsWithout<typeof DialogPrimitive.Content, RemovedProps>,\n    DialogContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof DialogPrimitive.Portal>['container'];\n}\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  ({ align, ...props }, forwardedRef) => {\n    const { align: alignPropDef, ...propDefs } = dialogContentPropDefs;\n    const { className: alignClassName } = extractProps({ align }, { align: alignPropDef });\n    const { className, forceMount, container, ...contentProps } = extractProps(props, propDefs);\n    return (\n      <DialogPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <DialogPrimitive.Overlay className=\"rt-BaseDialogOverlay rt-DialogOverlay\">\n            <div className=\"rt-BaseDialogScroll rt-DialogScroll\">\n              <div\n                className={`rt-BaseDialogScrollPadding rt-DialogScrollPadding ${alignClassName}`}\n              >\n                <DialogPrimitive.Content\n                  {...contentProps}\n                  ref={forwardedRef}\n                  className={classNames('rt-BaseDialogContent', 'rt-DialogContent', className)}\n                />\n              </div>\n            </div>\n          </DialogPrimitive.Overlay>\n        </Theme>\n      </DialogPrimitive.Portal>\n    );\n  }\n);\nDialogContent.displayName = 'Dialog.Content';\n\ntype DialogTitleElement = React.ElementRef<typeof Heading>;\ntype DialogTitleProps = ComponentPropsWithout<typeof Heading, 'asChild'>;\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props, forwardedRef) => (\n    <DialogPrimitive.Title asChild>\n      <Heading size=\"5\" mb=\"3\" trim=\"start\" {...props} asChild={false} ref={forwardedRef} />\n    </DialogPrimitive.Title>\n  )\n);\nDialogTitle.displayName = 'Dialog.Title';\n\ntype DialogDescriptionElement = HTMLParagraphElement;\ntype DialogDescriptionProps = ComponentPropsAs<typeof Text, 'p'>;\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props, forwardedRef) => (\n    <DialogPrimitive.Description asChild>\n      <Text as=\"p\" size=\"3\" {...props} asChild={false} ref={forwardedRef} />\n    </DialogPrimitive.Description>\n  )\n);\nDialogDescription.displayName = 'Dialog.Description';\n\ntype DialogCloseElement = React.ElementRef<typeof DialogPrimitive.Close>;\ninterface DialogCloseProps\n  extends ComponentPropsWithout<typeof DialogPrimitive.Close, RemovedProps> {}\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <DialogPrimitive.Close {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </DialogPrimitive.Close>\n  )\n);\nDialogClose.displayName = 'Dialog.Close';\n\nexport {\n  DialogRoot as Root,\n  DialogTrigger as Trigger,\n  DialogContent as Content,\n  DialogTitle as Title,\n  DialogDescription as Description,\n  DialogClose as Close,\n};\n\nexport type {\n  DialogRootProps as RootProps,\n  DialogTriggerProps as TriggerProps,\n  DialogContentProps as ContentProps,\n  DialogTitleProps as TitleProps,\n  DialogDescriptionProps as DescriptionProps,\n  DialogCloseProps as CloseProps,\n};\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { DropdownMenu as DropdownMenuPrimitive, Slot } from 'radix-ui';\n\nimport { ScrollArea } from './scroll-area.js';\nimport {\n  dropdownMenuContentPropDefs,\n  dropdownMenuItemPropDefs,\n  dropdownMenuCheckboxItemPropDefs,\n  dropdownMenuRadioItemPropDefs,\n} from './dropdown-menu.props.js';\nimport { Theme, useThemeContext } from './theme.js';\nimport { ChevronDownIcon, ThickCheckIcon, ThickChevronRightIcon } from './icons.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { IconProps } from './icons.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ninterface DropdownMenuRootProps\n  extends React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Root> {}\nconst DropdownMenuRoot: React.FC<DropdownMenuRootProps> = (props) => (\n  <DropdownMenuPrimitive.Root {...props} />\n);\nDropdownMenuRoot.displayName = 'DropdownMenu.Root';\n\ntype DropdownMenuTriggerElement = React.ElementRef<typeof DropdownMenuPrimitive.Trigger>;\ninterface DropdownMenuTriggerProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Trigger, RemovedProps> {}\nconst DropdownMenuTrigger = React.forwardRef<DropdownMenuTriggerElement, DropdownMenuTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <DropdownMenuPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </DropdownMenuPrimitive.Trigger>\n  )\n);\nDropdownMenuTrigger.displayName = 'DropdownMenu.Trigger';\n\ntype DropdownMenuContentOwnProps = GetPropDefTypes<typeof dropdownMenuContentPropDefs>;\ntype DropdownMenuContentContextValue = DropdownMenuContentOwnProps;\nconst DropdownMenuContentContext = React.createContext<DropdownMenuContentContextValue>({});\ntype DropdownMenuContentElement = React.ElementRef<typeof DropdownMenuPrimitive.Content>;\ninterface DropdownMenuContentProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Content, RemovedProps>,\n    DropdownMenuContentContextValue {\n  container?: React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Portal>['container'];\n}\nconst DropdownMenuContent = React.forwardRef<DropdownMenuContentElement, DropdownMenuContentProps>(\n  (props, forwardedRef) => {\n    const themeContext = useThemeContext();\n    const {\n      size = dropdownMenuContentPropDefs.size.default,\n      variant = dropdownMenuContentPropDefs.variant.default,\n      highContrast = dropdownMenuContentPropDefs.highContrast.default,\n    } = props;\n    const { className, children, color, container, forceMount, ...contentProps } = extractProps(\n      props,\n      dropdownMenuContentPropDefs\n    );\n    const resolvedColor = color || themeContext.accentColor;\n    return (\n      <DropdownMenuPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <DropdownMenuPrimitive.Content\n            data-accent-color={resolvedColor}\n            align=\"start\"\n            sideOffset={4}\n            collisionPadding={10}\n            {...contentProps}\n            asChild={false}\n            ref={forwardedRef}\n            className={classNames(\n              'rt-PopperContent',\n              'rt-BaseMenuContent',\n              'rt-DropdownMenuContent',\n              className\n            )}\n          >\n            <ScrollArea type=\"auto\">\n              <div className={classNames('rt-BaseMenuViewport', 'rt-DropdownMenuViewport')}>\n                <DropdownMenuContentContext.Provider\n                  value={React.useMemo(\n                    () => ({ size, variant, color: resolvedColor, highContrast }),\n                    [size, variant, resolvedColor, highContrast]\n                  )}\n                >\n                  {children}\n                </DropdownMenuContentContext.Provider>\n              </div>\n            </ScrollArea>\n          </DropdownMenuPrimitive.Content>\n        </Theme>\n      </DropdownMenuPrimitive.Portal>\n    );\n  }\n);\nDropdownMenuContent.displayName = 'DropdownMenu.Content';\n\ntype DropdownMenuLabelElement = React.ElementRef<typeof DropdownMenuPrimitive.Label>;\ninterface DropdownMenuLabelProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Label, RemovedProps> {}\nconst DropdownMenuLabel = React.forwardRef<DropdownMenuLabelElement, DropdownMenuLabelProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <DropdownMenuPrimitive.Label\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseMenuLabel', 'rt-DropdownMenuLabel', className)}\n    />\n  )\n);\nDropdownMenuLabel.displayName = 'DropdownMenu.Label';\n\ntype DropdownMenuItemElement = React.ElementRef<typeof DropdownMenuPrimitive.Item>;\ntype DropdownMenuItemOwnProps = GetPropDefTypes<typeof dropdownMenuItemPropDefs>;\ninterface DropdownMenuItemProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Item, RemovedProps>,\n    DropdownMenuItemOwnProps {}\nconst DropdownMenuItem = React.forwardRef<DropdownMenuItemElement, DropdownMenuItemProps>(\n  (props, forwardedRef) => {\n    const {\n      className,\n      children,\n      color = dropdownMenuItemPropDefs.color.default,\n      shortcut,\n      ...itemProps\n    } = props;\n    return (\n      <DropdownMenuPrimitive.Item\n        data-accent-color={color}\n        {...itemProps}\n        ref={forwardedRef}\n        className={classNames('rt-reset', 'rt-BaseMenuItem', 'rt-DropdownMenuItem', className)}\n      >\n        <Slot.Slottable>{children}</Slot.Slottable>\n        {shortcut && <div className=\"rt-BaseMenuShortcut rt-DropdownMenuShortcut\">{shortcut}</div>}\n      </DropdownMenuPrimitive.Item>\n    );\n  }\n);\nDropdownMenuItem.displayName = 'DropdownMenu.Item';\n\ntype DropdownMenuGroupElement = React.ElementRef<typeof DropdownMenuPrimitive.Group>;\ninterface DropdownMenuGroupProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Group, RemovedProps> {}\nconst DropdownMenuGroup = React.forwardRef<DropdownMenuGroupElement, DropdownMenuGroupProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <DropdownMenuPrimitive.Group\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseMenuGroup', 'rt-DropdownMenuGroup', className)}\n    />\n  )\n);\nDropdownMenuGroup.displayName = 'DropdownMenu.Group';\n\ntype DropdownMenuRadioGroupElement = React.ElementRef<typeof DropdownMenuPrimitive.RadioGroup>;\ninterface DropdownMenuRadioGroupProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.RadioGroup, RemovedProps> {}\nconst DropdownMenuRadioGroup = React.forwardRef<\n  DropdownMenuRadioGroupElement,\n  DropdownMenuRadioGroupProps\n>(({ className, ...props }, forwardedRef) => (\n  <DropdownMenuPrimitive.RadioGroup\n    {...props}\n    asChild={false}\n    ref={forwardedRef}\n    className={classNames('rt-BaseMenuRadioGroup', 'rt-DropdownMenuRadioGroup', className)}\n  />\n));\nDropdownMenuRadioGroup.displayName = 'DropdownMenu.RadioGroup';\n\ntype DropdownMenuRadioItemElement = React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>;\ntype DropdownMenuRadioItemOwnProps = GetPropDefTypes<typeof dropdownMenuRadioItemPropDefs>;\ninterface DropdownMenuRadioItemProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.RadioItem, RemovedProps>,\n    DropdownMenuRadioItemOwnProps {}\nconst DropdownMenuRadioItem = React.forwardRef<\n  DropdownMenuRadioItemElement,\n  DropdownMenuRadioItemProps\n>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    color = dropdownMenuRadioItemPropDefs.color.default,\n    ...itemProps\n  } = props;\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      {...itemProps}\n      asChild={false}\n      ref={forwardedRef}\n      data-accent-color={color}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuRadioItem',\n        'rt-DropdownMenuItem',\n        'rt-DropdownMenuRadioItem',\n        className\n      )}\n    >\n      {children}\n      <DropdownMenuPrimitive.ItemIndicator className=\"rt-BaseMenuItemIndicator rt-DropdownMenuItemIndicator\">\n        <ThickCheckIcon className=\"rt-BaseMenuItemIndicatorIcon rt-DropdownMenuItemIndicatorIcon\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </DropdownMenuPrimitive.RadioItem>\n  );\n});\nDropdownMenuRadioItem.displayName = 'DropdownMenu.RadioItem';\n\ntype DropdownMenuCheckboxItemElement = React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>;\ntype DropdownMenuCheckboxItemOwnProps = GetPropDefTypes<typeof dropdownMenuCheckboxItemPropDefs>;\ninterface DropdownMenuCheckboxItemProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.CheckboxItem, RemovedProps>,\n    DropdownMenuCheckboxItemOwnProps {}\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  DropdownMenuCheckboxItemElement,\n  DropdownMenuCheckboxItemProps\n>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    shortcut,\n    color = dropdownMenuCheckboxItemPropDefs.color.default,\n    ...itemProps\n  } = props;\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      {...itemProps}\n      asChild={false}\n      ref={forwardedRef}\n      data-accent-color={color}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuCheckboxItem',\n        'rt-DropdownMenuItem',\n        'rt-DropdownMenuCheckboxItem',\n        className\n      )}\n    >\n      {children}\n      <DropdownMenuPrimitive.ItemIndicator className=\"rt-BaseMenuItemIndicator rt-DropdownMenuItemIndicator\">\n        <ThickCheckIcon className=\"rt-BaseMenuItemIndicatorIcon rt-ContextMenuItemIndicatorIcon\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n      {shortcut && <div className=\"rt-BaseMenuShortcut rt-DropdownMenuShortcut\">{shortcut}</div>}\n    </DropdownMenuPrimitive.CheckboxItem>\n  );\n});\nDropdownMenuCheckboxItem.displayName = 'DropdownMenu.CheckboxItem';\n\ninterface DropdownMenuSubProps\n  extends React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Sub> {}\nconst DropdownMenuSub: React.FC<DropdownMenuSubProps> = (props) => (\n  <DropdownMenuPrimitive.Sub {...props} />\n);\nDropdownMenuSub.displayName = 'DropdownMenu.Sub';\n\ntype DropdownMenuSubTriggerElement = React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>;\ninterface DropdownMenuSubTriggerProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.SubTrigger, RemovedProps> {}\nconst DropdownMenuSubTrigger = React.forwardRef<\n  DropdownMenuSubTriggerElement,\n  DropdownMenuSubTriggerProps\n>((props, forwardedRef) => {\n  const { className, children, ...subTriggerProps } = props;\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      {...subTriggerProps}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuSubTrigger',\n        'rt-DropdownMenuItem',\n        'rt-DropdownMenuSubTrigger',\n        className\n      )}\n    >\n      {children}\n      <div className=\"rt-BaseMenuShortcut rt-DropdownMenuShortcut\">\n        <ThickChevronRightIcon className=\"rt-BaseMenuSubTriggerIcon rt-DropdownMenuSubtriggerIcon\" />\n      </div>\n    </DropdownMenuPrimitive.SubTrigger>\n  );\n});\nDropdownMenuSubTrigger.displayName = 'DropdownMenu.SubTrigger';\n\ntype DropdownMenuSubContentElement = React.ElementRef<typeof DropdownMenuPrimitive.SubContent>;\ninterface DropdownMenuSubContentProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.SubContent, RemovedProps> {\n  container?: React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Portal>['container'];\n}\nconst DropdownMenuSubContent = React.forwardRef<\n  DropdownMenuSubContentElement,\n  DropdownMenuSubContentProps\n>((props, forwardedRef) => {\n  const { size, variant, color, highContrast } = React.useContext(DropdownMenuContentContext);\n  const { className, children, container, forceMount, ...subContentProps } = extractProps(\n    { size, variant, color, highContrast, ...props },\n    dropdownMenuContentPropDefs\n  );\n  return (\n    <DropdownMenuPrimitive.Portal container={container} forceMount={forceMount}>\n      <Theme asChild>\n        <DropdownMenuPrimitive.SubContent\n          data-accent-color={color}\n          alignOffset={-Number(size) * 4}\n          // Side offset accounts for the outer solid box-shadow\n          sideOffset={1}\n          collisionPadding={10}\n          {...subContentProps}\n          asChild={false}\n          ref={forwardedRef}\n          className={classNames(\n            'rt-PopperContent',\n            'rt-BaseMenuContent',\n            'rt-BaseMenuSubContent',\n            'rt-DropdownMenuContent',\n            'rt-DropdownMenuSubContent',\n            className\n          )}\n        >\n          <ScrollArea type=\"auto\">\n            <div className={classNames('rt-BaseMenuViewport', 'rt-DropdownMenuViewport')}>\n              {children}\n            </div>\n          </ScrollArea>\n        </DropdownMenuPrimitive.SubContent>\n      </Theme>\n    </DropdownMenuPrimitive.Portal>\n  );\n});\nDropdownMenuSubContent.displayName = 'DropdownMenu.SubContent';\n\ntype DropdownMenuSeparatorElement = React.ElementRef<typeof DropdownMenuPrimitive.Separator>;\ninterface DropdownMenuSeparatorProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Separator, RemovedProps> {}\nconst DropdownMenuSeparator = React.forwardRef<\n  DropdownMenuSeparatorElement,\n  DropdownMenuSeparatorProps\n>(({ className, ...props }, forwardedRef) => (\n  <DropdownMenuPrimitive.Separator\n    {...props}\n    asChild={false}\n    ref={forwardedRef}\n    className={classNames('rt-BaseMenuSeparator', 'rt-DropdownMenuSeparator', className)}\n  />\n));\nDropdownMenuSeparator.displayName = 'DropdownMenu.Separator';\n\nexport {\n  DropdownMenuRoot as Root,\n  DropdownMenuTrigger as Trigger,\n  ChevronDownIcon as TriggerIcon,\n  DropdownMenuContent as Content,\n  DropdownMenuLabel as Label,\n  DropdownMenuItem as Item,\n  DropdownMenuGroup as Group,\n  DropdownMenuRadioGroup as RadioGroup,\n  DropdownMenuRadioItem as RadioItem,\n  DropdownMenuCheckboxItem as CheckboxItem,\n  DropdownMenuSub as Sub,\n  DropdownMenuSubTrigger as SubTrigger,\n  DropdownMenuSubContent as SubContent,\n  DropdownMenuSeparator as Separator,\n};\n\nexport type {\n  DropdownMenuRootProps as RootProps,\n  DropdownMenuTriggerProps as TriggerProps,\n  IconProps as TriggerIconProps,\n  DropdownMenuContentProps as ContentProps,\n  DropdownMenuLabelProps as LabelProps,\n  DropdownMenuItemProps as ItemProps,\n  DropdownMenuGroupProps as GroupProps,\n  DropdownMenuRadioGroupProps as RadioGroupProps,\n  DropdownMenuRadioItemProps as RadioItemProps,\n  DropdownMenuCheckboxItemProps as CheckboxItemProps,\n  DropdownMenuSubProps as SubProps,\n  DropdownMenuSubTriggerProps as SubTriggerProps,\n  DropdownMenuSubContentProps as SubContentProps,\n  DropdownMenuSeparatorProps as SeparatorProps,\n};\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { emPropDefs } from './em.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype EmElement = React.ElementRef<'em'>;\ntype EmOwnProps = GetPropDefTypes<typeof emPropDefs>;\ninterface EmProps extends ComponentPropsWithout<'em', RemovedProps>, EmOwnProps {}\nconst Em = React.forwardRef<EmElement, EmProps>((props, forwardedRef) => {\n  const { asChild, className, ...emProps } = extractProps(props, emPropDefs);\n  const Comp = asChild ? Slot.Root : 'em';\n  return <Comp {...emProps} ref={forwardedRef} className={classNames('rt-Em', className)} />;\n});\nEm.displayName = 'Em';\n\nexport { Em };\nexport type { EmProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\n\nconst emPropDefs = {\n  ...asChildPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n};\n\nexport { emPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { HoverCard as HoverCardPrimitive } from 'radix-ui';\n\nimport { hoverCardContentPropDefs } from './hover-card.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\nimport { Theme } from './theme.js';\n\nimport type { HoverCardContentOwnProps } from './hover-card.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ninterface HoverCardRootProps\n  extends React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Root> {}\nconst HoverCardRoot: React.FC<HoverCardRootProps> = (props) => (\n  <HoverCardPrimitive.Root closeDelay={150} openDelay={200} {...props} />\n);\nHoverCardRoot.displayName = 'HoverCard.Root';\n\ntype HoverCardTriggerElement = React.ElementRef<typeof HoverCardPrimitive.Trigger>;\ninterface HoverCardTriggerProps\n  extends ComponentPropsWithout<typeof HoverCardPrimitive.Trigger, RemovedProps> {}\nconst HoverCardTrigger = React.forwardRef<HoverCardTriggerElement, HoverCardTriggerProps>(\n  ({ children, className, ...props }, forwardedRef) => (\n    <HoverCardPrimitive.Trigger\n      ref={forwardedRef}\n      className={classNames('rt-HoverCardTrigger', className)}\n      {...props}\n      asChild\n    >\n      {requireReactElement(children)}\n    </HoverCardPrimitive.Trigger>\n  )\n);\nHoverCardTrigger.displayName = 'HoverCard.Trigger';\n\ntype HoverCardContentElement = React.ElementRef<typeof HoverCardPrimitive.Content>;\ninterface HoverCardContentProps\n  extends ComponentPropsWithout<typeof HoverCardPrimitive.Content, RemovedProps>,\n    HoverCardContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Portal>['container'];\n}\nconst HoverCardContent = React.forwardRef<HoverCardContentElement, HoverCardContentProps>(\n  (props, forwardedRef) => {\n    const { className, forceMount, container, ...contentProps } = extractProps(\n      props,\n      hoverCardContentPropDefs\n    );\n    return (\n      <HoverCardPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <HoverCardPrimitive.Content\n            align=\"start\"\n            sideOffset={8}\n            collisionPadding={10}\n            {...contentProps}\n            ref={forwardedRef}\n            className={classNames('rt-PopperContent', 'rt-HoverCardContent', className)}\n          />\n        </Theme>\n      </HoverCardPrimitive.Portal>\n    );\n  }\n);\nHoverCardContent.displayName = 'HoverCard.Content';\n\nexport { HoverCardRoot as Root, HoverCardTrigger as Trigger, HoverCardContent as Content };\nexport type {\n  HoverCardRootProps as RootProps,\n  HoverCardTriggerProps as TriggerProps,\n  HoverCardContentProps as ContentProps,\n};\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { heightPropDefs } from '../props/height.props.js';\nimport { widthPropDefs } from '../props/width.props.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst contentSizes = ['1', '2', '3'] as const;\n\nconst hoverCardContentPropDefs = {\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: contentSizes,\n    default: '2',\n    responsive: true,\n  },\n  width: widthPropDefs.width,\n  minWidth: widthPropDefs.minWidth,\n  maxWidth: { ...widthPropDefs.maxWidth, default: '480px' },\n  ...heightPropDefs,\n} satisfies {\n  width: PropDef<string>;\n  minWidth: PropDef<string>;\n  maxWidth: PropDef<string>;\n  size: PropDef<(typeof contentSizes)[number]>;\n};\n\ntype HoverCardContentOwnProps = GetPropDefTypes<\n  typeof hoverCardContentPropDefs &\n    typeof asChildPropDef &\n    typeof widthPropDefs &\n    typeof heightPropDefs\n>;\n\nexport { hoverCardContentPropDefs };\nexport type { HoverCardContentOwnProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { BaseButton } from './_internal/base-button.js';\n\ntype IconButtonElement = React.ElementRef<typeof BaseButton>;\ninterface IconButtonProps extends React.ComponentPropsWithoutRef<typeof BaseButton> {}\nconst IconButton = React.forwardRef<IconButtonElement, IconButtonProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <BaseButton {...props} ref={forwardedRef} className={classNames('rt-IconButton', className)} />\n  )\n);\nIconButton.displayName = 'IconButton';\n\nexport { IconButton };\nexport type { IconButtonProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { insetPropDefs } from './inset.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype InsetElement = React.ElementRef<'div'>;\ntype InsetOwnProps = GetPropDefTypes<typeof insetPropDefs>;\ninterface InsetProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    InsetOwnProps {}\n\nconst Inset = React.forwardRef<InsetElement, InsetProps>((props, forwardedRef) => {\n  const { asChild, className, ...insetProps } = extractProps(props, insetPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot.Root : 'div';\n  return <Comp {...insetProps} ref={forwardedRef} className={classNames('rt-Inset', className)} />;\n});\nInset.displayName = 'Inset';\n\nexport { Inset };\nexport type { InsetProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sides = ['all', 'x', 'y', 'top', 'bottom', 'left', 'right'] as const;\nconst clipValues = ['border-box', 'padding-box'] as const;\nconst paddingValues = ['current', '0'] as const;\n\nconst insetPropDefs = {\n  ...asChildPropDef,\n  side: {\n    type: 'enum',\n    className: 'rt-r-side',\n    values: sides,\n    default: 'all',\n    responsive: true,\n  },\n  clip: {\n    type: 'enum',\n    className: 'rt-r-clip',\n    values: clipValues,\n    default: 'border-box',\n    responsive: true,\n  },\n  p: {\n    type: 'enum',\n    className: 'rt-r-p',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n  px: {\n    type: 'enum',\n    className: 'rt-r-px',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n  py: {\n    type: 'enum',\n    className: 'rt-r-py',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n  pt: {\n    type: 'enum',\n    className: 'rt-r-pt',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n  pr: {\n    type: 'enum',\n    className: 'rt-r-pr',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n  pb: {\n    type: 'enum',\n    className: 'rt-r-pb',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n  pl: {\n    type: 'enum',\n    className: 'rt-r-pl',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n} satisfies {\n  side: PropDef<(typeof sides)[number]>;\n  clip: PropDef<(typeof clipValues)[number]>;\n  p: PropDef<(typeof paddingValues)[number]>;\n  px: PropDef<(typeof paddingValues)[number]>;\n  py: PropDef<(typeof paddingValues)[number]>;\n  pt: PropDef<(typeof paddingValues)[number]>;\n  pr: PropDef<(typeof paddingValues)[number]>;\n  pb: PropDef<(typeof paddingValues)[number]>;\n  pl: PropDef<(typeof paddingValues)[number]>;\n};\n\nfunction parsePaddingValue(value: string) {\n  return value === 'current' ? 'inset' : value;\n}\n\nexport { insetPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { kbdPropDefs } from './kbd.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype KbdElement = React.ElementRef<'kbd'>;\ntype KbdOwnProps = GetPropDefTypes<typeof kbdPropDefs>;\ninterface KbdProps extends ComponentPropsWithout<'kbd', RemovedProps>, MarginProps, KbdOwnProps {}\nconst Kbd = React.forwardRef<KbdElement, KbdProps>((props, forwardedRef) => {\n  const { asChild, className, ...kbdProps } = extractProps(props, kbdPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot.Root : 'kbd';\n  return (\n    <Comp\n      {...kbdProps}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-Kbd', className)}\n    />\n  );\n});\nKbd.displayName = 'Kbd';\n\nexport { Kbd };\nexport type { KbdProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\n\nconst kbdPropDefs = {\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    responsive: true,\n  },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n};\n\nexport { kbdPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Text } from './text.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { linkPropDefs } from './link.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype LinkElement = React.ElementRef<'a'>;\ntype LinkOwnProps = GetPropDefTypes<typeof linkPropDefs>;\ninterface LinkProps extends ComponentPropsWithout<'a', RemovedProps>, MarginProps, LinkOwnProps {}\nconst Link = React.forwardRef<LinkElement, LinkProps>((props, forwardedRef) => {\n  const { children, className, color, asChild, ...linkProps } = extractProps(props, linkPropDefs);\n  return (\n    <Text\n      {...linkProps}\n      data-accent-color={color}\n      ref={forwardedRef}\n      asChild\n      className={classNames('rt-reset', 'rt-Link', className)}\n    >\n      {asChild ? (\n        children\n      ) : (\n        // eslint-disable-next-line jsx-a11y/anchor-is-valid\n        <a>{children}</a>\n      )}\n    </Text>\n  );\n});\nLink.displayName = 'Link';\n\nexport { Link };\nexport type { LinkProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { leadingTrimPropDef } from '../props/leading-trim.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\nimport { weightPropDef } from '../props/weight.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\nconst underline = ['auto', 'always', 'hover', 'none'] as const;\n\nconst linkPropDefs = {\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    responsive: true,\n  },\n  ...weightPropDef,\n  ...leadingTrimPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n  underline: { type: 'enum', className: 'rt-underline', values: underline, default: 'auto' },\n  ...accentColorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  underline: PropDef<(typeof underline)[number]>;\n};\n\nexport { linkPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Popover as PopoverPrimitive } from 'radix-ui';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\nimport { popoverContentPropDefs } from './popover.props.js';\nimport { Theme } from './theme.js';\n\nimport type { PopoverContentOwnProps } from './popover.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ninterface PopoverRootProps extends React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Root> {}\nconst PopoverRoot: React.FC<PopoverRootProps> = (props: PopoverRootProps) => (\n  <PopoverPrimitive.Root {...props} />\n);\nPopoverRoot.displayName = 'Popover.Root';\n\ntype PopoverTriggerElement = React.ElementRef<typeof PopoverPrimitive.Trigger>;\ninterface PopoverTriggerProps\n  extends ComponentPropsWithout<typeof PopoverPrimitive.Trigger, RemovedProps> {}\nconst PopoverTrigger = React.forwardRef<PopoverTriggerElement, PopoverTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <PopoverPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </PopoverPrimitive.Trigger>\n  )\n);\nPopoverTrigger.displayName = 'Popover.Trigger';\n\ntype PopoverContentElement = React.ElementRef<typeof PopoverPrimitive.Content>;\ninterface PopoverContentProps\n  extends ComponentPropsWithout<typeof PopoverPrimitive.Content, RemovedProps>,\n    PopoverContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Portal>['container'];\n}\nconst PopoverContent = React.forwardRef<PopoverContentElement, PopoverContentProps>(\n  (props, forwardedRef) => {\n    const { className, forceMount, container, ...contentProps } = extractProps(\n      props,\n      popoverContentPropDefs\n    );\n    return (\n      <PopoverPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <PopoverPrimitive.Content\n            align=\"start\"\n            sideOffset={8}\n            collisionPadding={10}\n            {...contentProps}\n            ref={forwardedRef}\n            className={classNames('rt-PopperContent', 'rt-PopoverContent', className)}\n          />\n        </Theme>\n      </PopoverPrimitive.Portal>\n    );\n  }\n);\nPopoverContent.displayName = 'Popover.Content';\n\ntype PopoverCloseElement = React.ElementRef<typeof PopoverPrimitive.Close>;\ninterface PopoverCloseProps\n  extends ComponentPropsWithout<typeof PopoverPrimitive.Close, RemovedProps> {}\nconst PopoverClose = React.forwardRef<PopoverCloseElement, PopoverCloseProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <PopoverPrimitive.Close {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </PopoverPrimitive.Close>\n  )\n);\nPopoverClose.displayName = 'Popover.Close';\n\ntype PopoverAnchorElement = React.ElementRef<typeof PopoverPrimitive.Anchor>;\ninterface PopoverAnchorProps\n  extends React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Anchor> {}\nconst PopoverAnchor = React.forwardRef<PopoverAnchorElement, PopoverAnchorProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <PopoverPrimitive.Anchor {...props} ref={forwardedRef} />\n  )\n);\n\nPopoverAnchor.displayName = 'Popover.Anchor';\n\nexport {\n  PopoverRoot as Root,\n  PopoverContent as Content,\n  PopoverTrigger as Trigger,\n  PopoverClose as Close,\n  PopoverAnchor as Anchor,\n};\nexport type {\n  PopoverRootProps as RootProps,\n  PopoverContentProps as ContentProps,\n  PopoverTriggerProps as TriggerProps,\n  PopoverCloseProps as CloseProps,\n  PopoverAnchorProps as AnchorProps,\n};\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { heightPropDefs } from '../props/height.props.js';\nimport { widthPropDefs } from '../props/width.props.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst contentSizes = ['1', '2', '3', '4'] as const;\n\nconst popoverContentPropDefs = {\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: contentSizes,\n    default: '2',\n    responsive: true,\n  },\n  width: widthPropDefs.width,\n  minWidth: widthPropDefs.minWidth,\n  maxWidth: { ...widthPropDefs.maxWidth, default: '480px' },\n  ...heightPropDefs,\n} satisfies {\n  width: PropDef<string>;\n  minWidth: PropDef<string>;\n  maxWidth: PropDef<string>;\n  size: PropDef<(typeof contentSizes)[number]>;\n};\n\ntype PopoverContentOwnProps = GetPropDefTypes<\n  typeof popoverContentPropDefs &\n    typeof asChildPropDef &\n    typeof widthPropDefs &\n    typeof heightPropDefs\n>;\n\nexport { popoverContentPropDefs };\nexport type { PopoverContentOwnProps };\n", "import { Portal as PortalPrimitive } from 'radix-ui';\nexport const Portal = PortalPrimitive.Root;\nexport const Root = PortalPrimitive.Root;\nexport type PortalProps = PortalPrimitive.PortalProps;\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Progress as ProgressPrimitive } from 'radix-ui';\n\nimport { progressPropDefs } from './progress.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { mergeStyles } from '../helpers/merge-styles.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype ProgressElement = React.ElementRef<typeof ProgressPrimitive.Root>;\ntype ProgressOwnProps = GetPropDefTypes<typeof progressPropDefs>;\ninterface ProgressProps\n  extends ComponentPropsWithout<typeof ProgressPrimitive.Root, RemovedProps | 'children'>,\n    MarginProps,\n    ProgressOwnProps {\n  duration?: `${number}s` | `${number}ms`;\n}\nconst Progress = React.forwardRef<ProgressElement, ProgressProps>((props, forwardedRef) => {\n  const { className, style, color, radius, duration, ...progressProps } = extractProps(\n    props,\n    progressPropDefs,\n    marginPropDefs\n  );\n\n  return (\n    <ProgressPrimitive.Root\n      data-accent-color={color}\n      data-radius={radius}\n      ref={forwardedRef}\n      className={classNames('rt-ProgressRoot', className)}\n      style={mergeStyles(\n        {\n          '--progress-duration': 'value' in progressProps ? undefined : duration,\n          '--progress-value': 'value' in progressProps ? progressProps.value : undefined,\n          '--progress-max': 'max' in progressProps ? progressProps.max : undefined,\n        },\n        style\n      )}\n      {...progressProps}\n      asChild={false}\n    >\n      <ProgressPrimitive.Indicator className=\"rt-ProgressIndicator\" />\n    </ProgressPrimitive.Root>\n  );\n});\nProgress.displayName = 'Progress';\n\nexport { Progress };\nexport type { ProgressProps };\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst progressPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n  ...radiusPropDef,\n  duration: { type: 'string' },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  duration: PropDef<string>;\n};\n\nexport { progressPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { quotePropDefs } from './quote.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype QuoteElement = React.ElementRef<'q'>;\ntype QuoteOwnProps = GetPropDefTypes<typeof quotePropDefs>;\ninterface QuoteProps extends ComponentPropsWithout<'q', RemovedProps>, QuoteOwnProps {}\nconst Quote = React.forwardRef<QuoteElement, QuoteProps>((props, forwardedRef) => {\n  const { asChild, className, ...quoteProps } = extractProps(props, quotePropDefs);\n  const Comp = asChild ? Slot.Root : 'q';\n  return <Comp {...quoteProps} ref={forwardedRef} className={classNames('rt-Quote', className)} />;\n});\nQuote.displayName = 'Quote';\n\nexport { Quote };\nexport type { QuoteProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\n\nconst quotePropDefs = {\n  ...asChildPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n};\n\nexport { quotePropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { RadioGroup as RadioGroupPrimitive } from 'radix-ui';\n\nimport { radioCardsRootPropDefs } from './radio-cards.props.js';\nimport { Grid } from './grid.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype RadioCardsRootElement = React.ElementRef<typeof RadioGroupPrimitive.Root>;\ntype RadioCardsRootOwnProps = GetPropDefTypes<typeof radioCardsRootPropDefs>;\ninterface RadioCardsRootProps\n  extends ComponentPropsWithout<\n      typeof RadioGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    RadioCardsRootOwnProps {}\nconst RadioCardsRoot = React.forwardRef<RadioCardsRootElement, RadioCardsRootProps>(\n  (props, forwardedRef) => {\n    const { className, color, ...rootProps } = extractProps(\n      props,\n      radioCardsRootPropDefs,\n      marginPropDefs\n    );\n    return (\n      <Grid asChild>\n        <RadioGroupPrimitive.Root\n          data-accent-color={color}\n          {...rootProps}\n          ref={forwardedRef}\n          className={classNames('rt-RadioCardsRoot', className)}\n        />\n      </Grid>\n    );\n  }\n);\nRadioCardsRoot.displayName = 'RadioCards.Root';\n\ntype RadioCardsItemElement = React.ElementRef<typeof RadioGroupPrimitive.Item>;\ninterface RadioCardsItemProps\n  extends ComponentPropsWithout<typeof RadioGroupPrimitive.Item, RemovedProps>,\n    MarginProps {}\nconst RadioCardsItem = React.forwardRef<RadioCardsItemElement, RadioCardsItemProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <RadioGroupPrimitive.Item\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-BaseCard', 'rt-RadioCardsItem', className)}\n    />\n  )\n);\nRadioCardsItem.displayName = 'RadioCards.Item';\n\nexport { RadioCardsRoot as Root, RadioCardsItem as Item };\nexport type { RadioCardsRootProps as RootProps, RadioCardsItemProps as ItemProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { gridPropDefs } from './grid.props.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['surface', 'classic'] as const;\n\nconst radioCardsRootPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n  columns: { ...gridPropDefs.columns, default: 'repeat(auto-fit, minmax(160px, 1fr))' },\n  gap: { ...gridPropDefs.gap, default: '4' },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  columns: PropDef<(typeof gridPropDefs.columns.values)[number]>;\n  gap: PropDef<(typeof gridPropDefs.gap.values)[number]>;\n};\n\nexport { radioCardsRootPropDefs };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Context } from 'radix-ui/internal';\nimport { RadioGroup as RadioGroupPrimitive } from 'radix-ui';\n\nimport { radioGroupRootPropDefs } from './radio-group.props.js';\nimport { Text } from './text.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\nconst RADIO_GROUP_NAME = 'RadioGroup';\n\ntype ScopedProps<P> = P & { __scopeRadioGroup?: Context.Scope };\nconst [createRadioGroupContext] = Context.createContextScope(RADIO_GROUP_NAME, [\n  RadioGroupPrimitive.createRadioGroupScope,\n]);\nconst useRadioGroupScope = RadioGroupPrimitive.createRadioGroupScope();\n\ntype RadioGroupRootOwnProps = GetPropDefTypes<typeof radioGroupRootPropDefs>;\ntype RadioGroupContextValue = RadioGroupRootOwnProps;\n\nconst [RadioGroupProvider, useRadioGroupContext] =\n  createRadioGroupContext<RadioGroupContextValue>(RADIO_GROUP_NAME);\n\ntype RadioGroupRootElement = React.ElementRef<typeof RadioGroupPrimitive.Root>;\ninterface RadioGroupRootProps\n  extends ComponentPropsWithout<\n      typeof RadioGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    RadioGroupRootOwnProps {}\nconst RadioGroupRoot = React.forwardRef<RadioGroupRootElement, RadioGroupRootProps>(\n  (\n    {\n      color = radioGroupRootPropDefs.color.default,\n      highContrast = radioGroupRootPropDefs.highContrast.default,\n      size = radioGroupRootPropDefs.size.default,\n      variant = radioGroupRootPropDefs.variant.default,\n      ...props\n    }: ScopedProps<RadioGroupRootProps>,\n    forwardedRef\n  ) => {\n    const { __scopeRadioGroup, className, ...rootProps } = extractProps(props, marginPropDefs);\n    const radioGroupScope = useRadioGroupScope(__scopeRadioGroup);\n    return (\n      <RadioGroupProvider\n        scope={__scopeRadioGroup}\n        color={color}\n        highContrast={highContrast}\n        size={size}\n        variant={variant}\n      >\n        <RadioGroupPrimitive.Root\n          {...radioGroupScope}\n          {...rootProps}\n          ref={forwardedRef}\n          className={classNames('rt-RadioGroupRoot', className)}\n        />\n      </RadioGroupProvider>\n    );\n  }\n);\nRadioGroupRoot.displayName = 'RadioGroup.Root';\n\ntype RadioGroupItemElement = React.ElementRef<typeof RadioGroupItemRadio>;\ninterface RadioGroupItemProps\n  extends ComponentPropsWithout<typeof RadioGroupItemRadio, RemovedProps>,\n    MarginProps {}\nconst RadioGroupItem = React.forwardRef<RadioGroupItemElement, RadioGroupItemProps>(\n  (_props: ScopedProps<RadioGroupItemProps>, forwardedRef) => {\n    const { __scopeRadioGroup, children, className, style, ...props } = _props;\n    const { size } = useRadioGroupContext('RadioGroupItem', __scopeRadioGroup);\n\n    // Render `<Text as=\"label\">` if children\u00A0are provided, otherwise render\n    // the solo radio button to allow building out your custom layouts with it.\n    if (children) {\n      return (\n        <Text\n          as=\"label\"\n          size={size}\n          className={classNames('rt-RadioGroupItem', className)}\n          style={style}\n        >\n          <RadioGroupItemRadio\n            __scopeRadioGroup={__scopeRadioGroup}\n            {...props}\n            ref={forwardedRef}\n          />\n          {children && <span className=\"rt-RadioGroupItemInner\">{children}</span>}\n        </Text>\n      );\n    }\n\n    return (\n      <RadioGroupItemRadio\n        __scopeRadioGroup={__scopeRadioGroup}\n        {...props}\n        ref={forwardedRef}\n        className={className}\n        style={style}\n      />\n    );\n  }\n);\nRadioGroupItem.displayName = 'RadioGroup.Item';\n\ntype RadioGroupItemRadioElement = React.ElementRef<typeof RadioGroupPrimitive.Item>;\ninterface RadioGroupItemRadioProps\n  extends React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item> {}\nconst RadioGroupItemRadio = React.forwardRef<\n  RadioGroupItemRadioElement,\n  ScopedProps<RadioGroupItemRadioProps>\n>(({ __scopeRadioGroup, ...props }, forwardedRef) => {\n  const context = useRadioGroupContext('RadioGroupItemRadio', __scopeRadioGroup);\n  const radioGroupScope = useRadioGroupScope(__scopeRadioGroup);\n  const { color, className } = extractProps(\n    { ...props, ...context },\n    radioGroupRootPropDefs,\n    marginPropDefs\n  );\n  return (\n    <RadioGroupPrimitive.Item\n      {...radioGroupScope}\n      data-accent-color={color}\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-BaseRadioRoot', className)}\n    />\n  );\n});\nRadioGroupItemRadio.displayName = 'RadioGroup.ItemRadio';\n\nexport { RadioGroupRoot as Root, RadioGroupItem as Item };\nexport type { RadioGroupRootProps as RootProps, RadioGroupItemProps as ItemProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst radioGroupRootPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { radioGroupRootPropDefs };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { composeEventHandlers, composeRefs } from 'radix-ui/internal';\n\nimport { radioPropDefs } from './radio.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout } from '../helpers/component-props.js';\nimport type { NotInputRadioAttributes } from '../helpers/input-attributes.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype RadioElement = React.ElementRef<'input'>;\ntype RadioOwnProps = GetPropDefTypes<typeof radioPropDefs> & {\n  value: string;\n  onValueChange?: (value: string) => void;\n};\ntype RadioInputProps = ComponentPropsWithout<\n  'input',\n  NotInputRadioAttributes | 'color' | 'defaultValue' | 'value'\n>;\ninterface RadioProps extends RadioInputProps, MarginProps, RadioOwnProps {}\n\nconst Radio = React.forwardRef<RadioElement, RadioProps>((props, forwardedRef) => {\n  const ref = React.useRef<RadioElement>(null);\n  const { className, color, onChange, onValueChange, ...radioProps } = extractProps(\n    props,\n    radioPropDefs,\n    marginPropDefs\n  );\n  return (\n    <input\n      type=\"radio\"\n      data-accent-color={color}\n      {...radioProps}\n      onChange={composeEventHandlers(onChange, (event) =>\n        onValueChange?.(event.currentTarget.value)\n      )}\n      ref={composeRefs(ref, forwardedRef)}\n      className={classNames('rt-reset', 'rt-BaseRadioRoot', 'rt-RadioRoot', className)}\n    />\n  );\n});\nRadio.displayName = 'Radio';\n\nexport { Radio };\nexport type { RadioProps };\n", "import { colorPropDef } from '../../props/color.prop.js';\nimport { highContrastPropDef } from '../../props/high-contrast.prop.js';\n\nimport type { PropDef } from '../../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst baseRadioPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { baseRadioPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ninterface ResetProps extends ComponentPropsWithout<typeof Slot.Root, RemovedProps> {}\nconst Reset = React.forwardRef<HTMLElement, ResetProps>(\n  ({ className, children, ...props }, forwardedRef) => {\n    return (\n      <Slot.Root {...props} ref={forwardedRef} className={classNames('rt-reset', className)}>\n        {requireReactElement(children)}\n      </Slot.Root>\n    );\n  }\n);\nReset.displayName = 'Reset';\n\nexport { Reset };\nexport type { ResetProps };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ToggleGroup as ToggleGroupPrimitive } from 'radix-ui';\nimport { useControllableState } from 'radix-ui/internal';\n\nimport { segmentedControlRootPropDefs } from './segmented-control.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype SegmentedControlRootOwnProps = GetPropDefTypes<typeof segmentedControlRootPropDefs>;\n\ninterface SegmentedControlRootProps\n  extends ComponentPropsWithout<'div', RemovedProps | 'dir'>,\n    SegmentedControlRootOwnProps,\n    MarginProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?(value: string): void;\n}\n\nconst SegmentedControlRoot = React.forwardRef<HTMLDivElement, SegmentedControlRootProps>(\n  (props, forwardedRef) => {\n    const {\n      className,\n      children,\n      radius,\n      value: valueProp,\n      defaultValue: defaultValueProp,\n      onValueChange: onValueChangeProp,\n      ...rootProps\n    } = extractProps(props, segmentedControlRootPropDefs, marginPropDefs);\n\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChangeProp,\n      defaultProp: defaultValueProp,\n    });\n\n    return (\n      <ToggleGroupPrimitive.Root\n        data-disabled={props.disabled || undefined}\n        data-radius={radius}\n        ref={forwardedRef}\n        className={classNames('rt-SegmentedControlRoot', className)}\n        onValueChange={(value) => {\n          if (value) {\n            setValue(value);\n          }\n        }}\n        {...rootProps}\n        type=\"single\"\n        value={value}\n        asChild={false}\n        disabled={!!props.disabled}\n      >\n        {children}\n        <div className=\"rt-SegmentedControlIndicator\" />\n      </ToggleGroupPrimitive.Root>\n    );\n  }\n);\n\nSegmentedControlRoot.displayName = 'SegmentedControl.Root';\n\ninterface SegmentedControlItemOwnProps {\n  value: string;\n}\n\ninterface SegmentedControlItemProps\n  extends ComponentPropsWithout<\n      typeof ToggleGroupPrimitive.Item,\n      RemovedProps | 'disabled' | 'type' | 'value'\n    >,\n    SegmentedControlItemOwnProps {}\n\nconst SegmentedControlItem = React.forwardRef<HTMLButtonElement, SegmentedControlItemProps>(\n  ({ children, className, ...props }, forwardedRef) => (\n    <ToggleGroupPrimitive.Item\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-SegmentedControlItem', className)}\n      {...props}\n      disabled={false}\n      asChild={false}\n    >\n      <span className=\"rt-SegmentedControlItemSeparator\" />\n      <span className=\"rt-SegmentedControlItemLabel\">\n        <span className=\"rt-SegmentedControlItemLabelActive\">{children}</span>\n        <span className=\"rt-SegmentedControlItemLabelInactive\" aria-hidden>\n          {children}\n        </span>\n      </span>\n    </ToggleGroupPrimitive.Item>\n  )\n);\n\nSegmentedControlItem.displayName = 'SegmentedControl.Item';\n\nexport { SegmentedControlRoot as Root, SegmentedControlItem as Item };\nexport type { SegmentedControlRootProps as RootProps, SegmentedControlItemProps as ItemProps };\n", "import { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['surface', 'classic'] as const;\n\nconst segmentedControlRootPropDefs = {\n  disabled: { type: 'boolean', className: 'disabled', default: false },\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...radiusPropDef,\n} satisfies {\n  disabled?: PropDef<boolean>;\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { segmentedControlRootPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { sectionPropDefs } from './section.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { SectionOwnProps } from './section.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype SectionElement = React.ElementRef<'div'>;\ninterface SectionProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    LayoutProps,\n    SectionOwnProps {}\nconst Section = React.forwardRef<SectionElement, SectionProps>((props, forwardedRef) => {\n  const { asChild, className, ...sectionProps } = extractProps(\n    props,\n    sectionPropDefs,\n    layoutPropDefs,\n    marginPropDefs\n  );\n  const Comp = asChild ? Slot.Root : 'section';\n  return (\n    <Comp {...sectionProps} ref={forwardedRef} className={classNames('rt-Section', className)} />\n  );\n});\nSection.displayName = 'Section';\n\nexport { Section };\nexport type { SectionProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4'] as const;\nconst displayValues = ['none', 'initial'] as const;\n\nconst sectionPropDefs = {\n  ...asChildPropDef,\n  /**\n   * Controls the vertical padding of the section.\n   *\n   * @values\n   * | Size     | Padding |\n   * | :------- | ------: |\n   * | size=\"1\" | 24px    |\n   * | size=\"2\" | 40px    |\n   * | size=\"3\" | 64px    |\n   * | size=\"4\" | 80px    |\n   *\n   * @example\n   * size=\"4\"\n   * size={{ sm: '3', lg: '4' }}\n   *\n   * @link\n   * https://github.com/radix-ui/themes/blob/main/packages/radix-ui-themes/src/components/section.css\n   */\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    default: '3',\n    responsive: true,\n  },\n  /**\n   * Controls whether the section is visible or hidden.\n   * Supports \"none\", \"initial\", and responsive object values.\n   *\n   * @example\n   * display=\"none\"\n   * display={{ sm: 'none', lg: 'initial' }}\n   */\n  display: {\n    type: 'enum',\n    className: 'rt-r-display',\n    values: displayValues,\n    parseValue: parseDisplayValue,\n    responsive: true,\n  },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  display: PropDef<(typeof displayValues)[number]>;\n};\n\nfunction parseDisplayValue(value: string) {\n  return value === 'initial' ? 'block' : value;\n}\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype SectionOwnProps = GetPropDefTypes<typeof sectionPropDefs & typeof asChildPropDef>;\n\nexport { sectionPropDefs };\nexport type { SectionOwnProps };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Select as SelectPrimitive, ScrollArea as ScrollAreaPrimitive } from 'radix-ui';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { ChevronDownIcon, ThickCheckIcon } from './icons.js';\nimport {\n  selectRootPropDefs,\n  selectTriggerPropDefs,\n  selectContentPropDefs,\n} from './select.props.js';\nimport { useThemeContext, Theme } from './theme.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype SelectRootOwnProps = GetPropDefTypes<typeof selectRootPropDefs>;\n\ntype SelectContextValue = SelectRootOwnProps;\nconst SelectContext = React.createContext<SelectContextValue>({});\n\ninterface SelectRootProps extends SelectPrimitive.SelectProps, SelectContextValue {}\nconst SelectRoot: React.FC<SelectRootProps> = (props) => {\n  const { children, size = selectRootPropDefs.size.default, ...rootProps } = props;\n  return (\n    <SelectPrimitive.Root {...rootProps}>\n      <SelectContext.Provider value={React.useMemo(() => ({ size }), [size])}>\n        {children}\n      </SelectContext.Provider>\n    </SelectPrimitive.Root>\n  );\n};\nSelectRoot.displayName = 'Select.Root';\n\ntype SelectTriggerElement = React.ElementRef<typeof SelectPrimitive.Trigger>;\ntype SelectTriggerOwnProps = GetPropDefTypes<typeof selectTriggerPropDefs>;\ninterface SelectTriggerProps\n  extends ComponentPropsWithout<typeof SelectPrimitive.Trigger, RemovedProps>,\n    MarginProps,\n    SelectTriggerOwnProps {}\nconst SelectTrigger = React.forwardRef<SelectTriggerElement, SelectTriggerProps>(\n  (props, forwardedRef) => {\n    const context = React.useContext(SelectContext);\n    const { children, className, color, radius, placeholder, ...triggerProps } = extractProps(\n      // Pass size value from the context to generate styles\n      { size: context?.size, ...props },\n      // Pass size prop def to allow it to be extracted\n      { size: selectRootPropDefs.size },\n      selectTriggerPropDefs,\n      marginPropDefs\n    );\n    return (\n      <SelectPrimitive.Trigger asChild>\n        <button\n          data-accent-color={color}\n          data-radius={radius}\n          {...triggerProps}\n          ref={forwardedRef}\n          className={classNames('rt-reset', 'rt-SelectTrigger', className)}\n        >\n          <span className=\"rt-SelectTriggerInner\">\n            <SelectPrimitive.Value placeholder={placeholder}>{children}</SelectPrimitive.Value>\n          </span>\n          <SelectPrimitive.Icon asChild>\n            <ChevronDownIcon className=\"rt-SelectIcon\" />\n          </SelectPrimitive.Icon>\n        </button>\n      </SelectPrimitive.Trigger>\n    );\n  }\n);\nSelectTrigger.displayName = 'Select.Trigger';\n\ntype SelectContentElement = React.ElementRef<typeof SelectPrimitive.Content>;\ntype SelectContentOwnProps = GetPropDefTypes<typeof selectContentPropDefs>;\ninterface SelectContentProps\n  extends ComponentPropsWithout<typeof SelectPrimitive.Content, RemovedProps>,\n    SelectContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof SelectPrimitive.Portal>['container'];\n}\nconst SelectContent = React.forwardRef<SelectContentElement, SelectContentProps>(\n  (props, forwardedRef) => {\n    const context = React.useContext(SelectContext);\n    const { className, children, color, container, ...contentProps } = extractProps(\n      // Pass size value from the context to generate styles\n      { size: context?.size, ...props },\n      // Pass size prop def to allow it to be extracted\n      { size: selectRootPropDefs.size },\n      selectContentPropDefs\n    );\n    const themeContext = useThemeContext();\n    const resolvedColor = color || themeContext.accentColor;\n    return (\n      <SelectPrimitive.Portal container={container}>\n        <Theme asChild>\n          <SelectPrimitive.Content\n            data-accent-color={resolvedColor}\n            sideOffset={4}\n            {...contentProps}\n            asChild={false}\n            ref={forwardedRef}\n            className={classNames(\n              { 'rt-PopperContent': contentProps.position === 'popper' },\n              'rt-SelectContent',\n              className\n            )}\n          >\n            <ScrollAreaPrimitive.Root type=\"auto\" className=\"rt-ScrollAreaRoot\">\n              <SelectPrimitive.Viewport asChild className=\"rt-SelectViewport\">\n                <ScrollAreaPrimitive.Viewport\n                  className=\"rt-ScrollAreaViewport\"\n                  style={{ overflowY: undefined }}\n                >\n                  {children}\n                </ScrollAreaPrimitive.Viewport>\n              </SelectPrimitive.Viewport>\n              <ScrollAreaPrimitive.Scrollbar\n                className=\"rt-ScrollAreaScrollbar rt-r-size-1\"\n                orientation=\"vertical\"\n              >\n                <ScrollAreaPrimitive.Thumb className=\"rt-ScrollAreaThumb\" />\n              </ScrollAreaPrimitive.Scrollbar>\n            </ScrollAreaPrimitive.Root>\n          </SelectPrimitive.Content>\n        </Theme>\n      </SelectPrimitive.Portal>\n    );\n  }\n);\nSelectContent.displayName = 'Select.Content';\n\ntype SelectItemElement = React.ElementRef<typeof SelectPrimitive.Item>;\ninterface SelectItemProps\n  extends ComponentPropsWithout<typeof SelectPrimitive.Item, RemovedProps> {}\nconst SelectItem = React.forwardRef<SelectItemElement, SelectItemProps>((props, forwardedRef) => {\n  const { className, children, ...itemProps } = props;\n  return (\n    <SelectPrimitive.Item\n      {...itemProps}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-SelectItem', className)}\n    >\n      <SelectPrimitive.ItemIndicator className=\"rt-SelectItemIndicator\">\n        <ThickCheckIcon className=\"rt-SelectItemIndicatorIcon\" />\n      </SelectPrimitive.ItemIndicator>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  );\n});\nSelectItem.displayName = 'Select.Item';\n\ntype SelectGroupElement = React.ElementRef<typeof SelectPrimitive.Group>;\ninterface SelectGroupProps\n  extends ComponentPropsWithout<typeof SelectPrimitive.Group, RemovedProps> {}\nconst SelectGroup = React.forwardRef<SelectGroupElement, SelectGroupProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <SelectPrimitive.Group\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-SelectGroup', className)}\n    />\n  )\n);\nSelectGroup.displayName = 'Select.Group';\n\ntype SelectLabelElement = React.ElementRef<typeof SelectPrimitive.Label>;\ninterface SelectLabelProps\n  extends ComponentPropsWithout<typeof SelectPrimitive.Label, RemovedProps> {}\nconst SelectLabel = React.forwardRef<SelectLabelElement, SelectLabelProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <SelectPrimitive.Label\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-SelectLabel', className)}\n    />\n  )\n);\nSelectLabel.displayName = 'Select.Label';\n\ntype SelectSeparatorElement = React.ElementRef<typeof SelectPrimitive.Separator>;\ninterface SelectSeparatorProps\n  extends ComponentPropsWithout<typeof SelectPrimitive.Separator, RemovedProps> {}\nconst SelectSeparator = React.forwardRef<SelectSeparatorElement, SelectSeparatorProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <SelectPrimitive.Separator\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-SelectSeparator', className)}\n    />\n  )\n);\nSelectSeparator.displayName = 'Select.Separator';\n\nexport {\n  SelectRoot as Root,\n  SelectTrigger as Trigger,\n  SelectContent as Content,\n  SelectItem as Item,\n  SelectGroup as Group,\n  SelectLabel as Label,\n  SelectSeparator as Separator,\n};\n\nexport type {\n  SelectRootProps as RootProps,\n  SelectTriggerProps as TriggerProps,\n  SelectContentProps as ContentProps,\n  SelectItemProps as ItemProps,\n  SelectGroupProps as GroupProps,\n  SelectLabelProps as LabelProps,\n  SelectSeparatorProps as SeparatorProps,\n};\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\n\nconst selectRootPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n};\n\nconst triggerVariants = ['classic', 'surface', 'soft', 'ghost'] as const;\n\nconst selectTriggerPropDefs = {\n  variant: { type: 'enum', className: 'rt-variant', values: triggerVariants, default: 'surface' },\n  ...colorPropDef,\n  ...radiusPropDef,\n  placeholder: { type: 'string' },\n} satisfies {\n  variant: PropDef<(typeof triggerVariants)[number]>;\n  placeholder: PropDef<string>;\n};\n\nconst contentVariants = ['solid', 'soft'] as const;\n\nconst selectContentPropDefs = {\n  variant: { type: 'enum', className: 'rt-variant', values: contentVariants, default: 'solid' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  variant: PropDef<(typeof contentVariants)[number]>;\n};\n\nexport { selectRootPropDefs, selectTriggerPropDefs, selectContentPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { separatorPropDefs } from './separator.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype SeparatorElement = React.ElementRef<'span'>;\ntype SeparatorOwnProps = GetPropDefTypes<typeof separatorPropDefs>;\ninterface SeparatorProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    SeparatorOwnProps {}\nconst Separator = React.forwardRef<SeparatorElement, SeparatorProps>((props, forwardedRef) => {\n  const { className, color, decorative, ...separatorProps } = extractProps(\n    props,\n    separatorPropDefs,\n    marginPropDefs\n  );\n  return (\n    <span\n      data-accent-color={color}\n      role={decorative ? undefined : 'separator'}\n      {...separatorProps}\n      ref={forwardedRef}\n      className={classNames('rt-Separator', className)}\n    />\n  );\n});\nSeparator.displayName = 'Separator';\n\nexport { Separator };\nexport type { SeparatorProps };\n", "import { colorPropDef } from '../props/color.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst orientationValues = ['horizontal', 'vertical'] as const;\nconst sizes = ['1', '2', '3', '4'] as const;\n\nconst separatorPropDefs = {\n  orientation: {\n    type: 'enum',\n    className: 'rt-r-orientation',\n    values: orientationValues,\n    default: 'horizontal',\n    responsive: true,\n  },\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '1', responsive: true },\n  color: { ...colorPropDef.color, default: 'gray' },\n  decorative: { type: 'boolean', default: true },\n} satisfies {\n  orientation: PropDef<(typeof orientationValues)[number]>;\n  size: PropDef<(typeof sizes)[number]>;\n  color: typeof colorPropDef.color;\n  decorative: PropDef<boolean>;\n};\n\nexport { separatorPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { inert } from '../helpers/inert.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { skeletonPropDefs } from './skeleton.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype SkeletonElement = React.ElementRef<'span'>;\ntype SkeletonOwnProps = GetPropDefTypes<typeof skeletonPropDefs>;\ninterface SkeletonProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    SkeletonOwnProps {}\nconst Skeleton = React.forwardRef<SkeletonElement, SkeletonProps>((props, forwardedRef) => {\n  const { children, className, loading, ...skeletonProps } = extractProps(\n    props,\n    skeletonPropDefs,\n    marginPropDefs\n  );\n\n  if (!loading) return children;\n\n  const Tag = React.isValidElement(children) ? Slot.Root : 'span';\n\n  return (\n    <Tag\n      ref={forwardedRef}\n      aria-hidden\n      className={classNames('rt-Skeleton', className)}\n      data-inline-skeleton={React.isValidElement(children) ? undefined : true}\n      tabIndex={-1}\n      // @ts-expect-error\n      inert={inert}\n      {...skeletonProps}\n    >\n      {children}\n    </Tag>\n  );\n});\nSkeleton.displayName = 'Skeleton';\n\nexport { Skeleton };\nexport type { SkeletonProps };\n", "import * as React from 'react';\n\n// \"inert\" works differently between React versions\n// https://github.com/facebook/react/pull/24730\nexport const inert = parseFloat(React.version) >= 19 || '';\n", "import { heightPropDefs } from '../props/height.props.js';\nimport { widthPropDefs } from '../props/width.props.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst skeletonPropDefs = {\n  loading: { type: 'boolean', default: true },\n  ...widthPropDefs,\n  ...heightPropDefs,\n} satisfies {\n  loading: PropDef<boolean>;\n};\n\nexport { skeletonPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slider as SliderPrimitive } from 'radix-ui';\n\nimport { sliderPropDefs } from './slider.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype SliderElement = React.ElementRef<typeof SliderPrimitive.Root>;\ntype SliderOwnProps = GetPropDefTypes<typeof sliderPropDefs>;\ninterface SliderProps\n  extends ComponentPropsWithout<\n      typeof SliderPrimitive.Root,\n      'asChild' | 'color' | 'children' | 'defaultChecked'\n    >,\n    MarginProps,\n    SliderOwnProps {}\nconst Slider = React.forwardRef<SliderElement, SliderProps>((props, forwardedRef) => {\n  const { className, color, radius, tabIndex, ...sliderProps } = extractProps(\n    props,\n    sliderPropDefs,\n    marginPropDefs\n  );\n  return (\n    <SliderPrimitive.Root\n      data-accent-color={color}\n      data-radius={radius}\n      ref={forwardedRef}\n      {...sliderProps}\n      asChild={false}\n      className={classNames('rt-SliderRoot', className)}\n    >\n      <SliderPrimitive.Track className=\"rt-SliderTrack\">\n        <SliderPrimitive.Range\n          className={classNames('rt-SliderRange', { 'rt-high-contrast': props.highContrast })}\n          data-inverted={sliderProps.inverted ? '' : undefined}\n        />\n      </SliderPrimitive.Track>\n      {(sliderProps.value ?? sliderProps.defaultValue ?? []).map((value, index) => (\n        <SliderPrimitive.Thumb\n          key={index}\n          className=\"rt-SliderThumb\"\n          {...(tabIndex !== undefined ? { tabIndex } : undefined)}\n        />\n      ))}\n    </SliderPrimitive.Root>\n  );\n});\nSlider.displayName = 'Slider';\n\nexport { Slider };\nexport type { SliderProps };\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst sliderPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n  ...radiusPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { sliderPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from 'radix-ui';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { strongPropDefs } from './strong.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype StrongElement = React.ElementRef<'strong'>;\ntype StrongOwnProps = GetPropDefTypes<typeof strongPropDefs>;\ninterface StrongProps extends ComponentPropsWithout<'strong', RemovedProps>, StrongOwnProps {}\nconst Strong = React.forwardRef<StrongElement, StrongProps>((props, forwardedRef) => {\n  const { asChild, className, ...strongProps } = extractProps(props, strongPropDefs);\n  const Comp = asChild ? Slot.Root : 'strong';\n  return (\n    <Comp {...strongProps} ref={forwardedRef} className={classNames('rt-Strong', className)} />\n  );\n});\nStrong.displayName = 'Strong';\n\nexport { Strong };\nexport type { StrongProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\n\nconst strongPropDefs = {\n  ...asChildPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n};\n\nexport { strongPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Switch as SwitchPrimitive } from 'radix-ui';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { switchPropDefs } from './switch.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\nimport type { ComponentPropsWithout } from '../helpers/component-props.js';\n\ntype SwitchElement = React.ElementRef<typeof SwitchPrimitive.Root>;\ntype SwitchOwnProps = GetPropDefTypes<typeof switchPropDefs>;\ninterface SwitchProps\n  extends ComponentPropsWithout<\n      typeof SwitchPrimitive.Root,\n      'asChild' | 'color' | 'defaultValue' | 'children'\n    >,\n    MarginProps,\n    SwitchOwnProps {}\nconst Switch = React.forwardRef<SwitchElement, SwitchProps>((props, forwardedRef) => {\n  const { className, color, radius, ...switchProps } = extractProps(\n    props,\n    switchPropDefs,\n    marginPropDefs\n  );\n  return (\n    <SwitchPrimitive.Root\n      data-accent-color={color}\n      data-radius={radius}\n      {...switchProps}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-SwitchRoot', className)}\n    >\n      <SwitchPrimitive.Thumb\n        className={classNames('rt-SwitchThumb', { 'rt-high-contrast': props.highContrast })}\n      />\n    </SwitchPrimitive.Root>\n  );\n});\nSwitch.displayName = 'Switch';\n\nexport { Switch };\nexport type { SwitchProps };\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst switchPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n  ...radiusPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { switchPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { NavigationMenu } from 'radix-ui';\n\nimport { tabNavRootPropDefs } from './tab-nav.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { getSubtree } from '../helpers/get-subtree.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { tabNavLinkPropDefs } from './tab-nav.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TabNavRootElement = React.ElementRef<typeof NavigationMenu.Root>;\ntype TabNavRootElementProps = ComponentPropsWithout<'nav', RemovedProps>;\ntype TabNavOwnProps = GetPropDefTypes<typeof tabNavRootPropDefs>;\ninterface TabNavRootProps\n  extends Omit<TabNavRootElementProps, 'defaultValue' | 'dir' | 'color'>,\n    MarginProps,\n    TabNavOwnProps {}\nconst TabNavRoot = React.forwardRef<TabNavRootElement, TabNavRootProps>((props, forwardedRef) => {\n  const { children, className, color, ...rootProps } = extractProps(\n    props,\n    tabNavRootPropDefs,\n    marginPropDefs\n  );\n  return (\n    <NavigationMenu.Root\n      className=\"rt-TabNavRoot\"\n      data-accent-color={color}\n      {...rootProps}\n      asChild={false}\n      ref={forwardedRef}\n    >\n      <NavigationMenu.List\n        className={classNames('rt-reset', 'rt-BaseTabList', 'rt-TabNavList', className)}\n      >\n        {children}\n      </NavigationMenu.List>\n    </NavigationMenu.Root>\n  );\n});\nTabNavRoot.displayName = 'TabNav.Root';\n\ntype TabNavLinkElement = React.ElementRef<typeof NavigationMenu.Link>;\ntype TabNavLinkOwnProps = GetPropDefTypes<typeof tabNavLinkPropDefs>;\ninterface TabNavLinkProps\n  extends ComponentPropsWithout<typeof NavigationMenu.Link, RemovedProps | 'onSelect'>,\n    TabNavLinkOwnProps {}\nconst TabNavLink = React.forwardRef<TabNavLinkElement, TabNavLinkProps>((props, forwardedRef) => {\n  const { asChild, children, className, ...linkProps } = props;\n\n  return (\n    <NavigationMenu.Item className=\"rt-TabNavItem\">\n      <NavigationMenu.Link\n        {...linkProps}\n        ref={forwardedRef}\n        className={classNames('rt-reset', 'rt-BaseTabListTrigger', 'rt-TabNavLink', className)}\n        onSelect={undefined}\n        asChild={asChild}\n      >\n        {getSubtree({ asChild, children }, (children) => (\n          <>\n            <span className=\"rt-BaseTabListTriggerInner rt-TabNavLinkInner\">{children}</span>\n            <span className=\"rt-BaseTabListTriggerInnerHidden rt-TabNavLinkInnerHidden\">\n              {children}\n            </span>\n          </>\n        ))}\n      </NavigationMenu.Link>\n    </NavigationMenu.Item>\n  );\n});\nTabNavLink.displayName = 'TabNav.Link';\n\nexport { TabNavRoot as Root, TabNavLink as Link };\nexport type { TabNavRootProps as RootProps, TabNavLinkProps as LinkProps };\n", "import { colorPropDef } from '../../props/color.prop.js';\nimport { highContrastPropDef } from '../../props/high-contrast.prop.js';\n\nimport type { PropDef } from '../../props/prop-def.js';\n\nconst sizes = ['1', '2'] as const;\nconst wrapValues = ['nowrap', 'wrap', 'wrap-reverse'] as const;\nconst justifyValues = ['start', 'center', 'end'] as const;\n\nconst baseTabListPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  wrap: {\n    type: 'enum',\n    className: 'rt-r-fw',\n    values: wrapValues,\n    responsive: true,\n  },\n  justify: {\n    type: 'enum',\n    className: 'rt-r-jc',\n    values: justifyValues,\n    responsive: true,\n  },\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  wrap: PropDef<(typeof wrapValues)[number]>;\n  justify: PropDef<(typeof justifyValues)[number]>;\n};\n\nexport { baseTabListPropDefs };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst tabNavLinkPropDefs = {\n  ...asChildPropDef,\n  active: { type: 'boolean', default: false },\n} satisfies {\n  active: PropDef<boolean>;\n};\n\nexport { baseTabListPropDefs as tabNavRootPropDefs } from './_internal/base-tab-list.props.js';\nexport { tabNavLinkPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { tableRootPropDefs, tableRowPropDefs, tableCellPropDefs } from './table.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { getResponsiveClassNames } from '../helpers/get-responsive-styles.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { ScrollArea } from './scroll-area.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TableRootElement = React.ElementRef<'div'>;\ntype TableRootOwnProps = GetPropDefTypes<typeof tableRootPropDefs>;\ninterface TableRootProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    TableRootOwnProps {}\nconst TableRoot = React.forwardRef<TableRootElement, TableRootProps>((props, forwardedRef) => {\n  const { layout: layoutPropDef, ...rootPropDefs } = tableRootPropDefs;\n  const { className, children, layout, ...rootProps } = extractProps(\n    props,\n    rootPropDefs,\n    marginPropDefs\n  );\n  const tableLayoutClassNames = getResponsiveClassNames({\n    value: layout,\n    className: tableRootPropDefs.layout.className,\n    propValues: tableRootPropDefs.layout.values,\n  });\n  return (\n    <div ref={forwardedRef} className={classNames('rt-TableRoot', className)} {...rootProps}>\n      <ScrollArea>\n        <table className={classNames('rt-TableRootTable', tableLayoutClassNames)}>{children}</table>\n      </ScrollArea>\n    </div>\n  );\n});\nTableRoot.displayName = 'Table.Root';\n\ntype TableHeaderElement = React.ElementRef<'thead'>;\ninterface TableHeaderProps extends ComponentPropsWithout<'thead', RemovedProps> {}\nconst TableHeader = React.forwardRef<TableHeaderElement, TableHeaderProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <thead {...props} ref={forwardedRef} className={classNames('rt-TableHeader', className)} />\n  )\n);\nTableHeader.displayName = 'Table.Header';\n\ntype TableBodyElement = React.ElementRef<'tbody'>;\ninterface TableBodyProps extends ComponentPropsWithout<'tbody', RemovedProps> {}\nconst TableBody = React.forwardRef<TableBodyElement, TableBodyProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <tbody {...props} ref={forwardedRef} className={classNames('rt-TableBody', className)} />\n  )\n);\nTableBody.displayName = 'Table.Body';\n\ntype TableRowElement = React.ElementRef<'tr'>;\ntype TableRowOwnProps = GetPropDefTypes<typeof tableRowPropDefs>;\ninterface TableRowProps extends ComponentPropsWithout<'tr', RemovedProps>, TableRowOwnProps {}\nconst TableRow = React.forwardRef<TableRowElement, TableRowProps>((props, forwardedRef) => {\n  const { className, ...rowProps } = extractProps(props, tableRowPropDefs);\n  return <tr {...rowProps} ref={forwardedRef} className={classNames('rt-TableRow', className)} />;\n});\nTableRow.displayName = 'Table.Row';\n\ntype TableCellElement = React.ElementRef<'td'>;\ntype TableCellOwnProps = GetPropDefTypes<typeof tableCellPropDefs>;\ninterface TableCellProps\n  extends ComponentPropsWithout<'td', RemovedProps | 'width'>,\n    TableCellOwnProps {}\nconst TableCell = React.forwardRef<TableCellElement, TableCellProps>((props, forwardedRef) => {\n  const { className, ...cellProps } = extractProps(props, tableCellPropDefs);\n  return <td className={classNames('rt-TableCell', className)} ref={forwardedRef} {...cellProps} />;\n});\nTableCell.displayName = 'Table.Cell';\n\ntype TableColumnHeaderCellElement = React.ElementRef<'th'>;\ninterface TableColumnHeaderCellProps\n  extends ComponentPropsWithout<'th', RemovedProps>,\n    TableCellOwnProps {}\nconst TableColumnHeaderCell = React.forwardRef<\n  TableColumnHeaderCellElement,\n  TableColumnHeaderCellProps\n>((props, forwardedRef) => {\n  const { className, ...cellProps } = extractProps(props, tableCellPropDefs);\n  return (\n    <th\n      className={classNames('rt-TableCell', 'rt-TableColumnHeaderCell', className)}\n      scope=\"col\"\n      ref={forwardedRef}\n      {...cellProps}\n    />\n  );\n});\nTableColumnHeaderCell.displayName = 'Table.ColumnHeaderCell';\n\ntype TableRowHeaderCellElement = React.ElementRef<'th'>;\ninterface TableRowHeaderCellProps\n  extends ComponentPropsWithout<'th', RemovedProps>,\n    TableCellOwnProps {}\nconst TableRowHeaderCell = React.forwardRef<TableRowHeaderCellElement, TableRowHeaderCellProps>(\n  (props, forwardedRef) => {\n    const { className, ...cellProps } = extractProps(props, tableCellPropDefs);\n    return (\n      <th\n        className={classNames('rt-TableCell', 'rt-TableRowHeaderCell', className)}\n        scope=\"row\"\n        ref={forwardedRef}\n        {...cellProps}\n      />\n    );\n  }\n);\nTableRowHeaderCell.displayName = 'Table.RowHeaderCell';\n\nexport {\n  TableRoot as Root,\n  TableHeader as Header,\n  TableBody as Body,\n  TableRow as Row,\n  TableCell as Cell,\n  TableColumnHeaderCell as ColumnHeaderCell,\n  TableRowHeaderCell as RowHeaderCell,\n};\n\nexport type {\n  TableRootProps as RootProps,\n  TableHeaderProps as HeaderProps,\n  TableBodyProps as BodyProps,\n  TableRowProps as RowProps,\n  TableCellProps as CellProps,\n  TableColumnHeaderCellProps as ColumnHeaderCellProps,\n  TableRowHeaderCellProps as RowHeaderCellProps,\n};\n", "import { paddingPropDefs } from '../props/padding.props.js';\nimport { widthPropDefs } from '../props/width.props.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['surface', 'ghost'] as const;\nconst layoutValues = ['auto', 'fixed'] as const;\n\nconst tableRootPropDefs = {\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    default: '2',\n    responsive: true,\n  },\n  variant: {\n    type: 'enum',\n    className: 'rt-variant',\n    values: variants,\n    default: 'ghost',\n  },\n  layout: {\n    type: 'enum',\n    className: 'rt-r-tl',\n    values: layoutValues,\n    responsive: true,\n  },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  layout: PropDef<(typeof layoutValues)[number]>;\n};\n\nconst rowAlign = ['start', 'center', 'end', 'baseline'] as const;\n\nconst tableRowPropDefs = {\n  align: {\n    type: 'enum',\n    className: 'rt-r-va',\n    values: rowAlign,\n    parseValue: parseAlignValue,\n    responsive: true,\n  },\n} satisfies {\n  align: PropDef<(typeof rowAlign)[number]>;\n};\n\nfunction parseAlignValue(value: string) {\n  return {\n    baseline: 'baseline',\n    start: 'top',\n    center: 'middle',\n    end: 'bottom',\n  }[value];\n}\n\nconst justifyValues = ['start', 'center', 'end'] as const;\n\nconst tableCellPropDefs = {\n  justify: {\n    type: 'enum',\n    className: 'rt-r-ta',\n    values: justifyValues,\n    parseValue: parseJustifyValue,\n    responsive: true,\n  },\n  ...widthPropDefs,\n  ...paddingPropDefs,\n} satisfies {\n  justify: PropDef<(typeof justifyValues)[number]>;\n};\n\nfunction parseJustifyValue(value: string) {\n  return {\n    start: 'left',\n    center: 'center',\n    end: 'right',\n  }[value];\n}\n\nexport { tableRootPropDefs, tableRowPropDefs, tableCellPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Tabs as TabsPrimitive } from 'radix-ui';\n\nimport { tabsListPropDefs } from './tabs.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { tabsContentPropDefs, tabsRootPropDefs } from './tabs.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TabsRootElement = React.ElementRef<typeof TabsPrimitive.Root>;\ntype TabsRootOwnProps = GetPropDefTypes<typeof tabsRootPropDefs>;\ninterface TabsRootProps\n  extends ComponentPropsWithout<typeof TabsPrimitive.Root, 'asChild' | 'color' | 'defaultChecked'>,\n    MarginProps,\n    TabsRootOwnProps {}\nconst TabsRoot = React.forwardRef<TabsRootElement, TabsRootProps>((props, forwardedRef) => {\n  const { className, ...rootProps } = extractProps(props, marginPropDefs);\n  return (\n    <TabsPrimitive.Root\n      {...rootProps}\n      ref={forwardedRef}\n      className={classNames('rt-TabsRoot', className)}\n    />\n  );\n});\nTabsRoot.displayName = 'Tabs.Root';\n\ntype TabsListElement = React.ElementRef<typeof TabsPrimitive.List>;\ntype TabsListOwnProps = GetPropDefTypes<typeof tabsListPropDefs>;\ninterface TabsListProps\n  extends ComponentPropsWithout<typeof TabsPrimitive.List, RemovedProps>,\n    MarginProps,\n    TabsListOwnProps {}\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>((props, forwardedRef) => {\n  const { className, color, ...listProps } = extractProps(props, tabsListPropDefs, marginPropDefs);\n  return (\n    <TabsPrimitive.List\n      data-accent-color={color}\n      {...listProps}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseTabList', 'rt-TabsList', className)}\n    />\n  );\n});\nTabsList.displayName = 'Tabs.List';\n\ntype TabsTriggerElement = React.ElementRef<typeof TabsPrimitive.Trigger>;\ninterface TabsTriggerProps\n  extends ComponentPropsWithout<typeof TabsPrimitive.Trigger, RemovedProps> {}\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props, forwardedRef) => {\n    const { className, children, ...triggerProps } = props;\n    return (\n      <TabsPrimitive.Trigger\n        {...triggerProps}\n        asChild={false}\n        ref={forwardedRef}\n        className={classNames('rt-reset', 'rt-BaseTabListTrigger', 'rt-TabsTrigger', className)}\n      >\n        <span className=\"rt-BaseTabListTriggerInner rt-TabsTriggerInner\">{children}</span>\n        <span className=\"rt-BaseTabListTriggerInnerHidden rt-TabsTriggerInnerHidden\">\n          {children}\n        </span>\n      </TabsPrimitive.Trigger>\n    );\n  }\n);\nTabsTrigger.displayName = 'Tabs.Trigger';\n\ntype TabsContentElement = React.ElementRef<typeof TabsPrimitive.Content>;\ntype TabsContentOwnProps = GetPropDefTypes<typeof tabsContentPropDefs>;\ninterface TabsContentProps\n  extends ComponentPropsWithout<typeof TabsPrimitive.Content, RemovedProps>,\n    MarginProps,\n    TabsContentOwnProps {}\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props, forwardedRef) => {\n    const { className, ...contentProps } = extractProps(props, marginPropDefs);\n    return (\n      <TabsPrimitive.Content\n        {...contentProps}\n        ref={forwardedRef}\n        className={classNames('rt-TabsContent', className)}\n      />\n    );\n  }\n);\nTabsContent.displayName = 'Tabs.Content';\n\nexport { TabsRoot as Root, TabsList as List, TabsTrigger as Trigger, TabsContent as Content };\nexport type {\n  TabsRootProps as RootProps,\n  TabsListProps as ListProps,\n  TabsTriggerProps as TriggerProps,\n  TabsContentProps as ContentProps,\n};\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nconst tabsRootPropDefs = {\n  ...asChildPropDef,\n};\n\nconst tabsContentPropDefs = {\n  ...asChildPropDef,\n};\n\nexport { baseTabListPropDefs as tabsListPropDefs } from './_internal/base-tab-list.props.js';\nexport { tabsRootPropDefs, tabsContentPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { textAreaPropDefs } from './text-area.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TextAreaElement = React.ElementRef<'textarea'>;\ntype TextAreaOwnProps = GetPropDefTypes<typeof textAreaPropDefs> & {\n  defaultValue?: string;\n  value?: string;\n};\ninterface TextAreaProps\n  extends ComponentPropsWithout<'textarea', RemovedProps | 'size' | 'value'>,\n    MarginProps,\n    TextAreaOwnProps {}\nconst TextArea = React.forwardRef<TextAreaElement, TextAreaProps>((props, forwardedRef) => {\n  const { className, color, radius, style, ...textAreaProps } = extractProps(\n    props,\n    textAreaPropDefs,\n    marginPropDefs\n  );\n  return (\n    <div\n      data-accent-color={color}\n      data-radius={radius}\n      className={classNames('rt-TextAreaRoot', className)}\n      style={style}\n    >\n      <textarea className=\"rt-reset rt-TextAreaInput\" ref={forwardedRef} {...textAreaProps} />\n    </div>\n  );\n});\nTextArea.displayName = 'TextArea';\n\nexport { TextArea };\nexport type { TextAreaProps };\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\nconst resizeValues = ['none', 'vertical', 'horizontal', 'both'] as const;\n\n// prettier-ignore\nconst textAreaPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  resize: { type: 'enum', className: 'rt-r-resize', values: resizeValues,  responsive: true },\n  ...colorPropDef,\n  ...radiusPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  resize: PropDef<(typeof resizeValues)[number]>;\n    };\n\nexport { textAreaPropDefs };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { composeRefs } from 'radix-ui/internal';\n\nimport { textFieldRootPropDefs, textFieldSlotPropDefs } from './text-field.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { NotInputTextualAttributes } from '../helpers/input-attributes.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TextFieldRootElement = React.ElementRef<'input'>;\ntype TextFieldRootOwnProps = GetPropDefTypes<typeof textFieldRootPropDefs> & {\n  defaultValue?: string | number;\n  value?: string | number;\n  type?:\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'hidden'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'\n    | 'week';\n};\ntype TextFieldInputProps = ComponentPropsWithout<\n  'input',\n  NotInputTextualAttributes | 'color' | 'defaultValue' | 'size' | 'type' | 'value'\n>;\ninterface TextFieldRootProps extends TextFieldInputProps, MarginProps, TextFieldRootOwnProps {}\nconst TextFieldRoot = React.forwardRef<TextFieldRootElement, TextFieldRootProps>(\n  (props, forwardedRef) => {\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const { children, className, color, radius, style, ...inputProps } = extractProps(\n      props,\n      textFieldRootPropDefs,\n      marginPropDefs\n    );\n    return (\n      <div\n        data-accent-color={color}\n        data-radius={radius}\n        style={style}\n        className={classNames('rt-TextFieldRoot', className)}\n        onPointerDown={(event) => {\n          const target = event.target as HTMLElement;\n          if (target.closest('input, button, a')) return;\n\n          const input = inputRef.current;\n          if (!input) return;\n\n          // Same selector as in the CSS to find the right slot\n          const isRightSlot = target.closest(`\n            .rt-TextFieldSlot[data-side='right'],\n            .rt-TextFieldSlot:not([data-side='right']) ~ .rt-TextFieldSlot:not([data-side='left'])\n          `);\n\n          const cursorPosition = isRightSlot ? input.value.length : 0;\n\n          requestAnimationFrame(() => {\n            // Only some input types support this, browsers will throw an error if not supported\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange#:~:text=Note%20that%20according,not%20support%20selection%22.\n            try {\n              input.setSelectionRange(cursorPosition, cursorPosition);\n            } catch {}\n            input.focus();\n          });\n        }}\n      >\n        <input\n          spellCheck=\"false\"\n          {...inputProps}\n          ref={composeRefs(inputRef, forwardedRef)}\n          className=\"rt-reset rt-TextFieldInput\"\n        />\n        {children}\n      </div>\n    );\n  }\n);\nTextFieldRoot.displayName = 'TextField.Root';\n\ntype TextFieldSlotElement = React.ElementRef<'div'>;\ntype TextFieldSlotOwnProps = GetPropDefTypes<typeof textFieldSlotPropDefs>;\ninterface TextFieldSlotProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    TextFieldSlotOwnProps {}\nconst TextFieldSlot = React.forwardRef<TextFieldSlotElement, TextFieldSlotProps>(\n  (props, forwardedRef) => {\n    const { className, color, side, ...slotProps } = extractProps(props, textFieldSlotPropDefs);\n    return (\n      <div\n        data-accent-color={color}\n        data-side={side}\n        {...slotProps}\n        ref={forwardedRef}\n        className={classNames('rt-TextFieldSlot', className)}\n      />\n    );\n  }\n);\nTextFieldSlot.displayName = 'TextField.Slot';\n\nexport { TextFieldRoot as Root, TextFieldSlot as Slot };\nexport type { TextFieldRootProps as RootProps, TextFieldSlotProps as SlotProps };\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { paddingPropDefs } from '../props/padding.props.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\nimport { flexPropDefs } from './flex.props.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst textFieldRootPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...radiusPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nconst sides = ['left', 'right'] as const;\n\nconst textFieldSlotPropDefs = {\n  side: { type: 'enum', values: sides },\n  ...colorPropDef,\n  gap: flexPropDefs.gap,\n  px: paddingPropDefs.px,\n  pl: paddingPropDefs.pl,\n  pr: paddingPropDefs.pr,\n} satisfies {\n  side: PropDef<(typeof sides)[number]>;\n  gap: typeof flexPropDefs.gap;\n  px: typeof paddingPropDefs.px;\n  pl: typeof paddingPropDefs.pl;\n  pr: typeof paddingPropDefs.pr;\n};\n\nexport { textFieldRootPropDefs, textFieldSlotPropDefs };\n", "'use client';\n\nimport * as React from 'react';\nimport { useCallbackRef } from 'radix-ui/internal';\n\nimport {\n  AccessibleIcon,\n  Box,\n  Button,\n  Flex,\n  Grid,\n  Heading,\n  IconButton,\n  Kbd,\n  Popover,\n  ScrollArea,\n  Text,\n  Tooltip,\n} from '../index.js';\nimport { Theme, useThemeContext } from './theme.js';\nimport { inert } from '../helpers/inert.js';\nimport { getMatchingGrayColor } from '../helpers/get-matching-gray-color.js';\nimport { themePropDefs } from './theme.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ninterface ThemePanelProps extends Omit<ThemePanelImplProps, keyof ThemePanelImplPrivateProps> {\n  defaultOpen?: boolean;\n}\nconst ThemePanel = React.forwardRef<ThemePanelImplElement, ThemePanelProps>(\n  ({ defaultOpen = true, ...props }, forwardedRef) => {\n    const [open, setOpen] = React.useState(defaultOpen);\n    return <ThemePanelImpl {...props} ref={forwardedRef} open={open} onOpenChange={setOpen} />;\n  }\n);\nThemePanel.displayName = 'ThemePanel';\n\ntype ThemePanelImplElement = React.ElementRef<'div'>;\ninterface ThemePanelImplPrivateProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}\ninterface ThemePanelImplProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    ThemePanelImplPrivateProps {\n  onAppearanceChange?: (value: 'light' | 'dark') => void;\n}\nconst ThemePanelImpl = React.forwardRef<ThemePanelImplElement, ThemePanelImplProps>(\n  (props, forwardedRef) => {\n    const { open, onOpenChange, onAppearanceChange: onAppearanceChangeProp, ...panelProps } = props;\n    const themeContext = useThemeContext();\n    const {\n      appearance,\n      onAppearanceChange,\n      accentColor,\n      onAccentColorChange,\n      grayColor,\n      onGrayColorChange,\n      panelBackground,\n      onPanelBackgroundChange,\n      radius,\n      onRadiusChange,\n      scaling,\n      onScalingChange,\n    } = themeContext;\n\n    const hasOnAppearanceChangeProp = onAppearanceChangeProp !== undefined;\n    const handleAppearanceChangeProp = useCallbackRef(onAppearanceChangeProp);\n    const handleAppearanceChange = React.useCallback(\n      (value: 'light' | 'dark') => {\n        const cleanup = disableAnimation();\n\n        if (appearance !== 'inherit') {\n          onAppearanceChange(value);\n          return;\n        }\n\n        if (hasOnAppearanceChangeProp) {\n          handleAppearanceChangeProp(value);\n        } else {\n          setResolvedAppearance(value);\n          updateRootAppearanceClass(value);\n        }\n\n        cleanup();\n      },\n      [appearance, onAppearanceChange, hasOnAppearanceChangeProp, handleAppearanceChangeProp]\n    );\n\n    const autoMatchedGray = getMatchingGrayColor(accentColor);\n    const resolvedGrayColor = grayColor === 'auto' ? autoMatchedGray : grayColor;\n\n    const [copyState, setCopyState] = React.useState<'idle' | 'copying' | 'copied'>('idle');\n    async function handleCopyThemeConfig() {\n      const theme = {\n        appearance: appearance === themePropDefs.appearance.default ? undefined : appearance,\n        accentColor: accentColor === themePropDefs.accentColor.default ? undefined : accentColor,\n        grayColor: grayColor === themePropDefs.grayColor.default ? undefined : grayColor,\n        panelBackground:\n          panelBackground === themePropDefs.panelBackground.default ? undefined : panelBackground,\n        radius: radius === themePropDefs.radius.default ? undefined : radius,\n        scaling: scaling === themePropDefs.scaling.default ? undefined : scaling,\n      } satisfies GetPropDefTypes<typeof themePropDefs>;\n\n      const props = Object.keys(theme)\n        .filter((key) => theme[key as keyof typeof theme] !== undefined)\n        .map((key) => `${key}=\"${theme[key as keyof typeof theme]}\"`)\n        .join(' ');\n\n      const textToCopy = props ? `<Theme ${props}>` : '<Theme>';\n\n      setCopyState('copying');\n      await navigator.clipboard.writeText(textToCopy);\n      setCopyState('copied');\n      setTimeout(() => setCopyState('idle'), 2000);\n    }\n\n    const [resolvedAppearance, setResolvedAppearance] = React.useState<'light' | 'dark' | null>(\n      appearance === 'inherit' ? null : appearance\n    );\n\n    const keyboardInputElement = `\n      [contenteditable],\n      [role=\"combobox\"],\n      [role=\"listbox\"],\n      [role=\"menu\"],\n      input:not([type=\"radio\"], [type=\"checkbox\"]),\n      select,\n      textarea\n    `;\n\n    // quickly show/hide using \"T\" keypress\n    React.useEffect(() => {\n      function handleKeydown(event: KeyboardEvent) {\n        const isModifierActive = event.altKey || event.ctrlKey || event.shiftKey || event.metaKey;\n        const isKeyboardInputActive = document.activeElement?.closest(keyboardInputElement);\n        const isKeyT = event.key?.toUpperCase() === 'T' && !isModifierActive;\n        if (isKeyT && !isKeyboardInputActive) {\n          onOpenChange(!open);\n        }\n      }\n      document.addEventListener('keydown', handleKeydown);\n      return () => document.removeEventListener('keydown', handleKeydown);\n    }, [onOpenChange, open, keyboardInputElement]);\n\n    // quickly toggle appearance using \"D\" keypress\n    React.useEffect(() => {\n      function handleKeydown(event: KeyboardEvent) {\n        const isModifierActive = event.altKey || event.ctrlKey || event.shiftKey || event.metaKey;\n        const isKeyboardInputActive = document.activeElement?.closest(keyboardInputElement);\n        const isKeyD = event.key?.toUpperCase() === 'D' && !isModifierActive;\n        if (isKeyD && !isKeyboardInputActive) {\n          handleAppearanceChange(resolvedAppearance === 'light' ? 'dark' : 'light');\n        }\n      }\n      document.addEventListener('keydown', handleKeydown);\n      return () => document.removeEventListener('keydown', handleKeydown);\n    }, [handleAppearanceChange, resolvedAppearance, keyboardInputElement]);\n\n    React.useEffect(() => {\n      const root = document.documentElement;\n      const body = document.body;\n\n      function update() {\n        const hasDarkClass =\n          root.classList.contains('dark') ||\n          root.classList.contains('dark-theme') ||\n          body.classList.contains('dark') ||\n          body.classList.contains('dark-theme');\n\n        if (appearance === 'inherit') {\n          setResolvedAppearance(hasDarkClass ? 'dark' : 'light');\n        } else {\n          setResolvedAppearance(appearance);\n        }\n      }\n\n      const classNameObserver = new MutationObserver(function (mutations) {\n        mutations.forEach(function (mutation) {\n          if (mutation.attributeName === 'class') {\n            update();\n          }\n        });\n      });\n\n      update();\n\n      // Observe <html> and <body> for `class` changes only when the appearance is inherited from them\n      if (appearance === 'inherit') {\n        classNameObserver.observe(root, { attributes: true });\n        classNameObserver.observe(body, { attributes: true });\n      }\n\n      return () => classNameObserver.disconnect();\n    }, [appearance]);\n\n    return (\n      <Theme asChild radius=\"medium\" scaling=\"100%\">\n        <Flex\n          direction=\"column\"\n          position=\"fixed\"\n          top=\"0\"\n          right=\"0\"\n          mr=\"4\"\n          mt=\"4\"\n          // @ts-ignore\n          inert={open ? undefined : inert}\n          {...panelProps}\n          ref={forwardedRef}\n          style={{\n            zIndex: 9999,\n            overflow: 'hidden',\n            maxHeight: 'calc(100vh - var(--space-4) - var(--space-4))',\n            borderRadius: 'var(--radius-4)',\n            backgroundColor: 'var(--color-panel-solid)',\n            transformOrigin: 'top center',\n            transitionProperty: 'transform, box-shadow',\n            transitionDuration: '200ms',\n            transitionTimingFunction: open ? 'ease-out' : 'ease-in',\n            transform: open ? 'none' : 'translateX(105%)',\n            boxShadow: open ? 'var(--shadow-5)' : 'var(--shadow-2)',\n            ...props.style,\n          }}\n        >\n          <ScrollArea>\n            <Box flexGrow=\"1\" p=\"5\" position=\"relative\">\n              <Box position=\"absolute\" top=\"0\" right=\"0\" m=\"2\">\n                <Tooltip\n                  content=\"Press T to show/hide the Theme Panel\"\n                  side=\"bottom\"\n                  sideOffset={6}\n                >\n                  <Kbd asChild size=\"3\" tabIndex={0} className=\"rt-ThemePanelShortcut\">\n                    <button onClick={() => onOpenChange(!open)}>T</button>\n                  </Kbd>\n                </Tooltip>\n              </Box>\n\n              <Heading size=\"5\" trim=\"both\" as=\"h3\" mb=\"5\">\n                Theme\n              </Heading>\n\n              <Text id=\"accent-color-title\" as=\"p\" size=\"2\" weight=\"medium\" mt=\"5\">\n                Accent color\n              </Text>\n\n              <Grid columns=\"10\" gap=\"2\" mt=\"3\" role=\"group\" aria-labelledby=\"accent-color-title\">\n                {themePropDefs.accentColor.values.map((color) => (\n                  <label\n                    key={color}\n                    className=\"rt-ThemePanelSwatch\"\n                    style={{ backgroundColor: `var(--${color}-9)` }}\n                  >\n                    <Tooltip\n                      content={`${upperFirst(color)}${\n                        accentColor === 'gray' && resolvedGrayColor !== 'gray'\n                          ? ` (${upperFirst(resolvedGrayColor)})`\n                          : ''\n                      }`}\n                    >\n                      <input\n                        className=\"rt-ThemePanelSwatchInput\"\n                        type=\"radio\"\n                        name=\"accentColor\"\n                        value={color}\n                        checked={accentColor === color}\n                        onChange={(event) =>\n                          onAccentColorChange(event.target.value as typeof accentColor)\n                        }\n                      />\n                    </Tooltip>\n                  </label>\n                ))}\n              </Grid>\n\n              <Flex asChild align=\"center\" justify=\"between\">\n                <Text as=\"p\" id=\"gray-color-title\" size=\"2\" weight=\"medium\" mt=\"5\">\n                  Gray color\n                </Text>\n              </Flex>\n\n              <Grid columns=\"10\" gap=\"2\" mt=\"3\" role=\"group\" aria-labelledby=\"gray-color-title\">\n                {themePropDefs.grayColor.values.map((gray) => (\n                  <Flex key={gray} asChild align=\"center\" justify=\"center\">\n                    <label\n                      className=\"rt-ThemePanelSwatch\"\n                      style={{\n                        backgroundColor:\n                          gray === 'auto'\n                            ? `var(--${autoMatchedGray}-9)`\n                            : gray === 'gray'\n                            ? 'var(--gray-9)'\n                            : `var(--${gray}-9)`,\n                        // we override --gray so pure gray doesn't exist anymore\n                        // recover something as close as possible by desaturating\n                        filter: gray === 'gray' ? 'saturate(0)' : undefined,\n                      }}\n                    >\n                      <Tooltip\n                        content={`${upperFirst(gray)}${\n                          gray === 'auto' ? ` (${upperFirst(autoMatchedGray)})` : ''\n                        }`}\n                      >\n                        <input\n                          className=\"rt-ThemePanelSwatchInput\"\n                          type=\"radio\"\n                          name=\"grayColor\"\n                          value={gray}\n                          checked={grayColor === gray}\n                          onChange={(event) =>\n                            onGrayColorChange(event.target.value as typeof grayColor)\n                          }\n                        />\n                      </Tooltip>\n                    </label>\n                  </Flex>\n                ))}\n              </Grid>\n\n              <Text id=\"appearance-title\" as=\"p\" size=\"2\" weight=\"medium\" mt=\"5\">\n                Appearance\n              </Text>\n\n              <Grid columns=\"2\" gap=\"2\" mt=\"3\" role=\"group\" aria-labelledby=\"appearance-title\">\n                {(['light', 'dark'] as const).map((value) => (\n                  <label key={value} className=\"rt-ThemePanelRadioCard\">\n                    <input\n                      className=\"rt-ThemePanelRadioCardInput\"\n                      type=\"radio\"\n                      name=\"appearance\"\n                      value={value}\n                      checked={resolvedAppearance === value}\n                      onChange={(event) =>\n                        handleAppearanceChange(event.target.value as 'light' | 'dark')\n                      }\n                    />\n                    <Flex align=\"center\" justify=\"center\" height=\"32px\" gap=\"2\">\n                      {value === 'light' ? (\n                        <svg\n                          width=\"15\"\n                          height=\"15\"\n                          viewBox=\"0 0 15 15\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          style={{ margin: '0 -1px' }}\n                        >\n                          <path\n                            d=\"M7.5 0C7.77614 0 8 0.223858 8 0.5V2.5C8 2.77614 7.77614 3 7.5 3C7.22386 3 7 2.77614 7 2.5V0.5C7 0.223858 7.22386 0 7.5 0ZM2.1967 2.1967C2.39196 2.00144 2.70854 2.00144 2.90381 2.1967L4.31802 3.61091C4.51328 3.80617 4.51328 4.12276 4.31802 4.31802C4.12276 4.51328 3.80617 4.51328 3.61091 4.31802L2.1967 2.90381C2.00144 2.70854 2.00144 2.39196 2.1967 2.1967ZM0.5 7C0.223858 7 0 7.22386 0 7.5C0 7.77614 0.223858 8 0.5 8H2.5C2.77614 8 3 7.77614 3 7.5C3 7.22386 2.77614 7 2.5 7H0.5ZM2.1967 12.8033C2.00144 12.608 2.00144 12.2915 2.1967 12.0962L3.61091 10.682C3.80617 10.4867 4.12276 10.4867 4.31802 10.682C4.51328 10.8772 4.51328 11.1938 4.31802 11.3891L2.90381 12.8033C2.70854 12.9986 2.39196 12.9986 2.1967 12.8033ZM12.5 7C12.2239 7 12 7.22386 12 7.5C12 7.77614 12.2239 8 12.5 8H14.5C14.7761 8 15 7.77614 15 7.5C15 7.22386 14.7761 7 14.5 7H12.5ZM10.682 4.31802C10.4867 4.12276 10.4867 3.80617 10.682 3.61091L12.0962 2.1967C12.2915 2.00144 12.608 2.00144 12.8033 2.1967C12.9986 2.39196 12.9986 2.70854 12.8033 2.90381L11.3891 4.31802C11.1938 4.51328 10.8772 4.51328 10.682 4.31802ZM8 12.5C8 12.2239 7.77614 12 7.5 12C7.22386 12 7 12.2239 7 12.5V14.5C7 14.7761 7.22386 15 7.5 15C7.77614 15 8 14.7761 8 14.5V12.5ZM10.682 10.682C10.8772 10.4867 11.1938 10.4867 11.3891 10.682L12.8033 12.0962C12.9986 12.2915 12.9986 12.608 12.8033 12.8033C12.608 12.9986 12.2915 12.9986 12.0962 12.8033L10.682 11.3891C10.4867 11.1938 10.4867 10.8772 10.682 10.682ZM5.5 7.5C5.5 6.39543 6.39543 5.5 7.5 5.5C8.60457 5.5 9.5 6.39543 9.5 7.5C9.5 8.60457 8.60457 9.5 7.5 9.5C6.39543 9.5 5.5 8.60457 5.5 7.5ZM7.5 4.5C5.84315 4.5 4.5 5.84315 4.5 7.5C4.5 9.15685 5.84315 10.5 7.5 10.5C9.15685 10.5 10.5 9.15685 10.5 7.5C10.5 5.84315 9.15685 4.5 7.5 4.5Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                        </svg>\n                      ) : (\n                        <svg\n                          width=\"15\"\n                          height=\"15\"\n                          viewBox=\"0 0 15 15\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          style={{ margin: '0 -1px' }}\n                        >\n                          <path\n                            d=\"M2.89998 0.499976C2.89998 0.279062 2.72089 0.0999756 2.49998 0.0999756C2.27906 0.0999756 2.09998 0.279062 2.09998 0.499976V1.09998H1.49998C1.27906 1.09998 1.09998 1.27906 1.09998 1.49998C1.09998 1.72089 1.27906 1.89998 1.49998 1.89998H2.09998V2.49998C2.09998 2.72089 2.27906 2.89998 2.49998 2.89998C2.72089 2.89998 2.89998 2.72089 2.89998 2.49998V1.89998H3.49998C3.72089 1.89998 3.89998 1.72089 3.89998 1.49998C3.89998 1.27906 3.72089 1.09998 3.49998 1.09998H2.89998V0.499976ZM5.89998 3.49998C5.89998 3.27906 5.72089 3.09998 5.49998 3.09998C5.27906 3.09998 5.09998 3.27906 5.09998 3.49998V4.09998H4.49998C4.27906 4.09998 4.09998 4.27906 4.09998 4.49998C4.09998 4.72089 4.27906 4.89998 4.49998 4.89998H5.09998V5.49998C5.09998 5.72089 5.27906 5.89998 5.49998 5.89998C5.72089 5.89998 5.89998 5.72089 5.89998 5.49998V4.89998H6.49998C6.72089 4.89998 6.89998 4.72089 6.89998 4.49998C6.89998 4.27906 6.72089 4.09998 6.49998 4.09998H5.89998V3.49998ZM1.89998 6.49998C1.89998 6.27906 1.72089 6.09998 1.49998 6.09998C1.27906 6.09998 1.09998 6.27906 1.09998 6.49998V7.09998H0.499976C0.279062 7.09998 0.0999756 7.27906 0.0999756 7.49998C0.0999756 7.72089 0.279062 7.89998 0.499976 7.89998H1.09998V8.49998C1.09998 8.72089 1.27906 8.89997 1.49998 8.89997C1.72089 8.89997 1.89998 8.72089 1.89998 8.49998V7.89998H2.49998C2.72089 7.89998 2.89998 7.72089 2.89998 7.49998C2.89998 7.27906 2.72089 7.09998 2.49998 7.09998H1.89998V6.49998ZM8.54406 0.98184L8.24618 0.941586C8.03275 0.917676 7.90692 1.1655 8.02936 1.34194C8.17013 1.54479 8.29981 1.75592 8.41754 1.97445C8.91878 2.90485 9.20322 3.96932 9.20322 5.10022C9.20322 8.37201 6.82247 11.0878 3.69887 11.6097C3.45736 11.65 3.20988 11.6772 2.96008 11.6906C2.74563 11.702 2.62729 11.9535 2.77721 12.1072C2.84551 12.1773 2.91535 12.2458 2.98667 12.3128L3.05883 12.3795L3.31883 12.6045L3.50684 12.7532L3.62796 12.8433L3.81491 12.9742L3.99079 13.089C4.11175 13.1651 4.23536 13.2375 4.36157 13.3059L4.62496 13.4412L4.88553 13.5607L5.18837 13.6828L5.43169 13.7686C5.56564 13.8128 5.70149 13.8529 5.83857 13.8885C5.94262 13.9155 6.04767 13.9401 6.15405 13.9622C6.27993 13.9883 6.40713 14.0109 6.53544 14.0298L6.85241 14.0685L7.11934 14.0892C7.24637 14.0965 7.37436 14.1002 7.50322 14.1002C11.1483 14.1002 14.1032 11.1453 14.1032 7.50023C14.1032 7.25044 14.0893 7.00389 14.0623 6.76131L14.0255 6.48407C13.991 6.26083 13.9453 6.04129 13.8891 5.82642C13.8213 5.56709 13.7382 5.31398 13.6409 5.06881L13.5279 4.80132L13.4507 4.63542L13.3766 4.48666C13.2178 4.17773 13.0353 3.88295 12.8312 3.60423L12.6782 3.40352L12.4793 3.16432L12.3157 2.98361L12.1961 2.85951L12.0355 2.70246L11.8134 2.50184L11.4925 2.24191L11.2483 2.06498L10.9562 1.87446L10.6346 1.68894L10.3073 1.52378L10.1938 1.47176L9.95488 1.3706L9.67791 1.2669L9.42566 1.1846L9.10075 1.09489L8.83599 1.03486L8.54406 0.98184ZM10.4032 5.30023C10.4032 4.27588 10.2002 3.29829 9.83244 2.40604C11.7623 3.28995 13.1032 5.23862 13.1032 7.50023C13.1032 10.593 10.596 13.1002 7.50322 13.1002C6.63646 13.1002 5.81597 12.9036 5.08355 12.5522C6.5419 12.0941 7.81081 11.2082 8.74322 10.0416C8.87963 10.2284 9.10028 10.3497 9.34928 10.3497C9.76349 10.3497 10.0993 10.0139 10.0993 9.59971C10.0993 9.24256 9.84965 8.94373 9.51535 8.86816C9.57741 8.75165 9.63653 8.63334 9.6926 8.51332C9.88358 8.63163 10.1088 8.69993 10.35 8.69993C11.0403 8.69993 11.6 8.14028 11.6 7.44993C11.6 6.75976 11.0406 6.20024 10.3505 6.19993C10.3853 5.90487 10.4032 5.60464 10.4032 5.30023Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                        </svg>\n                      )}\n                      <Text size=\"1\" weight=\"medium\">\n                        {upperFirst(value)}\n                      </Text>\n                    </Flex>\n                  </label>\n                ))}\n              </Grid>\n\n              <Text id=\"radius-title\" as=\"p\" size=\"2\" weight=\"medium\" mt=\"5\">\n                Radius\n              </Text>\n\n              <Grid columns=\"5\" gap=\"2\" mt=\"3\" role=\"group\" aria-labelledby=\"radius-title\">\n                {themePropDefs.radius.values.map((value) => (\n                  <Flex key={value} direction=\"column\" align=\"center\">\n                    <label className=\"rt-ThemePanelRadioCard\">\n                      <input\n                        className=\"rt-ThemePanelRadioCardInput\"\n                        type=\"radio\"\n                        name=\"radius\"\n                        id={`theme-panel-radius-${value}`}\n                        value={value}\n                        checked={radius === value}\n                        onChange={(event) => onRadiusChange(event.target.value as typeof radius)}\n                      />\n                      <Theme asChild radius={value}>\n                        <Box\n                          m=\"3\"\n                          width=\"32px\"\n                          height=\"32px\"\n                          style={{\n                            borderTopLeftRadius: value === 'full' ? '80%' : 'var(--radius-5)',\n                            backgroundImage:\n                              'linear-gradient(to bottom right, var(--accent-3), var(--accent-4))',\n                            borderTop: '2px solid var(--accent-a8)',\n                            borderLeft: '2px solid var(--accent-a8)',\n                          }}\n                        />\n                      </Theme>\n                    </label>\n                    <Box asChild pt=\"2\">\n                      <Text asChild size=\"1\" color=\"gray\">\n                        <label htmlFor={`theme-panel-radius-${value}`}>{upperFirst(value)}</label>\n                      </Text>\n                    </Box>\n                  </Flex>\n                ))}\n              </Grid>\n\n              <Text id=\"scaling-title\" as=\"p\" size=\"2\" weight=\"medium\" mt=\"5\">\n                Scaling\n              </Text>\n\n              <Grid columns=\"5\" gap=\"2\" mt=\"3\" role=\"group\" aria-labelledby=\"scaling-title\">\n                {themePropDefs.scaling.values.map((value) => (\n                  <label key={value} className=\"rt-ThemePanelRadioCard\">\n                    <input\n                      className=\"rt-ThemePanelRadioCardInput\"\n                      type=\"radio\"\n                      name=\"scaling\"\n                      value={value}\n                      checked={scaling === value}\n                      onChange={(event) => onScalingChange(event.target.value as typeof scaling)}\n                    />\n\n                    <Flex align=\"center\" justify=\"center\" height=\"32px\">\n                      <Theme asChild scaling={value}>\n                        <Flex align=\"center\" justify=\"center\">\n                          <Text size=\"1\" weight=\"medium\">\n                            {upperFirst(value)}\n                          </Text>\n                        </Flex>\n                      </Theme>\n                    </Flex>\n                  </label>\n                ))}\n              </Grid>\n\n              <Flex mt=\"5\" align=\"center\" gap=\"2\">\n                <Text id=\"panel-background-title\" as=\"p\" size=\"2\" weight=\"medium\">\n                  Panel background\n                </Text>\n\n                <Popover.Root>\n                  <Popover.Trigger>\n                    <IconButton size=\"1\" variant=\"ghost\" color=\"gray\">\n                      <AccessibleIcon label=\"Learn more about panel background options\">\n                        <svg\n                          width=\"15\"\n                          height=\"15\"\n                          viewBox=\"0 0 15 15\"\n                          fill=\"currentColor\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <path\n                            d=\"M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM8.24992 4.49999C8.24992 4.9142 7.91413 5.24999 7.49992 5.24999C7.08571 5.24999 6.74992 4.9142 6.74992 4.49999C6.74992 4.08577 7.08571 3.74999 7.49992 3.74999C7.91413 3.74999 8.24992 4.08577 8.24992 4.49999ZM6.00003 5.99999H6.50003H7.50003C7.77618 5.99999 8.00003 6.22384 8.00003 6.49999V9.99999H8.50003H9.00003V11H8.50003H7.50003H6.50003H6.00003V9.99999H6.50003H7.00003V6.99999H6.50003H6.00003V5.99999Z\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                      </AccessibleIcon>\n                    </IconButton>\n                  </Popover.Trigger>\n\n                  <Popover.Content size=\"1\" style={{ maxWidth: 220 }} side=\"top\" align=\"center\">\n                    <Text as=\"p\" size=\"2\">\n                      Whether Card and Table panels are translucent, showing some of\u00A0the background\n                      behind them.\n                    </Text>\n                  </Popover.Content>\n                </Popover.Root>\n              </Flex>\n\n              <Grid\n                columns=\"2\"\n                gap=\"2\"\n                mt=\"3\"\n                role=\"group\"\n                aria-labelledby=\"panel-background-title\"\n              >\n                {themePropDefs.panelBackground.values.map((value) => (\n                  <label key={value} className=\"rt-ThemePanelRadioCard\">\n                    <input\n                      className=\"rt-ThemePanelRadioCardInput\"\n                      type=\"radio\"\n                      name=\"panelBackground\"\n                      value={value}\n                      checked={panelBackground === value}\n                      onChange={(event) =>\n                        onPanelBackgroundChange(event.target.value as typeof panelBackground)\n                      }\n                    />\n                    <Flex align=\"center\" justify=\"center\" height=\"32px\" gap=\"2\">\n                      {value === 'solid' ? (\n                        <svg\n                          width=\"15\"\n                          height=\"15\"\n                          viewBox=\"0 0 15 15\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          style={{ margin: '0 -2px' }}\n                        >\n                          <path\n                            d=\"M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                        </svg>\n                      ) : (\n                        <svg\n                          width=\"15\"\n                          height=\"15\"\n                          viewBox=\"0 0 15 15\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          style={{ margin: '0 -2px' }}\n                        >\n                          <path\n                            opacity=\".05\"\n                            d=\"M6.78296 13.376C8.73904 9.95284 8.73904 5.04719 6.78296 1.62405L7.21708 1.37598C9.261 4.95283 9.261 10.0472 7.21708 13.624L6.78296 13.376Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".1\"\n                            d=\"M7.28204 13.4775C9.23929 9.99523 9.23929 5.00475 7.28204 1.52248L7.71791 1.2775C9.76067 4.9119 9.76067 10.0881 7.71791 13.7225L7.28204 13.4775Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".15\"\n                            d=\"M7.82098 13.5064C9.72502 9.99523 9.72636 5.01411 7.82492 1.50084L8.26465 1.26285C10.2465 4.92466 10.2451 10.085 8.26052 13.7448L7.82098 13.5064Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".2\"\n                            d=\"M8.41284 13.429C10.1952 9.92842 10.1957 5.07537 8.41435 1.57402L8.85999 1.34729C10.7139 4.99113 10.7133 10.0128 8.85841 13.6559L8.41284 13.429Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".25\"\n                            d=\"M9.02441 13.2956C10.6567 9.8379 10.6586 5.17715 9.03005 1.71656L9.48245 1.50366C11.1745 5.09919 11.1726 9.91629 9.47657 13.5091L9.02441 13.2956Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".3\"\n                            d=\"M9.66809 13.0655C11.1097 9.69572 11.1107 5.3121 9.67088 1.94095L10.1307 1.74457C11.6241 5.24121 11.6231 9.76683 10.1278 13.2622L9.66809 13.0655Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".35\"\n                            d=\"M10.331 12.7456C11.5551 9.52073 11.5564 5.49103 10.3347 2.26444L10.8024 2.0874C12.0672 5.42815 12.0659 9.58394 10.7985 12.9231L10.331 12.7456Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".4\"\n                            d=\"M11.0155 12.2986C11.9938 9.29744 11.9948 5.71296 11.0184 2.71067L11.4939 2.55603C12.503 5.6589 12.502 9.35178 11.4909 12.4535L11.0155 12.2986Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".45\"\n                            d=\"M11.7214 11.668C12.4254 9.01303 12.4262 5.99691 11.7237 3.34116L12.2071 3.21329C12.9318 5.95292 12.931 9.05728 12.2047 11.7961L11.7214 11.668Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".5\"\n                            d=\"M12.4432 10.752C12.8524 8.63762 12.8523 6.36089 12.4429 4.2466L12.9338 4.15155C13.3553 6.32861 13.3554 8.66985 12.9341 10.847L12.4432 10.752Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            d=\"M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                        </svg>\n                      )}\n                      <Text size=\"1\" weight=\"medium\">\n                        {upperFirst(value)}\n                      </Text>\n                    </Flex>\n                  </label>\n                ))}\n              </Grid>\n\n              <Button mt=\"5\" style={{ width: '100%' }} onClick={handleCopyThemeConfig}>\n                {copyState === 'copied' ? 'Copied' : 'Copy Theme'}\n              </Button>\n            </Box>\n          </ScrollArea>\n        </Flex>\n      </Theme>\n    );\n  }\n);\nThemePanelImpl.displayName = 'ThemePanelImpl';\n\n// https://github.com/pacocoursey/next-themes/blob/main/packages/next-themes/src/index.tsx#L285\nfunction disableAnimation() {\n  const css = document.createElement('style');\n  css.appendChild(\n    document.createTextNode(\n      `*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}`\n    )\n  );\n  document.head.appendChild(css);\n\n  return () => {\n    // Force restyle\n    (() => window.getComputedStyle(document.body))();\n\n    // Wait for next tick before removing\n    setTimeout(() => {\n      document.head.removeChild(css);\n    }, 1);\n  };\n}\n\nfunction upperFirst(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction updateRootAppearanceClass(appearance: 'light' | 'dark') {\n  const root = document.documentElement;\n  const hasLightTheme = root.classList.contains('light-theme');\n  const hasDarkTheme = root.classList.contains('dark-theme');\n  const hasLight = root.classList.contains('light');\n  const hasDark = root.classList.contains('dark');\n\n  if (hasLightTheme || hasDarkTheme) {\n    root.classList.remove('light-theme', 'dark-theme');\n    root.style.colorScheme = appearance;\n    root.classList.add(`${appearance}-theme`);\n  }\n\n  if (hasLight || hasDark) {\n    root.classList.remove('light', 'dark');\n    root.style.colorScheme = appearance;\n    root.classList.add(appearance);\n  }\n\n  if (!hasLightTheme && !hasDarkTheme && !hasLight && !hasDark) {\n    root.style.colorScheme = appearance;\n    root.classList.add(appearance);\n  }\n}\n\nexport { ThemePanel };\nexport type { ThemePanelProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Tooltip as TooltipPrimitive } from 'radix-ui';\n\nimport { Text } from './text.js';\nimport { Theme } from './theme.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { tooltipPropDefs } from './tooltip.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TooltipElement = React.ElementRef<typeof TooltipPrimitive.Content>;\ntype TooltipOwnProps = GetPropDefTypes<typeof tooltipPropDefs>;\ninterface TooltipProps\n  extends React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Root>,\n    ComponentPropsWithout<typeof TooltipPrimitive.Content, RemovedProps | 'content'>,\n    TooltipOwnProps {\n  content: React.ReactNode;\n  container?: React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Portal>['container'];\n}\nconst Tooltip = React.forwardRef<TooltipElement, TooltipProps>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    open,\n    defaultOpen,\n    onOpenChange,\n    delayDuration,\n    disableHoverableContent,\n    content,\n    container,\n    forceMount,\n    ...tooltipContentProps\n  } = extractProps(props, tooltipPropDefs);\n  const rootProps = { open, defaultOpen, onOpenChange, delayDuration, disableHoverableContent };\n  return (\n    <TooltipPrimitive.Root {...rootProps}>\n      <TooltipPrimitive.Trigger asChild>{children}</TooltipPrimitive.Trigger>\n      <TooltipPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <TooltipPrimitive.Content\n            sideOffset={4}\n            collisionPadding={10}\n            {...tooltipContentProps}\n            asChild={false}\n            ref={forwardedRef}\n            className={classNames('rt-TooltipContent', className)}\n          >\n            <Text as=\"p\" className=\"rt-TooltipText\" size=\"1\">\n              {content}\n            </Text>\n            <TooltipPrimitive.Arrow className=\"rt-TooltipArrow\" />\n          </TooltipPrimitive.Content>\n        </Theme>\n      </TooltipPrimitive.Portal>\n    </TooltipPrimitive.Root>\n  );\n});\nTooltip.displayName = 'Tooltip';\n\nexport { Tooltip };\nexport type { TooltipProps };\n", "import { widthPropDefs } from '../props/width.props.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst tooltipPropDefs = {\n  content: { type: 'ReactNode', required: true },\n  width: widthPropDefs.width,\n  minWidth: widthPropDefs.minWidth,\n  maxWidth: { ...widthPropDefs.maxWidth, default: '360px' },\n} satisfies {\n  width: PropDef<string>;\n  minWidth: PropDef<string>;\n  maxWidth: PropDef<string>;\n  content: PropDef<React.ReactNode>;\n};\n\ntype TooltipOwnProps = GetPropDefTypes<typeof tooltipPropDefs & typeof widthPropDefs>;\n\nexport { tooltipPropDefs };\nexport type { TooltipOwnProps };\n"],
  "mappings": "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",
  "names": ["i", "AccessibleIcon", "AccessibleIconPrimitive", "A", "p", "m", "n", "g", "s", "e", "import_classnames", "asChildPropDef", "widthPropDefs", "heightPropDefs", "contentSizes", "dialogContentPropDefs", "asChildPropDef", "widthPropDefs", "heightPropDefs", "o", "import_classnames", "accentColors", "grayColors", "colorPropDef", "accentColorPropDef", "highContrastPropDef", "leadingTrimValues", "leadingTrimPropDef", "textAlignValues", "textAlignPropDef", "textWrapValues", "textWrapPropDef", "truncatePropDef", "weights", "weightPropDef", "as", "sizes", "headingPropDefs", "asChildPropDef", "weightPropDef", "textAlignPropDef", "leadingTrimPropDef", "truncatePropDef", "textWrapPropDef", "colorPropDef", "highContrastPropDef", "breakpoints", "hasOwnProperty", "obj", "key", "isResponsiveObject", "obj", "key", "breakpoints", "getResponsiveStyles", "className", "customProperties", "args", "responsiveClassNames", "getResponsiveClassNames", "responsiveCustomProperties", "getResponsiveCustomProperties", "allowArbitraryValues", "value", "propValues", "parseValue", "classNames", "getBaseClassName", "isResponsiveObject", "object", "bp", "hasOwnProperty", "breakpoints", "baseClassName", "bpClassName", "delimiter", "matchedValue", "isNegative", "minus", "absoluteValue", "styles", "prop", "customProperty", "key", "mergeStyles", "styles", "result", "style", "mergePropDefs", "args", "extractProps", "props", "propDefs", "className", "style", "extractedProps", "allPropDefs", "key", "value", "propDef", "isResponsiveObject", "isResponsivePropDef", "propClassName", "getResponsiveClassNames", "classNames", "propDefValues", "propClassNames", "propCustomProperties", "getResponsiveStyles", "mergeStyles", "marginValues", "marginPropDefs", "Heading", "props", "forwardedRef", "children", "className", "asChild", "Tag", "color", "headingProps", "extractProps", "headingPropDefs", "marginPropDefs", "Slot", "classNames", "o", "import_classnames", "as", "sizes", "textPropDefs", "asChildPropDef", "weightPropDef", "textAlignPropDef", "leadingTrimPropDef", "truncatePropDef", "textWrapPropDef", "colorPropDef", "highContrastPropDef", "Text", "props", "forwardedRef", "children", "className", "asChild", "Tag", "color", "textProps", "extractProps", "textPropDefs", "marginPropDefs", "Slot", "classNames", "e", "import_classnames", "getMatchingGrayColor", "accentColor", "radii", "radiusPropDef", "appearances", "panelBackgrounds", "scalings", "themePropDefs", "asChildPropDef", "accentColors", "grayColors", "radii", "noop", "ThemeContext", "useThemeContext", "context", "Theme", "props", "forwardedRef", "TooltipPrimitive", "Direction", "ThemeRoot", "ThemeImpl", "appearanceProp", "themePropDefs", "accentColorProp", "grayColorProp", "panelBackgroundProp", "radiusProp", "scalingProp", "hasBackground", "rootProps", "appearance", "setAppearance", "React", "accentColor", "setAccentColor", "grayColor", "setGrayColor", "panelBackground", "setPanelBackground", "radius", "setRadius", "scaling", "setScaling", "asChild", "isRoot", "hasBackgroundProp", "onAppearanceChange", "onAccentColorChange", "onGrayColorChange", "onPanelBackgroundChange", "onRadiusChange", "onScalingChange", "themeProps", "Comp", "Slot", "resolvedGrayColor", "getMatchingGrayColor", "isExplicitAppearance", "classNames", "o", "requireReactElement", "children", "child", "AlertDialogRoot", "props", "AlertDialogPrimitive", "AlertDialogTrigger", "children", "forwardedRef", "requireReactElement", "AlertDialogContent", "align", "alignPropDef", "propDefs", "alertDialogContentPropDefs", "alignClassName", "extractProps", "className", "forceMount", "container", "contentProps", "Theme", "classNames", "AlertDialogTitle", "Heading", "AlertDialogDescription", "Text", "AlertDialogAction", "AlertDialogCancel", "AspectRatio", "AspectRatioPrimitive", "r", "import_classnames", "sizes", "variants", "avatarPropDefs", "asChildPropDef", "accentColorPropDef", "highContrastPropDef", "radiusPropDef", "a", "getSubtree", "options", "content", "asChild", "children", "firstChild", "Avatar", "props", "forwardedRef", "asChild", "children", "className", "style", "color", "radius", "imageProps", "extractProps", "avatarPropDefs", "marginPropDefs", "AvatarPrimitive", "classNames", "getSubtree", "AvatarImpl", "fallback", "status", "setStatus", "o", "import_classnames", "sizes", "variants", "badgePropDefs", "asChildPropDef", "accentColorPropDef", "highContrastPropDef", "radiusPropDef", "Badge", "props", "forwardedRef", "asChild", "className", "color", "radius", "badgeProps", "extractProps", "badgePropDefs", "marginPropDefs", "Comp", "Slot", "classNames", "o", "import_classnames", "Blockquote", "props", "forwardedRef", "asChild", "children", "className", "blockquoteProps", "Comp", "Slot", "Text", "classNames", "o", "import_classnames", "Root", "SlotPrimitive", "Slot", "Slottable", "as", "displayValues", "boxPropDefs", "asChildPropDef", "paddingValues", "paddingPropDefs", "overflowValues", "positionValues", "positionEdgeValues", "flexShrinkValues", "flexGrowValues", "layoutPropDefs", "paddingPropDefs", "widthPropDefs", "heightPropDefs", "Box", "props", "forwardedRef", "className", "asChild", "Tag", "boxProps", "extractProps", "boxPropDefs", "layoutPropDefs", "marginPropDefs", "Slot", "classNames", "t", "import_classnames", "o", "import_classnames", "sizes", "variants", "baseButtonPropDefs", "asChildPropDef", "accentColorPropDef", "highContrastPropDef", "radiusPropDef", "o", "import_classnames", "gapValues", "gapPropDefs", "as", "displayValues", "directionValues", "alignValues", "justifyValues", "wrapValues", "flexPropDefs", "asChildPropDef", "parseJustifyValue", "gapPropDefs", "value", "Flex", "props", "forwardedRef", "className", "asChild", "Tag", "flexProps", "extractProps", "flexPropDefs", "layoutPropDefs", "marginPropDefs", "Slot", "classNames", "n", "import_classnames", "sizes", "spinnerPropDefs", "Spinner", "props", "forwardedRef", "className", "children", "loading", "spinnerProps", "extractProps", "spinnerPropDefs", "marginPropDefs", "spinner", "classNames", "Flex", "VisuallyHidden", "VisuallyHiddenPrimitive", "Root", "mapResponsiveProp", "propValue", "mapValue", "key", "value", "mapCalloutSizeToTextSize", "size", "mapButtonSizeToSpinnerSize", "BaseButton", "props", "forwardedRef", "size", "baseButtonPropDefs", "className", "children", "asChild", "color", "radius", "disabled", "baseButtonProps", "extractProps", "marginPropDefs", "Comp", "Slot", "classNames", "VisuallyHidden", "Flex", "Spinner", "mapResponsiveProp", "mapButtonSizeToSpinnerSize", "Button", "className", "props", "forwardedRef", "BaseButton", "classNames", "o", "import_classnames", "sizes", "variants", "calloutRootPropDefs", "asChildPropDef", "accentColorPropDef", "highContrastPropDef", "CalloutContext", "CalloutRoot", "props", "forwardedRef", "size", "calloutRootPropDefs", "asChild", "children", "className", "color", "rootProps", "extractProps", "marginPropDefs", "Comp", "Slot", "classNames", "CalloutIcon", "CalloutText", "Text", "mapResponsiveProp", "mapCalloutSizeToTextSize", "r", "import_classnames", "sizes", "variants", "cardPropDefs", "asChildPropDef", "Card", "props", "forwardedRef", "asChild", "className", "cardProps", "extractProps", "cardPropDefs", "marginPropDefs", "Comp", "Slot", "classNames", "o", "import_classnames", "Primitive", "e", "useDirection", "Direction", "CHECKBOX_GROUP_NAME", "createCheckboxGroupContext", "createCheckboxGroupScope", "Context", "RovingFocus", "CheckboxPrimitive", "useRovingFocusGroupScope", "useCheckboxScope", "CheckboxGroupProvider", "useCheckboxGroupContext", "CheckboxGroup", "props", "forwardedRef", "__scopeCheckboxGroup", "name", "defaultValue", "valueProp", "required", "disabled", "orientation", "dir", "loop", "onValueChange", "groupProps", "rovingFocusGroupScope", "direction", "value", "setValue", "useControllableState", "handleItemCheck", "itemValue", "prevValue", "handleItemUncheck", "Primitive", "ITEM_NAME", "CheckboxGroupItem", "itemProps", "context", "isDisabled", "checkboxScope", "ref", "composedRefs", "useComposedRefs", "checked", "INDICATOR_NAME", "CheckboxGroupIndicator", "indicatorProps", "Root", "Item", "Indicator", "as", "displayValues", "columnsValues", "rowsValues", "flowValues", "alignValues", "justifyValues", "gridPropDefs", "asChildPropDef", "parseGridValue", "parseJustifyValue", "gapPropDefs", "value", "sizes", "variants", "checkboxCardsRootPropDefs", "asChildPropDef", "colorPropDef", "highContrastPropDef", "gridPropDefs", "sizes", "variants", "baseCheckboxPropDefs", "colorPropDef", "highContrastPropDef", "r", "import_classnames", "Grid", "props", "forwardedRef", "className", "asChild", "Tag", "gridProps", "extractProps", "gridPropDefs", "layoutPropDefs", "marginPropDefs", "Slot", "classNames", "ThickDividerHorizontalIcon", "React", "props", "forwardedRef", "ThickCheckIcon", "ChevronDownIcon", "ThickChevronRightIcon", "CHECKBOX_CARD_GROUP_NAME", "createCheckboxCardsContext", "Context", "createCheckboxGroupScope", "useCheckboxGroupScope", "CheckboxCardsProvider", "useCheckboxCardsContext", "CheckboxCardsRoot", "props", "forwardedRef", "__scopeCheckboxCards", "className", "color", "rootProps", "extractProps", "checkboxCardsRootPropDefs", "marginPropDefs", "checkboxGroupScope", "Grid", "H", "classNames", "CheckboxCardsItem", "children", "style", "context", "checkboxClassName", "baseCheckboxPropDefs", "ThickCheckIcon", "o", "import_classnames", "checkboxGroupRootPropDefs", "asChildPropDef", "baseCheckboxPropDefs", "CHECKBOX_GROUP_NAME", "createCheckboxGroupContext", "Context", "createCheckboxGroupScope", "useCheckboxGroupScope", "CheckboxGroupProvider", "useCheckboxGroupContext", "CheckboxGroupRoot", "color", "checkboxGroupRootPropDefs", "highContrast", "size", "variant", "props", "forwardedRef", "__scopeCheckboxGroup", "className", "rootProps", "extractProps", "marginPropDefs", "checkboxGroupScope", "H", "classNames", "CheckboxGroupItem", "_props", "children", "style", "Text", "CheckboxGroupItemCheckbox", "context", "ThickCheckIcon", "e", "import_classnames", "Checkbox", "props", "forwardedRef", "className", "color", "checkedProp", "defaultCheckedProp", "onCheckedChange", "checkboxProps", "extractProps", "checkboxPropDefs", "marginPropDefs", "checked", "setChecked", "useControllableState", "CheckboxPrimitive", "classNames", "ThickDividerHorizontalIcon", "ThickCheckIcon", "r", "import_classnames", "sizes", "variants", "codePropDefs", "asChildPropDef", "weightPropDef", "accentColorPropDef", "highContrastPropDef", "truncatePropDef", "textWrapPropDef", "Code", "props", "forwardedRef", "asChild", "className", "color", "codeProps", "extractProps", "codePropDefs", "marginPropDefs", "resolvedColor", "Comp", "Slot", "classNames", "o", "import_classnames", "sizes", "displayValues", "alignValues", "containerPropDefs", "asChildPropDef", "parseDisplayValue", "parseAlignValue", "value", "Container", "width", "minWidth", "maxWidth", "height", "minHeight", "maxHeight", "props", "forwardedRef", "asChild", "children", "className", "containerProps", "extractProps", "containerPropDefs", "layoutPropDefs", "marginPropDefs", "innerClassName", "innerStyle", "widthPropDefs", "heightPropDefs", "Comp", "Slot", "classNames", "getSubtree", "e", "import_classnames", "r", "import_classnames", "sizes", "scrollbarsValues", "scrollAreaPropDefs", "asChildPropDef", "radiusPropDef", "extractMarginProps", "props", "m", "mx", "my", "mt", "mr", "mb", "ml", "rest", "import_classnames", "marginValues", "marginPropDefs", "getMarginStyles", "props", "mClassNames", "mCustomProperties", "getResponsiveStyles", "mxClassNames", "mxCustomProperties", "myClassNames", "myCustomProperties", "mtClassNames", "mtCustomProperties", "mrClassNames", "mrCustomProperties", "mbClassNames", "mbCustomProperties", "mlClassNames", "mlCustomProperties", "classNames", "mergeStyles", "ScrollArea", "props", "forwardedRef", "marginRest", "marginProps", "extractMarginProps", "marginClassNames", "marginCustomProperties", "getMarginStyles", "asChild", "children", "className", "style", "type", "scrollHideDelay", "dir", "size", "scrollAreaPropDefs", "radius", "scrollbars", "viewportProps", "ScrollAreaPrimitive", "classNames", "mergeStyles", "getSubtree", "getResponsiveClassNames", "contentSizes", "contentVariants", "baseMenuContentPropDefs", "colorPropDef", "highContrastPropDef", "baseMenuItemPropDefs", "asChildPropDef", "baseMenuCheckboxItemPropDefs", "baseMenuRadioItemPropDefs", "ContextMenuRoot", "props", "ContextMenuPrimitive", "ContextMenuTrigger", "children", "forwardedRef", "requireReactElement", "ContextMenuContentContext", "ContextMenuContent", "themeContext", "useThemeContext", "size", "contextMenuContentPropDefs", "variant", "highContrast", "className", "color", "container", "forceMount", "contentProps", "extractProps", "resolvedColor", "Theme", "classNames", "ScrollArea", "ContextMenuLabel", "ContextMenuItem", "contextMenuItemPropDefs", "shortcut", "itemProps", "Slot", "ContextMenuGroup", "ContextMenuRadioGroup", "ContextMenuRadioItem", "contextMenuRadioItemPropDefs", "ThickCheckIcon", "ContextMenuCheckboxItem", "contextMenuCheckboxItemPropDefs", "ContextMenuSub", "ContextMenuSubTrigger", "subTriggerProps", "ThickChevronRightIcon", "ContextMenuSubContent", "subContentProps", "ContextMenuSeparator", "m", "i", "l", "import_classnames", "t", "alignValues", "orientationValues", "sizes", "dataListRootPropDefs", "leadingTrimPropDef", "dataListItemPropDefs", "dataListLabelPropDefs", "widthPropDefs", "colorPropDef", "highContrastPropDef", "DataListRoot", "props", "forwardedRef", "className", "dataListProps", "extractProps", "dataListRootPropDefs", "marginPropDefs", "Text", "classNames", "DataListItem", "itemProps", "dataListItemPropDefs", "DataListLabel", "color", "labelProps", "dataListLabelPropDefs", "DataListValue", "children", "D", "p", "m", "s", "g", "n", "o", "import_classnames", "DialogRoot", "props", "DialogPrimitive", "DialogTrigger", "children", "forwardedRef", "requireReactElement", "DialogContent", "align", "alignPropDef", "propDefs", "dialogContentPropDefs", "alignClassName", "extractProps", "className", "forceMount", "container", "contentProps", "Theme", "classNames", "DialogTitle", "Heading", "DialogDescription", "Text", "DialogClose", "o", "import_classnames", "DropdownMenuRoot", "props", "DropdownMenuPrimitive", "DropdownMenuTrigger", "children", "forwardedRef", "requireReactElement", "DropdownMenuContentContext", "DropdownMenuContent", "themeContext", "useThemeContext", "size", "dropdownMenuContentPropDefs", "variant", "highContrast", "className", "color", "container", "forceMount", "contentProps", "extractProps", "resolvedColor", "Theme", "classNames", "ScrollArea", "DropdownMenuLabel", "DropdownMenuItem", "dropdownMenuItemPropDefs", "shortcut", "itemProps", "Slot", "DropdownMenuGroup", "DropdownMenuRadioGroup", "DropdownMenuRadioItem", "dropdownMenuRadioItemPropDefs", "ThickCheckIcon", "DropdownMenuCheckboxItem", "dropdownMenuCheckboxItemPropDefs", "DropdownMenuSub", "DropdownMenuSubTrigger", "subTriggerProps", "ThickChevronRightIcon", "DropdownMenuSubContent", "subContentProps", "DropdownMenuSeparator", "o", "import_classnames", "emPropDefs", "asChildPropDef", "truncatePropDef", "textWrapPropDef", "Em", "props", "forwardedRef", "asChild", "className", "emProps", "extractProps", "emPropDefs", "Comp", "Slot", "classNames", "C", "p", "s", "r", "import_classnames", "contentSizes", "hoverCardContentPropDefs", "asChildPropDef", "widthPropDefs", "heightPropDefs", "HoverCardRoot", "props", "HoverCardPrimitive", "HoverCardTrigger", "children", "className", "forwardedRef", "classNames", "requireReactElement", "HoverCardContent", "forceMount", "container", "contentProps", "extractProps", "hoverCardContentPropDefs", "Theme", "t", "import_classnames", "IconButton", "className", "props", "forwardedRef", "BaseButton", "classNames", "o", "import_classnames", "sides", "clipValues", "paddingValues", "insetPropDefs", "asChildPropDef", "parsePaddingValue", "value", "Inset", "props", "forwardedRef", "asChild", "className", "insetProps", "extractProps", "insetPropDefs", "marginPropDefs", "Comp", "Slot", "classNames", "o", "import_classnames", "sizes", "kbdPropDefs", "asChildPropDef", "Kbd", "props", "forwardedRef", "asChild", "className", "kbdProps", "extractProps", "kbdPropDefs", "marginPropDefs", "Comp", "Slot", "classNames", "o", "import_classnames", "sizes", "underline", "linkPropDefs", "asChildPropDef", "weightPropDef", "leadingTrimPropDef", "truncatePropDef", "textWrapPropDef", "accentColorPropDef", "highContrastPropDef", "Link", "props", "forwardedRef", "children", "className", "color", "asChild", "linkProps", "extractProps", "linkPropDefs", "Text", "classNames", "m", "v", "i", "P", "s", "o", "import_classnames", "contentSizes", "popoverContentPropDefs", "asChildPropDef", "widthPropDefs", "heightPropDefs", "PopoverRoot", "props", "PopoverPrimitive", "PopoverTrigger", "children", "forwardedRef", "requireReactElement", "PopoverContent", "className", "forceMount", "container", "contentProps", "extractProps", "popoverContentPropDefs", "Theme", "classNames", "PopoverClose", "PopoverAnchor", "Portal", "PortalPrimitive", "Root", "o", "import_classnames", "sizes", "variants", "progressPropDefs", "colorPropDef", "highContrastPropDef", "radiusPropDef", "Progress", "props", "forwardedRef", "className", "style", "color", "radius", "duration", "progressProps", "extractProps", "progressPropDefs", "marginPropDefs", "ProgressPrimitive", "classNames", "mergeStyles", "o", "import_classnames", "quotePropDefs", "asChildPropDef", "truncatePropDef", "textWrapPropDef", "Quote", "props", "forwardedRef", "asChild", "className", "quoteProps", "extractProps", "quotePropDefs", "Comp", "Slot", "classNames", "i", "p", "o", "import_classnames", "sizes", "variants", "radioCardsRootPropDefs", "asChildPropDef", "colorPropDef", "highContrastPropDef", "gridPropDefs", "RadioCardsRoot", "props", "forwardedRef", "className", "color", "rootProps", "extractProps", "radioCardsRootPropDefs", "marginPropDefs", "Grid", "RadioGroupPrimitive", "classNames", "RadioCardsItem", "o", "import_classnames", "sizes", "variants", "radioGroupRootPropDefs", "asChildPropDef", "colorPropDef", "highContrastPropDef", "RADIO_GROUP_NAME", "createRadioGroupContext", "Context", "RadioGroupPrimitive", "useRadioGroupScope", "RadioGroupProvider", "useRadioGroupContext", "RadioGroupRoot", "color", "radioGroupRootPropDefs", "highContrast", "size", "variant", "props", "forwardedRef", "__scopeRadioGroup", "className", "rootProps", "extractProps", "marginPropDefs", "radioGroupScope", "classNames", "RadioGroupItem", "_props", "children", "style", "Text", "RadioGroupItemRadio", "context", "o", "import_classnames", "sizes", "variants", "baseRadioPropDefs", "colorPropDef", "highContrastPropDef", "Radio", "props", "forwardedRef", "ref", "className", "color", "onChange", "onValueChange", "radioProps", "extractProps", "radioPropDefs", "marginPropDefs", "composeEventHandlers", "event", "composeRefs", "classNames", "e", "import_classnames", "Reset", "className", "children", "props", "forwardedRef", "Slot", "classNames", "requireReactElement", "e", "import_classnames", "sizes", "variants", "segmentedControlRootPropDefs", "radiusPropDef", "SegmentedControlRoot", "props", "forwardedRef", "className", "children", "radius", "valueProp", "defaultValueProp", "onValueChangeProp", "rootProps", "extractProps", "segmentedControlRootPropDefs", "marginPropDefs", "value", "setValue", "useControllableState", "ToggleGroupPrimitive", "classNames", "SegmentedControlItem", "o", "import_classnames", "sizes", "displayValues", "sectionPropDefs", "asChildPropDef", "parseDisplayValue", "value", "Section", "props", "forwardedRef", "asChild", "className", "sectionProps", "extractProps", "sectionPropDefs", "layoutPropDefs", "marginPropDefs", "Comp", "Slot", "classNames", "e", "import_classnames", "sizes", "selectRootPropDefs", "triggerVariants", "selectTriggerPropDefs", "colorPropDef", "radiusPropDef", "contentVariants", "selectContentPropDefs", "highContrastPropDef", "SelectContext", "SelectRoot", "props", "children", "size", "selectRootPropDefs", "rootProps", "SelectPrimitive", "SelectTrigger", "forwardedRef", "context", "className", "color", "radius", "placeholder", "triggerProps", "extractProps", "selectTriggerPropDefs", "marginPropDefs", "classNames", "ChevronDownIcon", "SelectContent", "container", "contentProps", "selectContentPropDefs", "themeContext", "useThemeContext", "resolvedColor", "Theme", "ScrollAreaPrimitive", "SelectItem", "itemProps", "ThickCheckIcon", "SelectGroup", "SelectLabel", "SelectSeparator", "r", "import_classnames", "orientationValues", "sizes", "separatorPropDefs", "colorPropDef", "Separator", "props", "forwardedRef", "className", "color", "decorative", "separatorProps", "extractProps", "separatorPropDefs", "marginPropDefs", "classNames", "o", "import_classnames", "o", "inert", "skeletonPropDefs", "widthPropDefs", "heightPropDefs", "Skeleton", "props", "forwardedRef", "children", "className", "loading", "skeletonProps", "extractProps", "skeletonPropDefs", "marginPropDefs", "Tag", "Slot", "classNames", "inert", "e", "import_classnames", "sizes", "variants", "sliderPropDefs", "colorPropDef", "highContrastPropDef", "radiusPropDef", "Slider", "props", "forwardedRef", "className", "color", "radius", "tabIndex", "sliderProps", "extractProps", "sliderPropDefs", "marginPropDefs", "SliderPrimitive", "classNames", "value", "index", "o", "import_classnames", "strongPropDefs", "asChildPropDef", "truncatePropDef", "textWrapPropDef", "Strong", "props", "forwardedRef", "asChild", "className", "strongProps", "extractProps", "strongPropDefs", "Comp", "Slot", "classNames", "t", "import_classnames", "sizes", "variants", "switchPropDefs", "colorPropDef", "highContrastPropDef", "radiusPropDef", "Switch", "props", "forwardedRef", "className", "color", "radius", "switchProps", "extractProps", "switchPropDefs", "marginPropDefs", "SwitchPrimitive", "classNames", "v", "N", "o", "import_classnames", "sizes", "wrapValues", "justifyValues", "baseTabListPropDefs", "colorPropDef", "highContrastPropDef", "tabNavLinkPropDefs", "asChildPropDef", "TabNavRoot", "props", "forwardedRef", "children", "className", "color", "rootProps", "extractProps", "tabNavRootPropDefs", "marginPropDefs", "NavigationMenu", "classNames", "TabNavLink", "asChild", "linkProps", "getSubtree", "b", "T", "f", "d", "m", "P", "R", "e", "import_classnames", "sizes", "variants", "layoutValues", "tableRootPropDefs", "rowAlign", "tableRowPropDefs", "parseAlignValue", "value", "justifyValues", "tableCellPropDefs", "parseJustifyValue", "widthPropDefs", "paddingPropDefs", "TableRoot", "props", "forwardedRef", "layoutPropDef", "rootPropDefs", "tableRootPropDefs", "className", "children", "layout", "rootProps", "extractProps", "marginPropDefs", "tableLayoutClassNames", "getResponsiveClassNames", "classNames", "ScrollArea", "TableHeader", "TableBody", "TableRow", "rowProps", "tableRowPropDefs", "TableCell", "cellProps", "tableCellPropDefs", "TableColumnHeaderCell", "TableRowHeaderCell", "f", "b", "m", "P", "s", "import_classnames", "tabsRootPropDefs", "asChildPropDef", "tabsContentPropDefs", "TabsRoot", "props", "forwardedRef", "className", "rootProps", "extractProps", "marginPropDefs", "TabsPrimitive", "classNames", "TabsList", "color", "listProps", "tabsListPropDefs", "TabsTrigger", "children", "triggerProps", "TabsContent", "contentProps", "e", "import_classnames", "sizes", "variants", "resizeValues", "textAreaPropDefs", "colorPropDef", "radiusPropDef", "TextArea", "props", "forwardedRef", "className", "color", "radius", "style", "textAreaProps", "extractProps", "textAreaPropDefs", "marginPropDefs", "classNames", "t", "import_classnames", "sizes", "variants", "textFieldRootPropDefs", "colorPropDef", "radiusPropDef", "sides", "textFieldSlotPropDefs", "flexPropDefs", "paddingPropDefs", "TextFieldRoot", "props", "forwardedRef", "inputRef", "children", "className", "color", "radius", "style", "inputProps", "extractProps", "textFieldRootPropDefs", "marginPropDefs", "classNames", "event", "target", "input", "cursorPosition", "composeRefs", "TextFieldSlot", "side", "slotProps", "textFieldSlotPropDefs", "e", "ThemePanel", "defaultOpen", "props", "forwardedRef", "open", "setOpen", "ThemePanelImpl", "onOpenChange", "onAppearanceChangeProp", "panelProps", "themeContext", "useThemeContext", "appearance", "onAppearanceChange", "accentColor", "onAccentColorChange", "grayColor", "onGrayColorChange", "panelBackground", "onPanelBackgroundChange", "radius", "onRadiusChange", "scaling", "onScalingChange", "hasOnAppearanceChangeProp", "handleAppearanceChangeProp", "useCallbackRef", "handleAppearanceChange", "value", "cleanup", "disableAnimation", "setResolvedAppearance", "updateRootAppearanceClass", "autoMatchedGray", "getMatchingGrayColor", "resolvedGrayColor", "copyState", "setCopyState", "handleCopyThemeConfig", "theme", "themePropDefs", "key", "textToCopy", "resolvedAppearance", "keyboardInputElement", "handleKeydown", "event", "isModifierActive", "isKeyboardInputActive", "root", "body", "update", "hasDarkClass", "classNameObserver", "mutations", "mutation", "Theme", "Flex", "inert", "ScrollArea", "Box", "Tooltip", "Kbd", "Heading", "Text", "Grid", "color", "upperFirst", "gray", "Popover", "IconButton", "AccessibleIcon", "Button", "css", "string", "hasLightTheme", "hasDarkTheme", "hasLight", "hasDark", "o", "import_classnames", "tooltipPropDefs", "widthPropDefs", "Tooltip", "props", "forwardedRef", "children", "className", "open", "defaultOpen", "onOpenChange", "delayDuration", "disableHoverableContent", "content", "container", "forceMount", "tooltipContentProps", "extractProps", "tooltipPropDefs", "rootProps", "TooltipPrimitive", "Theme", "classNames", "Text"]
}
